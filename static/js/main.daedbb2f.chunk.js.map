{"version":3,"sources":["Components/Admin/AdminHeader.js","Components/Admin/AdminNav.js","Components/util/validators.js","Components/hooks/http-hook.js","Components/UIElements/LoadingSpinner.js","Components/FormElements/Button.js","Components/FormElements/ImageUpload.js","Components/FormElements/Input.js","Components/hooks/form-hook.js","Components/UIElements/Backdrop.js","Components/UIElements/Modal.js","Components/UIElements/ErrorModal.js","Components/Admin/AdminStore/AdminAddItem.js","Components/Admin/AdminStore/AdminCategory.js","Components/Admin/AdminStore/AdminDeleteItem.js","Components/Admin/AdminStore/AdminTime.js","Components/Admin/AdminStore/AdminUpdate.js","Components/Admin/AdminStore/AdminValue.js","Components/Admin/AdminPanel.js","Components/Header/Navigation.js","Components/Header/SideDrawer.js","images/logo.png","Components/Header/Header.js","Components/Footer/Footer.js","context/cart-reducer.js","context/cart-context.jsx","helper.js","Components/Body/ProductCard.js","Components/UIElements/Card.js","Components/hooks/date-hook.js","Components/Body/Store.js","Components/Body/Cart.js","Components/Body/Order.js","App.js","index.js"],"names":["AdminHeader","className","AdminNav","changeSection","id","onClick","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","type","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","val","test","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","LoadingSpinner","props","asOverlay","Button","href","size","inverse","danger","children","to","exact","disabled","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","images","setImages","imagesValue","setImagesValue","setSelectedId","filePickerRef","fileReader","FileReader","allImages","onload","result","readAsDataURL","deleteImage","e","target","newImages","newImagesValue","splice","fileIsValid","onInput","imageArea","map","i","style","height","width","src","alt","cursor","ref","display","accept","onChange","event","pickedFile","onInputImgValue","files","console","log","center","click","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","touchHandler","element","min","max","placeholder","onBlur","name","options","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","Backdrop","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onClear","AdminAddItem","categories","setCategories","description","price","category","image","inputHandler","fetchCategories","process","itemSubmitHandler","formData","FormData","append","Authorization","alert","window","location","reload","setOptions","AdminCategory","catId","setCatId","catSubmitHandler","JSON","stringify","deleteCategorySubmitHandler","_id","AdminDeleteItem","items","setItems","itemId","setItemId","fetchItems","deleteItemSubmitHandler","AdminTime","times","setTimes","time","setTime","timeAvailability","setTimeAvailability","startHour","startMinute","endHour","endMinute","day","dayFormState","selectHandler","fetchTimes","fetchTime","available","timeSubmitHandler","parseInt","start","hour","minute","end","marginTop","for","fontWeight","marginBottom","prevAvailibility","checked","margin","AdminUpdateItem","item","setItem","itemAvailability","setItemAvailability","itemFormState","fetchItem","setItemOptions","AdminValue","setValue","fetchValue","valueSubmitHandler","newValue","AdminPanel","section","setSection","AdminUpdate","Navigation","class","SideDrawer","Header","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Logo","Footer","sumItems","cartItems","itemCount","reduce","total","prod","quantity","cartReducer","find","payload","newCartItems","increaseIndex","findIndex","decreaseIndex","CartContext","createContext","initialState","CartContextProvider","contextValues","addProduct","product","removeProduct","increase","decrease","Provider","isInCart","ProductCard","useContext","history","useHistory","Card","useDate","today","setToday","dayId","setDayId","currentHour","setCurrentHour","currentMinute","setCurrentMinute","date","Date","getDay","getHours","getMinutes","Store","allItems","setAllItems","minOrderValue","setMinOrderValue","deliveryHours","setDeliveryHours","deliveryAvailable","setDeliveryAvailable","scrollTo","getMinOrderValue","getDeliveryHours","currentDay","currentDayAvailibility","filterByCategory","filteredItems","innerHTML","categoryValue","toLowerCase","includes","categoryList","cat","backgroundImage","color","showDeliveryHours","item_list","sort","b","itemList","Cart","valid","orderValid","setOrderValid","orderValidation","showCartItems","checkProductQuantity","Geocode","setApiKey","fromAddress","then","results","geometry","lat","lng","marginLeft","Order","stripe","useStripe","street","local","apartament","zipCode_start","zipCode_end","city","email","phoneNumber","formSubmitHandler","line_items","price_data","currency","unit_amount","product_data","customer_email","sessionId","redirectToCheckout","App","routes","path","stripePromise","loadStripe","render","StrictMode"],"mappings":"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","file":"static/js/main.daedbb2f.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./AdminHeader.css\"\r\n\r\nconst AdminHeader = () => {\r\n    return (\r\n        <div className=\"admin-header\">\r\n            Wróć na stronę główną\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminHeader\r\n","import React from 'react'\r\n\r\nconst AdminNav = ({ changeSection }) => {\r\n    return (\r\n        \r\n            <ul>\r\n                <li id=\"0\" onClick={changeSection}>Dodaj</li>\r\n                <li id={1} onClick={changeSection}>Zmień</li>\r\n                <li id={2} onClick={changeSection}>Usuń</li>\r\n                <li id={3} onClick={changeSection}>Kategorie</li>\r\n                <li id={4} onClick={changeSection}>Godziny</li>\r\n                <li id={5} onClick={changeSection}>Min. wartość</li>\r\n            </ul>\r\n        \r\n    )\r\n}\r\n\r\nexport default AdminNav\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const [images, setImages] = useState([]);\n  const [imagesValue, setImagesValue] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    let allImages = images\n    fileReader.onload = () => {\n      if (props.id === \"images\") {\n        allImages.push(fileReader.result)\n        setImages(allImages);\n      }\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n  \n  const pickedHandler = event => {\n    let pickedFile;\n    let newImagesValue\n    let fileIsValid = isValid;\n    setImagesValue([\n      ...imagesValue,\n      event.target.files[0]\n    ]);\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      newImagesValue = [\n        ...imagesValue,\n        pickedFile\n      ]\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    let onInputImgValue\n    if (props.id === \"images\") {onInputImgValue = newImagesValue} else {onInputImgValue = pickedFile}\n    if (props.id === \"image\") console.log(\"image\" );\n    else if (!(props.id === \"image\")) console.log(\"images\" );\n    \n    props.onInput(props.id, onInputImgValue, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  const deleteImage = (e) => {\n    setSelectedId(e.target.id)\n    const newImages = images\n    const newImagesValue = imagesValue\n    if (newImages.length > 0) {\n    newImages.splice(e.target.id, 1);\n    newImagesValue.splice(e.target.id, 1);\n    setImages(newImages)\n    setImagesValue(newImagesValue)\n    setSelectedId(null)\n    }\n    let fileIsValid = isValid;\n    if (newImagesValue.length > 1) {\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, newImagesValue, fileIsValid);\n  };\n\n  const imageArea = images.map((i, id) => \n  (<div style={{height: \"100%\", width: \"100%\"}} key={id}>\n  <img src={i} alt=\"Preview\" id={id} onClick={deleteImage}\n  style={{cursor: 'pointer'}}/>\n  </div>\n  )\n  )\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {props.id === \"images\" && images.length > 0 && imageArea}\n          {!(props.id === \"images\") && previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {props.id === \"images\" && !images.length > 0 && <p>Proszę wybrać zdjęcie produktu.</p>}\n          {!(props.id === \"images\") && !previewUrl && <p>Proszę wybrać zdjęcie produktu.</p>}\n          \n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: action.validators ? validate(action.val, action.validators) : true\n        // isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        min={props.min}\n        max={props.max}\n        // checked={inputState.value}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : props.element === 'select' ? (\n      <select\n        id={props.id}\n        name={props.name}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      >\n        <option value={''}>Wybierz</option>\n        {props.options}\n        </select>\n      ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        {props.header}\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\n\r\nimport ImageUpload from \"../../FormElements/ImageUpload\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\n\r\n\r\nconst AdminAddItem = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n            description: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            price: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            category: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n          image: {\r\n            value: null,\r\n            isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category`\r\n              );\r\n      \r\n              setCategories(responseData.category);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchCategories();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const itemSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            const formData = new FormData();\r\n            formData.append('name', formState.inputs.name.value);\r\n            formData.append('description', formState.inputs.description.value);\r\n            formData.append('price', formState.inputs.price.value);\r\n            formData.append('category', formState.inputs.category.value);\r\n            formData.append('image', formState.inputs.image.value);\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/items/`,\r\n              'POST',\r\n              formData\r\n              ,\r\n              {\r\n                Authorization: 'Bearer '\r\n                //  + auth.token\r\n                // 'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Utworzono produkt\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n    const setOptions = categories.map(i => <option value={i.id}>{i.name}</option>)\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Dodaj danie / produkt</h2>\r\n                <form\r\n                onSubmit={itemSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nazwa produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <ImageUpload\r\n                    center\r\n                    id=\"image\"\r\n                    onInput={inputHandler}\r\n                    errorText=\"Wprowadź zdjęcie produktu.\"\r\n                    />\r\n                    <Input \r\n                    id=\"description\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"Opis produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawny opis.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"price\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Cena\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną cenę.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    {categories.length > 0 && <Input \r\n                    id=\"category\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Kategoria\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną kategorię.\"\r\n                    onInput={inputHandler}\r\n                    options={setOptions}\r\n                    />}\r\n                    <Button type=\"submit\"\r\n                    disabled={!formState.isValid}>\r\n                    DODAJ\r\n                    </Button>\r\n                    {/* <button onClick={() => console.log(formState.inputs)\r\n                     }></button> */}\r\n                </form>\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminAddItem\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { useForm } from \"../../hooks/form-hook\"\r\n\r\n\r\nconst AdminCategory = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [catId, setCatId] = useState(false);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n      const catSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/category/`,\r\n              'POST',\r\n              JSON.stringify({\r\n                name: formState.inputs.name.value\r\n              }),\r\n              {\r\n                'Content-Type': 'application/json'\r\n                //  + auth.token\r\n                // 'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Utworzono kategorię\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category`\r\n              );\r\n      \r\n              setCategories(responseData.category);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchCategories();\r\n      }, [sendRequest])\r\n\r\n    const deleteCategorySubmitHandler = async event => {\r\n        event.preventDefault();\r\n            try {\r\n              await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category/${catId}`,\r\n                'DELETE',\r\n                null,\r\n                // {\r\n                //   Authorization: 'Bearer ' + auth.token\r\n                // }\r\n              );\r\n            alert(\"Usunięto Kategorię\")\r\n            \r\n            window.location.reload()\r\n            } catch (err) {}\r\n        }\r\n\r\n    const choseDeletedCatId = (e) => {\r\n        console.log(e.target.value);\r\n        \r\n        setCatId(e.target.value)\r\n              }\r\n\r\n    const setOptions = categories.map(i => <option value={i._id}>{i.name}</option>)\r\n\r\n    return (\r\n            <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Dodaj kategorię</h2>\r\n                <form\r\n                onSubmit={catSubmitHandler}\r\n                >\r\n                <Input \r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nazwa kategorii\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Button type=\"submit\"\r\n                    disabled={!formState.isValid}>\r\n                    DODAJ\r\n                    </Button>\r\n                    </form>\r\n                <h2>Usuń kategorię</h2>\r\n                {categories.length > 0 ? <select name=\"items\" id=\"items\" onChange={choseDeletedCatId} >\r\n                    <option value={''}>wybierz kategorię</option>\r\n                    {setOptions}\r\n                </select> : <p>Brak Kategorii</p>}\r\n                <Button \r\n                onClick={deleteCategorySubmitHandler}\r\n                disabled={!catId}\r\n                >USUŃ</Button>\r\n            </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminCategory\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from \"../../FormElements/Button\"\r\n\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\n\r\nconst AdminDeleteItem = () => {\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [itemId, setItemId] = useState(false);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/items`\r\n              );\r\n      \r\n              setItems(responseData.items);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchItems();\r\n      }, [sendRequest])\r\n\r\n    const deleteItemSubmitHandler = async event => {\r\n        event.preventDefault();\r\n            try {\r\n              await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/items/${itemId}`,\r\n                'DELETE',\r\n                null,\r\n                // {\r\n                //   Authorization: 'Bearer ' + auth.token\r\n                // }\r\n              );\r\n            alert(\"Usunięto produkt\")\r\n            \r\n            window.location.reload()\r\n            } catch (err) {}\r\n        }\r\n\r\n    const choseDeletedItemId = (e) => {\r\n            setItemId(e.target.value)\r\n              }\r\n\r\n\r\n    const setOptions = items.map(i => <option value={i.id}>{i.name}</option>)\r\n\r\n    return (\r\n            <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Usuń</h2>\r\n                {items.length > 0 ? <select name=\"items\" id=\"items\" onChange={choseDeletedItemId} >\r\n                    <option value={''}>wybierz produkt</option>\r\n                    {setOptions}\r\n                </select> : <p>Brak produktów</p>}\r\n                <Button \r\n                onClick={deleteItemSubmitHandler}\r\n                disabled={!itemId}\r\n                >USUŃ</Button>\r\n            </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminDeleteItem\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\n\r\nconst AdminTime = () => {\r\n    const [times, setTimes] = useState([]);\r\n    const [time, setTime] = useState(false);\r\n    const [timeAvailability, setTimeAvailability] = useState();\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          startHour: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        startMinute: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        endHour: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        endMinute: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n      const [dayFormState, selectHandler] = useForm(\r\n        {\r\n            day: {\r\n              value: '',\r\n              isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchTimes = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/time`\r\n              );\r\n              setTimes(responseData.time);             \r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchTimes();\r\n      }, [sendRequest])\r\n\r\n      useEffect(() => {\r\n        const fetchTime = async () => {\r\n            if(dayFormState.inputs.day.value) {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/time/${dayFormState.inputs.day.value}`\r\n              );\r\n              setTime(responseData.time);\r\n              setTimeAvailability(responseData.time.available);\r\n        } catch (err) {}      \r\n        } else return\r\n    }\r\n    fetchTime();\r\n  }, [sendRequest, dayFormState.inputs.day.value])\r\n    \r\n\r\n    const timeSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/time/${dayFormState.inputs.day.value}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                startHour: parseInt(formState.inputs.startHour.value),\r\n                startMinute: parseInt(formState.inputs.startMinute.value),\r\n                endHour: parseInt(formState.inputs.endHour.value),\r\n                endMinute: parseInt(formState.inputs.endMinute.value),\r\n                available: timeAvailability\r\n              }),\r\n              {\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano Godziny\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n      const changeAvailability = () => {\r\n        setTimeAvailability(prevAvailibility => !prevAvailibility)\r\n    }\r\n\r\n    const setOptions = times.map(i => <option value={i._id}>{i.day}</option>)\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień godziny dowozu</h2>\r\n                {times.length > 0 && <Input \r\n                    id=\"day\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Wybierz dzień\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wybierz poprawny dzień.\"\r\n                    onInput={selectHandler}\r\n                    options={setOptions}\r\n                    />}\r\n                \r\n                {time && <form\r\n                onSubmit={timeSubmitHandler}\r\n                >\r\n                    <div className=\"start\">\r\n                    <span>Start: </span>\r\n                    <Input \r\n                    id=\"startHour\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={23}\r\n                    // label=\"Minimalna wartość zamówienia\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    // errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.start.hour}\r\n                    />\r\n                    :\r\n                    <Input \r\n                    id=\"startMinute\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={59}\r\n                    // label=\"Minimalna wartość zamówienia\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    // errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.start.minute}\r\n                    />\r\n                    </div>\r\n                    <div className=\"end\">\r\n                        <span>Koniec: </span>\r\n                    <Input \r\n                    id=\"endHour\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={23}\r\n                    // label=\"Godzina\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    // errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.end.hour}\r\n                    />\r\n                    :\r\n                    <Input \r\n                    id=\"endMinute\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={59}\r\n                    // label=\"Minimalna wartość zamówienia\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    // errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.end.minute}\r\n                    />\r\n                    <div className='availability' style={{marginTop: \"1em\"}}>\r\n                    <label for='availability' style={{fontWeight: 'bold', marginBottom: '0.5rem'}}>Dowóz aktywny?</label>\r\n                    <input id='availability' type='checkbox' onChange={changeAvailability} checked={timeAvailability} style={{display: 'block', margin: 'auto'}} />\r\n                    </div>\r\n                    \r\n                    </div>\r\n                    <Button type=\"submit\"\r\n                    // disabled={!formState.isValid}\r\n                    >\r\n                    ZMIEŃ GODZINY\r\n                    </Button>\r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminTime\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\n\r\nimport ImageUpload from \"../../FormElements/ImageUpload\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\n\r\n\r\nconst AdminUpdateItem = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [items, setItems] = useState([]);\r\n    const [item, setItem] = useState(false);\r\n    const [itemAvailability, setItemAvailability] = useState(); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n            description: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            price: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            category: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            available: {\r\n                value: '',\r\n                isValid: false\r\n    },\r\n        //   image: {\r\n        //     value: null,\r\n        //     isValid: false\r\n        //   }\r\n        },\r\n        false\r\n      );\r\n\r\n      const [itemFormState, selectHandler] = useForm(\r\n        {\r\n            name: {\r\n              value: '',\r\n              isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category`\r\n              );\r\n      \r\n              setCategories(responseData.category);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    const fetchItems = async () => {\r\n        try {\r\n          const responseData = await sendRequest(\r\n            `${process.env.REACT_APP_BACKEND_URL}/api/items`\r\n          );\r\n  \r\n          setItems(responseData.items);\r\n    } catch (err) {}\r\n      \r\n};\r\n    fetchCategories();\r\n    fetchItems();\r\n      }, [sendRequest])\r\n\r\n      useEffect(() => {\r\n        \r\n            const fetchItem = async () => {\r\n                if(itemFormState.inputs.name.value) {\r\n                try {\r\n                  const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/items/${itemFormState.inputs.name.value}`\r\n                  );\r\n          \r\n                  setItem(responseData.item);\r\n                  setItemAvailability(responseData.item.available)\r\n            } catch (err) {}      \r\n            } else return\r\n        }\r\n    fetchItem();\r\n      }, [sendRequest, itemFormState.inputs.name.value])\r\n    \r\n\r\n    const itemSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            // const formData = new FormData();\r\n            // formData.append('name', formState.inputs.name.value);\r\n            // formData.append('description', formState.inputs.description.value);\r\n            // formData.append('price', formState.inputs.price.value);\r\n            // formData.append('category', formState.inputs.category.value);\r\n            // formData.append('available', itemAvailability);\r\n            // formData.append('image', formState.inputs.image.value);\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/items/${item.id}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                name: formState.inputs.name.value,\r\n                description: formState.inputs.description.value,\r\n                price: formState.inputs.price.value,\r\n                category: formState.inputs.category.value,\r\n                available: itemAvailability,\r\n              }),\r\n              {\r\n                'Content-Type': 'application/json'\r\n                //  + auth.token\r\n                // 'Content-Type': 'application/json'\r\n              }\r\n            //   formData\r\n            //   ,\r\n            //   {\r\n            //     Authorization: 'Bearer '\r\n            //     //  + auth.token\r\n            //     // 'Content-Type': 'application/json'\r\n            //   }\r\n            );\r\n                alert(\"Zaktualizowano produkt\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n    const setOptions = categories.map(i => <option value={i.id}>{i.name}</option>)\r\n    const setItemOptions = items.map(i => <option value={i.id}>{i.name}</option>)\r\n\r\n    const changeAvailability = () => {\r\n        setItemAvailability(prevAvailibility => !prevAvailibility)\r\n    }\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zaktualizuj danie / produkt</h2>\r\n                <Input \r\n                    id=\"name\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Wybierz Produkt\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wybierz poprawny produkt.\"\r\n                    onInput={selectHandler}\r\n                    options={setItemOptions}\r\n                    />\r\n                {item && <form\r\n                onSubmit={itemSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nazwa produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={item.name}\r\n                    />\r\n                    {/* <ImageUpload\r\n                    center\r\n                    id=\"image\"\r\n                    onInput={inputHandler}\r\n                    errorText=\"Wprowadź zdjęcie produktu.\"\r\n                    /> */}\r\n                    <Input \r\n                    id=\"description\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"Opis produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawny opis.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={item.description}\r\n                    />\r\n                    <Input \r\n                    id=\"price\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Cena\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną cenę.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={item.price}\r\n                    />\r\n                    {categories.length > 0 && <Input \r\n                    id=\"category\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Kategoria\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną kategorię.\"\r\n                    onInput={inputHandler}\r\n                    options={setOptions}\r\n                    initialValue={item.category}\r\n                    />}\r\n                    <label for='availability' style={{fontWeight: 'bold', marginBottom: '0.5rem'}}>Produkt dostępny</label>\r\n                    <input id='availability' type='checkbox' onChange={changeAvailability} checked={itemAvailability} style={{display: 'block', margin: 'auto'}} />\r\n                    <Button type=\"submit\"\r\n                    // disabled={!formState.isValid}\r\n                    >\r\n                    ZMIEŃ\r\n                    </Button>\r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminUpdateItem\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\n\r\nconst AdminValue = () => {\r\n    const [value, setValue] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          value: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchValue = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`\r\n              );\r\n              setValue(responseData.value);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchValue();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const valueSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                newValue: parseInt(formState.inputs.value.value)\r\n              }),\r\n              {\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień minimalną wartość zamówienia</h2>\r\n                {value && <form\r\n                onSubmit={valueSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"value\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Minimalna wartość zamówienia\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={value.value}\r\n                    />\r\n                    <Button type=\"submit\"\r\n                    // disabled={!formState.isValid}\r\n                    >\r\n                    ZMIEŃ WARTOŚĆ\r\n                    </Button>\r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminValue\r\n","import React, {useState} from 'react';\r\nimport \"./Admin.css\"\r\nimport AdminNav from './AdminNav';\r\nimport AdminAddItem from './AdminStore/AdminAddItem';\r\nimport AdminCategory from './AdminStore/AdminCategory';\r\nimport AdminDeleteItem from './AdminStore/AdminDeleteItem';\r\nimport AdminTime from './AdminStore/AdminTime';\r\nimport AdminUpdateItem from './AdminStore/AdminUpdate';\r\nimport AdminValue from './AdminStore/AdminValue';\r\n// import AdminStore from './AdminStore/AdminStore';\r\n\r\nconst AdminPanel = () => {\r\n\r\n    const [section, setSection] = useState(\"0\");\r\n\r\n    const changeSection = (e) => {\r\n        console.log(e.target.id);\r\n        \r\n        setSection(e.target.id);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"admin\">\r\n                <div className=\"admin-navigation\">\r\n                    <AdminNav changeSection={changeSection} />\r\n                </div>\r\n                <div className=\"admin-content\">\r\n                {section === \"0\" && <AdminAddItem />}\r\n                {section === \"1\" && <AdminUpdateItem />}\r\n                {section === \"2\" && <AdminDeleteItem />}\r\n                {section === \"3\" && <AdminCategory />}\r\n                {section === \"4\" && <AdminTime />}\r\n                {section === \"5\" && <AdminValue />}\r\n                {/* {section === 1 ? <AdminChar /> : (section === 2 ? <AdminShoop /> : <h2>Witaj, użyj panelu po lewej</h2>)} */}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminPanel\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n\r\n    return (\r\n        \r\n    <ul className='nav'>\r\n        <li className=\"main-navigation\">\r\n            <NavLink to='/'exact>\r\n            Zamów\r\n            </NavLink>\r\n        </li>\r\n        <li className=\"main-navigation\">\r\n            <NavLink to='/koszyk'exact>\r\n            <span class=\"fas fa-shopping-cart\"></span>\r\n            </NavLink>\r\n        </li>\r\n    </ul>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","export default __webpack_public_path__ + \"static/media/logo.f284211f.png\";","import React, {useState} from 'react';\r\nimport './Header.css';\r\nimport Navigation from './Navigation';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport ErrorModal from \"../UIElements/ErrorModal\"\r\nimport SideDrawer from './SideDrawer';\r\nimport Backdrop from '../UIElements/Backdrop';\r\n\r\nimport Logo from '../../images/logo.png'\r\n\r\n\r\nconst Header = () => {\r\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n      const openDrawerHandler = () => {\r\n        setDrawerIsOpen(true);\r\n      };\r\n    \r\n      const closeDrawerHandler = () => {\r\n        setDrawerIsOpen(false);\r\n      };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n            <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n              <nav className=\"main-navigation__drawer-nav\">\r\n          <Navigation />\r\n              </nav>\r\n\r\n            </SideDrawer>\r\n        <div className='header'>\r\n        <Link to= \"/\" className=\"logo-link\" exact>\r\n            <div className='logo title'>\r\n              <img src={Logo} alt=\"logo\" className=\"logo\"></img>\r\n              <span>Niepospolita Restauracja</span>\r\n            </div>\r\n                </Link>\r\n              <button\r\n                className=\"main-navigation__menu-btn\"\r\n                onClick={openDrawerHandler}\r\n                >\r\n                <span />\r\n                <span />\r\n                <span />\r\n              </button>\r\n            <div className='navigation'><Navigation/></div>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport \"./Footer.css\";\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\n\r\nimport Logo from '../../images/logo.png'\r\n\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <Link to= \"/\" className=\"logo-link\" exact>\r\n            <div className=\"footer-logo logo title\">\r\n              <img src={Logo} alt=\"logo\" className=\"logo\"></img>\r\n              <span>Powrót na stronę główną</span>\r\n            </div>\r\n            </Link>\r\n            <div className=\"footer-menu\">\r\n                <h3>MENU</h3>\r\n                <ul className='nav'>\r\n                    <li className=\"main-navigation\">\r\n                    <NavLink to='/'exact>\r\n                    Zamów\r\n                    </NavLink>\r\n                    </li>\r\n                    <li className=\"main-navigation\">\r\n                    <NavLink to='/karta'exact>\r\n                    Koszyk\r\n                    </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export const sumItems = cartItems => {\r\n    return {\r\n        itemCount: cartItems.reduce((total, prod) => total + prod.quantity , 0),\r\n        total: cartItems.reduce((total, prod) => total + (prod.price * prod.quantity), 0)\r\n    }\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_ITEM':\r\n            if(!state.cartItems.find(item => item.id === action.payload.id)) {\r\n                state.cartItems.push({\r\n                    ...action.payload,\r\n                    quantity: 1\r\n                })\r\n            }\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems],\r\n                ...sumItems(state.cartItems)\r\n            }   \r\n        case 'REMOVE_ITEM':\r\n            const newCartItems = state.cartItems.filter(item => item.id !== action.payload.id);\r\n            return {\r\n                ...state,\r\n                cartItems: [...newCartItems],\r\n                ...sumItems(newCartItems)\r\n            }\r\n        case 'INCREASE':\r\n            const increaseIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\r\n            state.cartItems[increaseIndex].quantity++;\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems],\r\n                ...sumItems(state.cartItems)\r\n            }\r\n        case 'DECREASE':\r\n            const decreaseIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\r\n            state.cartItems[decreaseIndex].quantity--;\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems],\r\n                ...sumItems(state.cartItems)\r\n            }\r\n        default:\r\n                return state;\r\n    }\r\n}\r\nexport default cartReducer;","import React, { createContext, useReducer } from 'react';\r\nimport cartReducer from './cart-reducer';\r\n\r\nexport const CartContext = createContext();\r\n\r\nconst initialState = { cartItems: [], itemCount: 0, total: 0 };\r\n\r\nconst CartContextProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(cartReducer, initialState);\r\n    const addProduct = (product) => dispatch({ type: 'ADD_ITEM', payload: product });\r\n    const removeProduct = (product) => dispatch({ type: 'REMOVE_ITEM', payload: product });\r\n    const increase = (product) => dispatch({ type: 'INCREASE', payload: product });\r\n    const decrease = (product) => dispatch({ type: 'DECREASE', payload: product });\r\n\r\n    const contextValues = {\r\n        ...state,\r\n        addProduct,\r\n        removeProduct,\r\n        increase,\r\n        decrease\r\n    }\r\n    return (\r\n        <CartContext.Provider value={ contextValues }>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\nexport default CartContextProvider;","export const isInCart = (product, cartItems) => {\r\n    return cartItems.find(item => item.id === product.id)\r\n}","import React, { useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from '../FormElements/Button';\r\nimport { CartContext } from '../../context/cart-context';\r\nimport { isInCart } from '../../helper';\r\n\r\n\r\nconst ProductCard = ({id, name, price, image, description}) => {\r\n\r\n    const product = { id, name, price, image, description };\r\n    const { addProduct, cartItems } = useContext(CartContext)\r\n    const history = useHistory()\r\n\r\n    const goToCartSection = () => {\r\n          history.push(\"/koszyk\");\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div \r\n            className=\"item-card\"\r\n            >\r\n                <div className=\"item-card__image\">\r\n                <img src={`${process.env.REACT_APP_BACKEND_URL}/${image}`} alt={name}></img>\r\n                </div>\r\n                <div className=\"item-card__info\">\r\n                <p>\r\n                    <span style={{fontWeight: \"bold\"}}>{name}</span>\r\n                    <span style={{fontWeight: \"bold\"}}>{price} zł</span>\r\n                </p>\r\n                {\r\n                    !isInCart(product, cartItems) && <Button onClick={() => {\r\n                        addProduct(product)\r\n                    }}>Dodaj do koszyka</Button>\r\n                }\r\n                {\r\n                    isInCart(product, cartItems) && <Button onClick={() => goToCartSection()}>Przejdź do koszyka</Button>\r\n                }\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductCard\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useDate = () => {\r\n\r\n    const [today, setToday] = useState(false);\r\n    const [dayId, setDayId] = useState(false);\r\n    const [currentHour, setCurrentHour] = useState(false);\r\n    const [currentMinute, setCurrentMinute] = useState(false);\r\n\r\n    useEffect(() => {\r\n    const date = new Date().getDay()\r\n    const hour = new Date().getHours()\r\n    const minute = new Date().getMinutes()\r\n    setCurrentHour(hour)\r\n    setCurrentMinute(minute)\r\n        switch (date) {\r\n            case 0: \r\n                setToday('Niedziela');\r\n                setDayId(\"616866d188b1a5c67bdb3547\")\r\n                break;\r\n            case 1: \r\n                setToday('Poniedziałek');\r\n                setDayId(\"6168665588b1a5c67bdb3539\")\r\n                break;\r\n            case 2: \r\n                setToday('Wtorek');\r\n                setDayId(\"6168666588b1a5c67bdb353b\")\r\n                break;\r\n            case 3: \r\n                setToday('Środa');\r\n                setDayId(\"6168667c88b1a5c67bdb353d\")\r\n                break;\r\n            case 4: \r\n                setToday('Czwartek');\r\n                setDayId(\"6168669588b1a5c67bdb3540\")\r\n                break;\r\n            case 5: \r\n                setToday('Piątek');\r\n                setDayId(\"616866bd88b1a5c67bdb3543\")\r\n                break;\r\n            case 6: \r\n                setToday('Sobota');\r\n                setDayId(\"616866c888b1a5c67bdb3545\")\r\n                break;\r\n            default:\r\n                setToday('Niedziela');\r\n                setDayId(\"616866d188b1a5c67bdb3547\")\r\n                break;\r\n        }\r\n    }, [])\r\n\r\n  return { today, dayId, currentHour, currentMinute };\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\nimport \"./Store.css\";\r\nimport Input from '../FormElements/Input';\r\nimport ProductCard from './ProductCard';\r\nimport Card from '../UIElements/Card'\r\n\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useDate } from '../hooks/date-hook';\r\n\r\n\r\nconst Store = () => {\r\n\r\n    const [items, setItems] = useState();\r\n    const [allItems, setAllItems] = useState();\r\n    const [categories, setCategories] = useState([]);\r\n    const [minOrderValue, setMinOrderValue] = useState();\r\n    const [deliveryHours, setDeliveryHours] = useState(false);\r\n    const [deliveryAvailable, setDeliveryAvailable] = useState(true);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const { today, dayId } = useDate();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        const fetchItems = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/items/`\r\n                  );\r\n                \r\n                setItems(responseData.items)\r\n                setAllItems(responseData.items)\r\n                } catch (err) {}\r\n            }\r\n            const fetchCategories = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/category/`\r\n                  );\r\n                \r\n                setCategories(responseData.category)\r\n                } catch (err) {}\r\n            } \r\n            const getMinOrderValue = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`\r\n                  );\r\n                \r\n                setMinOrderValue(responseData.value)\r\n                } catch (err) {}\r\n            } \r\n            const getDeliveryHours = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/time/`\r\n                  );\r\n                \r\n                  setDeliveryHours(responseData.time)\r\n                  const currentDay = responseData.time.find(time => time._id === dayId)\r\n                  const currentDayAvailibility = currentDay.available\r\n                  setDeliveryAvailable(currentDayAvailibility)\r\n                } catch (err) {}\r\n            } \r\n            fetchItems()\r\n            fetchCategories()\r\n            getMinOrderValue()\r\n            getDeliveryHours()\r\n    }, [sendRequest, dayId])\r\n\r\n    const itemList = () => {\r\n        let item_list\r\n        let sortItems\r\n        if(items) {\r\n            sortItems = items.sort((a, b) => a.name > b.name ? 1 : -1)\r\n            item_list = sortItems.map(i => {\r\n            return (<ProductCard key={i.id} id={i.id} name={i.name} price={i.price} description={i.description} image={i.image} category={i.category} available={i.available} />)\r\n    })\r\n    } return item_list\r\n    }\r\n\r\n    const filterByCategory = (e) => {\r\n        let filteredItems\r\n        if (e.target.innerHTML === \"wszystko\") {\r\n            filteredItems = allItems\r\n        } else {\r\n            const categoryValue = e.target.innerHTML.toLowerCase()\r\n            filteredItems = allItems.filter(i => \r\n                i.category.toLowerCase().includes(categoryValue))\r\n        }\r\n        setItems(filteredItems)\r\n    }\r\n\r\n    const showDeliveryHours = () => {\r\n        let message\r\n        let currentDay\r\n        if (deliveryHours && today && dayId) {\r\n            currentDay = deliveryHours.find(time => time._id === dayId)\r\n            const startHour = currentDay.time.start.hour\r\n            const startMinute = currentDay.time.start.minute\r\n            const endHour = currentDay.time.end.hour\r\n            const endMinute = currentDay.time.end.minute\r\n            message = `${startHour < 10 ? '0' + startHour : startHour}:${startMinute < 10 ? '0' + startMinute : startMinute} - ${endHour < 10 ? '0' + endHour : endHour}:${endMinute < 10 ? '0' + endMinute : endMinute}`\r\n            }\r\n        return message;\r\n    }\r\n\r\n    const categoryList = categories.map(cat => <li key={cat.id} onClick={filterByCategory}>{cat.name}</li>)\r\n\r\n    return (\r\n        <div className=\"store\" style={{backgroundImage: `url(\"${process.env.REACT_APP_BACKEND_URL}/uploads/images/10.jpg\")`}}>\r\n            <div className=\"store-info\">\r\n                <h1\r\n                onClick={()=>console.log(deliveryAvailable)\r\n                }\r\n                >Zamów online!</h1>\r\n                <p>Minimalna kwota zamówienia: <b>{minOrderValue && minOrderValue.value} zł</b></p>\r\n\r\n                <p>\r\n                    {today && today} - \r\n                    {!deliveryAvailable && <b style={{color: 'red'}}>W dzisiejszym dniu nie dowozimy!</b>}\r\n                    {deliveryAvailable && <span> W dzisiejszym dniu dowozimy w godzinach <b>{deliveryHours && today && dayId && showDeliveryHours()}</b></span>}\r\n                </p>\r\n            </div>\r\n            <Card>\r\n            <div className=\"categories\">\r\n                <h2>Wybierz kategorię</h2>\r\n                <ul style={{color: \"white\"}}>\r\n                    <li onClick={filterByCategory}>wszystko</li>\r\n                {categories.length > 0 && categoryList}\r\n                </ul>\r\n            </div>\r\n            </Card>\r\n            <div className=\"store-items\">\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                {items && itemList()}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Store\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport \"./Cart.css\"\r\nimport Button from '../FormElements/Button'\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useDate } from '../hooks/date-hook';\r\nimport ErrorModal from \"../UIElements/ErrorModal\";\r\nimport { CartContext } from '../../context/cart-context';\r\nimport Card from '../UIElements/Card';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst Cart = () => {\r\n\r\n    \r\n\r\n    const [items, setItems] = useState([])\r\n    const [orderValid, setOrderValid] = useState({valid: false, message: ''})\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [minOrderValue, setMinOrderValue] = useState(false);\r\n    const [deliveryHours, setDeliveryHours] = useState(false);\r\n    const { cartItems, itemCount, removeProduct, increase, decrease, total } = useContext(CartContext);\r\n    const { today, dayId, currentHour, currentMinute } = useDate();\r\n\r\n    // const checkOrderValidation = () => {\r\n    //     let validation = false\r\n    //     if (cartItems && total && minOrderValue) {\r\n    //         if(total < minOrderValue) {\r\n    //             validation = false\r\n    //         }\r\n    //         else {\r\n    //             validation = true\r\n    //         }\r\n    //     }\r\n    //     return validation\r\n    // }\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n            const getMinOrderValue = async () => {\r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`\r\n                  );\r\n                \r\n                setMinOrderValue(responseData.value)\r\n                } catch (err) {}\r\n            }\r\n            const getDeliveryHours = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/time/`\r\n                  );\r\n                \r\n                  setDeliveryHours(responseData.time)\r\n                } catch (err) {}\r\n            } \r\n            getMinOrderValue()\r\n            getDeliveryHours()\r\n    }, [sendRequest])\r\n\r\n    useEffect(() => {\r\n        const orderValidation = {valid: false, message: ''}\r\n        if(cartItems && deliveryHours && today && dayId && currentHour && currentMinute) {\r\n            const currentDay = deliveryHours.find(time => time._id === dayId)\r\n            const startHour = currentDay.time.start.hour\r\n            const startMinute = currentDay.time.start.minute\r\n            const endHour = currentDay.time.end.hour\r\n            const endMinute = currentDay.time.end.minute\r\n            \r\n                if (!currentDay.available) {\r\n                    orderValidation.valid = false\r\n                    orderValidation.message = 'W dzisiejszym dniu nie dowozimy'\r\n                } else if (total < minOrderValue.value) {\r\n                    orderValidation.valid = false\r\n                    orderValidation.message = `Minimalna kwota zamówienia to ${minOrderValue.value} zł`\r\n                } else if (startHour > currentHour || endHour < currentHour || (startHour === currentHour && startMinute >= currentMinute) || (endHour === currentHour && endMinute <= currentMinute)) {\r\n                orderValidation.valid = false\r\n                orderValidation.message = `W dzisiejszym dniu dania można zamawiać od ${startHour < 10 ? '0' + startHour : startHour }:${startMinute < 10 ? '0' + startMinute : startMinute} do ${endHour < 10 ? '0' + endHour : endHour }:${endMinute < 10 ? '0' + endMinute : endMinute}`\r\n                }\r\n                else {\r\n                    orderValidation.valid = true\r\n                    orderValidation.message = ''\r\n            }\r\n        }\r\n        return (\r\n            setOrderValid(orderValidation)\r\n            )\r\n    }, [cartItems, deliveryHours, today, dayId, currentHour, currentMinute, total, minOrderValue])\r\n\r\n    const getCoordinates = () => {\r\n        Geocode.setApiKey('AIzaSyCC2-7o0QiPK0-IoueeS0VgFOgUbWNE_Gw')\r\n        Geocode.fromAddress(\"Eiffel Tower\").then(\r\n        (response) => {\r\n          const { lat, lng } = response.results[0].geometry.location;\r\n          console.log(lat, lng);\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n    }\r\n\r\n    const checkProductQuantity = (quantity, product) => {\r\n        if(quantity <= 0) removeProduct(product)\r\n    }\r\n\r\n    const showCartItems = cartItems.map(item => {\r\n        const product = { id: item.id, name: item.name, price: item.price, image: item.image, description: item.description };\r\n        const price = item.price * item.quantity\r\n\r\n        return (\r\n        <li className=\"item-card\" key={item.id}>\r\n            <img src={`${process.env.REACT_APP_BACKEND_URL}/${item.image}`} alt={item.name}></img>\r\n            <span className=\"item-name\">{item.name}</span>\r\n            <span class=\"fas fa-minus item-quantity__handler\" onClick={() => {\r\n                decrease(product)\r\n                checkProductQuantity(item.quantity, product)\r\n                }}></span>\r\n            <span class=\"item-quantity\" onClick={() => {getCoordinates()}}>{item.quantity}</span>\r\n            <span class=\"fas fa-plus item-quantity__handler\" onClick={() => {increase(product)}}></span>\r\n            <span class=\"item-price\">{price} zł</span>\r\n            <span class=\"fas fa-times item-remove\" onClick={() => {removeProduct(product)}}></span>\r\n        </li>\r\n            )\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        <div className=\"cart\" style={{backgroundImage: `url(\"${process.env.REACT_APP_BACKEND_URL}/uploads/images/10.jpg\")`}}>\r\n                <h1 onClick={\r\n                    () => {console.log(deliveryHours)\r\n                    }\r\n                    }>Twój koszyk</h1>\r\n                {cartItems.length > 0 && <Card>\r\n            <div className=\"cart-products\">\r\n            <li className=\"item-card titles\">\r\n                    <span className='item-name'>Nazwa produktu</span>\r\n                    <span style={{width: '20%'}}>Ilość</span>\r\n                    <span style={{width: '10%'}}>Cena</span>\r\n                    <span style={{width: '10%', marginLeft: '5px'}}></span>\r\n            </li>\r\n                {showCartItems}\r\n            <li className=\"item-card summary \">\r\n                    <span className='item-name'></span>\r\n                    <span style={{width: '25%'}}>SUMA:  <b style={{marginLeft: \"5px\", color: \"white\"}}>{total} zł</b></span>\r\n                    <span style={{width: '5%', marginLeft: '5px'}}></span>\r\n            </li>\r\n            <li className=\"item-card__alert\">\r\n                    <span>{!orderValid.valid && minOrderValue && <p>{orderValid.message}</p>}</span>\r\n            </li>\r\n            </div>\r\n            </Card>}\r\n            {!cartItems.length > 0 && <h3 style={{color: \"white\"}}>Brak produktów w koszyku</h3>}\r\n            {cartItems.length > 0 && <Link to=\"/zamowienie\"><Button disabled={!orderValid.valid}>Przejdź do zamówienia</Button></Link>}\r\n            {!cartItems.length > 0 && <Link to=\"/\"><Button>Przejdź do sklepu</Button></Link>}\r\n        </div>\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport \"./Order.css\"\r\nimport Button from '../FormElements/Button'\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport ErrorModal from \"../UIElements/ErrorModal\";\r\nimport { CartContext } from '../../context/cart-context';\r\nimport Card from '../UIElements/Card';\r\nimport { Link } from 'react-router-dom';\r\nimport { useStripe } from '@stripe/react-stripe-js'\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE,\r\n    VALIDATOR_EMAIL\r\n  } from '../util/validators';\r\n  import Input from '../FormElements/Input';\r\n\r\nimport { useForm } from \"../hooks/form-hook\"\r\n\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst Order = () => {\r\n    \r\n\r\n    const [items, setItems] = useState([])\r\n    const [orderValid, setOrderValid] = useState(false)\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [minOrderValue, setMinOrderValue] = useState(false);\r\n    const { cartItems, itemCount, removeProduct, increase, decrease, total } = useContext(CartContext);\r\n    const stripe = useStripe();\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n        //   name: {\r\n        //     value: '',\r\n        //     isValid: false\r\n        // },\r\n            street: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            local: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            apartament: {\r\n                value: null,\r\n                isValid: true\r\n        },\r\n            zipCode_start: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            zipCode_end: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            city: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            email: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            phoneNumber: {\r\n                value: '',\r\n                isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    const formSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        \r\n        const line_items = cartItems.map(i => {\r\n            return {\r\n                quantity: i.quantity,\r\n                price_data: {\r\n                    currency: \"pln\",\r\n                    unit_amount: i.price * 100,\r\n                    product_data: {\r\n                        name: i.name,\r\n                        description: i.description\r\n                    }\r\n                }  \r\n            }\r\n        })\r\n        \r\n\r\n          try {\r\n            const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/checkout/`,\r\n                'POST',\r\n                JSON.stringify({\r\n                    line_items,\r\n                    customer_email: formState.inputs.email.value\r\n                }),\r\n                {\r\n                  'Content-Type': 'application/json'\r\n                }\r\n            );\r\n            const { sessionId } = responseData\r\n            await stripe.redirectToCheckout({\r\n                sessionId\r\n            })                 \r\n          } catch (err) {}\r\n      };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        <div className=\"order\" style={{backgroundImage: `url(\"${process.env.REACT_APP_BACKEND_URL}/uploads/images/10.jpg\")`}}>\r\n                <h1 onClick={() => console.log(formState.inputs)\r\n                }>Uzupełnij dane do zamówienia</h1>\r\n                <Card>\r\n                <form\r\n                onSubmit={formSubmitHandler}\r\n                >\r\n                    {/* <h3>Wypełnij dane do zamówienia</h3> */}\r\n                    <div className=\"address-street\">\r\n                    <Input \r\n                    id=\"street\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Ulica\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę ulicy.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"local\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nr lokalu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Podaj poprawny nr lokalu.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"apartament\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Nr mieszkania\"\r\n                    validators={null}\r\n                    initialValid={true}\r\n                    // validators={[VALIDATOR_REQUIRE()]}\r\n                    // errorText=\"Podaj poprawny nr mieszkania.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    </div>\r\n                    <div className=\"address-city\">\r\n                        <div className=\"address-city__zip\">\r\n                            <div className=\"address-city__zip-label\">\r\n                                <label>Kod pocztowy</label>\r\n                            </div>\r\n                            <div className=\"address-city__zip-input\">\r\n                            <Input \r\n                                id=\"zipCode_start\"\r\n                                element=\"input\"\r\n                                type=\"text\"\r\n                                // label=\"Kod pocztowy\"\r\n                                validators={[VALIDATOR_REQUIRE()]}\r\n                                errorText=\"Podaj poprawny kod pocztowy.\"\r\n                                onInput={inputHandler}\r\n                            />\r\n                            <span>-</span>\r\n                            <Input \r\n                                id=\"zipCode_end\"\r\n                                element=\"input\"\r\n                                type=\"text\"\r\n                                // label=\"Nr lokalu\"\r\n                                validators={[VALIDATOR_REQUIRE()]}\r\n                                errorText=\"Podaj poprawny kod pocztowy.\"\r\n                                onInput={inputHandler}\r\n                            />\r\n                            </div>\r\n                        </div>\r\n                    <div className=\"address-city__city\">\r\n                    <Input \r\n                    id=\"city\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Miasto\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Podaj poprawną nazwę miasta.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    </div>\r\n                    \r\n                    </div>\r\n                    <Input \r\n                    id=\"email\"\r\n                    element=\"input\"\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    validators={[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL]}\r\n                    errorText=\"Podaj poprawny email.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"phoneNumber\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Numer telefonu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Podaj nr telefonu.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Button type=\"submit\"\r\n                    disabled={!formState.isValid}>\r\n                    PŁATNOŚĆ PRZY ODBIORZE\r\n                    </Button>\r\n                    <Button type=\"submit\"\r\n                    disabled={!formState.isValid}>\r\n                    PŁATNOŚĆ ONLINE\r\n                    </Button>\r\n                    {/* <button onClick={() => console.log(formState.inputs)\r\n                     }></button> */}\r\n                </form>\r\n                </Card>\r\n            {/* {!items.length > 0 && <h3 style={{color: \"white\"}}>Brak produktów w koszyku</h3>}\r\n            {items.length > 0 && <Button disabled={!orderValid}>Przejdź do zamówienia</Button>}\r\n            {!items.length > 0 && <Link to=\"/\"><Button>Przejdź do sklepu</Button></Link>} */}\r\n        </div>\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Order\r\n","import React, { Suspense } from 'react';\nimport AdminHeader from \"./Components/Admin/AdminHeader\";\nimport Admin from \"./Components/Admin/AdminPanel\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/Footer';\nimport Store from './Components/Body/Store';\nimport CartContextProvider from './context/cart-context';\nimport Cart from './Components/Body/Cart';\nimport Order from './Components/Body/Order';\n\nfunction App() {\n\n  const routes = (\n    <Switch>\n      <Route path=\"/\" exact>\n      <Header />\n      <Store />\n      </Route>\n      <Route path=\"/koszyk\">\n      <Header />\n      <Cart />\n      </Route>\n      <Route path=\"/zamowienie\">\n      <Header />\n      <Order />\n      </Route>\n      <Route path=\"/admin\">\n      <AdminHeader />\n        <Admin />\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n\n\n  return (\n    <Router>\n      <CartContextProvider>\n      <div className=\"App\">\n        {routes}\n      <Footer />\n      </div>\n      </CartContextProvider>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\n\nconst stripePromise = loadStripe(process.env.REACT_APP_PUBLISHABLE_KEY)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Elements stripe={stripePromise}>\n    <App />\n    </Elements>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
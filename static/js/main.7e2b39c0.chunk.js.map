{"version":3,"sources":["Components/hooks/auth-hook.js","Components/FormElements/Button.js","Components/util/validators.js","Components/FormElements/Input.js","Components/hooks/http-hook.js","Components/UIElements/LoadingSpinner.js","Components/UIElements/Backdrop.js","Components/UIElements/Modal.js","Components/UIElements/ErrorModal.js","Components/hooks/form-hook.js","context/auth-context.js","Components/Admin/AdminHeader.js","Components/Admin/AdminNav.js","Components/FormElements/ImageUpload.js","Components/Admin/AdminStore/AdminAddItem.js","Components/Admin/AdminStore/AdminCategory.js","Components/Admin/AdminStore/AdminDeleteItem.js","Components/Admin/AdminStore/AdminDeliveryPrice.js","Components/Admin/AdminStore/AdminTime.js","Components/Admin/AdminStore/AdminUpdate.js","Components/Admin/AdminStore/AdminValue.js","Components/Admin/AdminPanel.js","Components/Header/Navigation.js","Components/Header/SideDrawer.js","images/logo.png","Components/Header/Header.js","Components/Footer/Footer.js","context/cart-reducer.js","context/cart-context.jsx","helper.js","Components/Body/ProductCard.js","Components/UIElements/Card.js","Components/hooks/date-hook.js","Components/Body/Store.js","Components/Body/Cart.js","Components/Body/Order.js","images/50.jpg","Components/Body/Success.js","Components/Body/Failed.js","App.js","index.js"],"names":["logoutTimer","Button","props","href","className","size","inverse","danger","children","to","exact","active","type","onClick","disabled","id","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","val","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","useEffect","changeHandler","event","target","touchHandler","element","min","max","placeholder","onChange","onBlur","name","options","rows","htmlFor","label","style","position","left","errorText","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","clearError","LoadingSpinner","asOverlay","Backdrop","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onClear","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","AuthContext","createContext","isLoggedIn","userId","token","role","login","logout","AdminHeader","auth","useContext","email","password","inputHandler","authSubmitHandler","process","JSON","stringify","alert","window","location","reload","AdminNav","changeSection","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","images","setImages","imagesValue","setImagesValue","setSelectedId","filePickerRef","fileReader","FileReader","allImages","onload","result","readAsDataURL","deleteImage","e","newImages","newImagesValue","splice","fileIsValid","imageArea","map","i","height","width","src","alt","cursor","ref","display","accept","pickedFile","onInputImgValue","files","console","log","center","click","AdminAddItem","categories","setCategories","description","price","category","image","fetchCategories","itemSubmitHandler","formData","FormData","append","Authorization","setOptions","AdminCategory","catId","setCatId","catSubmitHandler","deleteCategorySubmitHandler","_id","AdminDeleteItem","items","setItems","itemId","setItemId","fetchItems","deleteItemSubmitHandler","AdminDeliveryPrice","setValue","fetchValue","delivery_price","valueSubmitHandler","parseInt","AdminTime","times","setTimes","time","setTime","timeAvailability","setTimeAvailability","startHour","startMinute","endHour","endMinute","day","dayFormState","selectHandler","fetchTimes","fetchTime","available","timeSubmitHandler","start","hour","minute","end","marginTop","for","fontWeight","marginBottom","prevAvailibility","checked","margin","AdminUpdateItem","item","setItem","itemAvailability","setItemAvailability","itemBonus","setItemBonus","itemFormState","fetchItem","bonus","setItemOptions","prevBonus","AdminValue","newValue","AdminPanel","section","setSection","AdminUpdate","Navigation","class","SideDrawer","Header","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Logo","Footer","sumItems","cartItems","itemCount","reduce","total","prod","quantity","cartReducer","find","payload","newCartItems","increaseIndex","findIndex","decreaseIndex","CartContext","initialState","CartContextProvider","contextValues","addProduct","product","removeProduct","increase","decrease","Provider","isInCart","ProductCard","history","useHistory","Card","useDate","today","setToday","dayId","setDayId","currentHour","setCurrentHour","currentMinute","setCurrentMinute","date","Date","getDay","getHours","getMinutes","Store","allItems","setAllItems","minOrderValue","setMinOrderValue","deliveryHours","setDeliveryHours","deliveryAvailable","setDeliveryAvailable","scrollTo","getMinOrderValue","getDeliveryHours","currentDay","currentDayAvailibility","filterByCategory","filteredItems","innerHTML","categoryValue","toLowerCase","includes","categoryList","cat","color","showDeliveryHours","item_list","sort","b","itemList","Cart","valid","orderValid","setOrderValid","deliveryPrice","setDeliveryPrice","bonusItems","setBonusItems","getDeliveryPrice","getBonusItems","orderValidation","showCartItems","checkProductQuantity","Geocode","setApiKey","fromAddress","then","results","geometry","lat","lng","toFixed","bonusItemsNames","marginLeft","fontSize","Order","timepickerValue","setTimepickerValue","minTime","setMinTime","maxTime","setMaxTime","isToLateToOrder","setIsToLateToOrder","stripe","useStripe","minOrderTime","maxOrderTime","toString","street","local","apartament","zipCode","city","phoneNumber","formSubmitHandler","customer_items","line_items","price_data","currency","unit_amount","product_data","address","customer_email","deliveryHour","phone","sessionId","redirectToCheckout","delivery_info","totalAmount","customer_phoneNumber","customer_address","minHeight","format","step","hours","minutes","Success","Failed","App","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","setRole","uid","expirationDate","getTime","localStorage","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","routes","path","backgroundImage","background","flexDirection","stripePromise","loadStripe","render","StrictMode"],"mappings":"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","file":"static/js/main.7e2b39c0.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n  const [role, setRole] = useState(false);\n\n  const login = useCallback((uid, token, role, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    setRole(role);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        role: role,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    setRole(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, storedData.role, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, userId, role };\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'} ${props.active && 'button--active'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n      id={props.id || null}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: action.validators ? validate(action.val, action.validators) : true\n        // isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        min={props.min}\n        max={props.max}\n        // checked={inputState.value}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : props.element === 'select' ? (\n      <select\n        id={props.id}\n        name={props.name}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      >\n        <option value={''}>Wybierz</option>\n        {props.options}\n        </select>\n      ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p style={(props.id === \"zipCode_start\" || props.id === \"zipCode_end\") ? {position:'absolute', left: '20%'} : {}}>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        {props.header}\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  role: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React, { useContext } from 'react';\r\nimport Button from \"../FormElements/Button\"\r\nimport Input from '../FormElements/Input';\r\n\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport ErrorModal from \"../UIElements/ErrorModal\"\r\nimport { useForm } from \"../hooks/form-hook\"\r\nimport \"./AdminHeader.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nconst AdminHeader = () => {\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n        email: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        password: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    const authSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            const responseData = await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/user/login`,\r\n              'POST',\r\n              JSON.stringify({\r\n                email: formState.inputs.email.value,\r\n                password: formState.inputs.password.value\r\n              }),\r\n              {\r\n                'Content-Type': 'application/json'\r\n                //  + auth.token\r\n              }\r\n            );\r\n            auth.login(responseData.userId, responseData.token, responseData.role);\r\n                alert(\"zalogowano\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n        <div className=\"admin-header\">\r\n            <Link to=\"/\">Wróć na stronę główną</Link>\r\n            {!auth.isLoggedIn && <form onSubmit={authSubmitHandler}>\r\n                <Input \r\n                    id=\"email\"\r\n                    element=\"input\"\r\n                    type=\"email\"\r\n                    label=\"login:\"\r\n                    // validators={[VALIDATOR_REQUIRE()]}\r\n                    // errorText=\"Wprowadź login.\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Input \r\n                    id=\"password\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"hasło:\"\r\n                    // validators={[VALIDATOR_REQUIRE()]}\r\n                    // errorText=\"wprowadź hasło.\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Button type=\"submit\"\r\n                    disabled={!formState.isValid}>\r\n                    ZALOGUJ\r\n                </Button>\r\n            </form>}\r\n            {auth.isLoggedIn && <Button\r\n            onClick={() => auth.logout()}\r\n            >\r\n                    Wyloguj\r\n                </Button>}\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminHeader\r\n","import React from 'react'\r\n\r\nconst AdminNav = ({ changeSection }) => {\r\n    return (\r\n        \r\n            <ul>\r\n                <li id=\"0\" onClick={changeSection}>Dodaj produkt</li>\r\n                <li id={1} onClick={changeSection}>Zmień produkt</li>\r\n                <li id={2} onClick={changeSection}>Usuń produkt</li>\r\n                <li id={3} onClick={changeSection}>Kategorie</li>\r\n                <li id={4} onClick={changeSection}>Godziny dowozu</li>\r\n                <li id={5} onClick={changeSection}>Min. wartość zamówienia</li>\r\n                <li id={6} onClick={changeSection}>Opłata za dowóz</li>\r\n            </ul>\r\n        \r\n    )\r\n}\r\n\r\nexport default AdminNav\r\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const [images, setImages] = useState([]);\n  const [imagesValue, setImagesValue] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    let allImages = images\n    fileReader.onload = () => {\n      if (props.id === \"images\") {\n        allImages.push(fileReader.result)\n        setImages(allImages);\n      }\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n  \n  const pickedHandler = event => {\n    let pickedFile;\n    let newImagesValue\n    let fileIsValid = isValid;\n    setImagesValue([\n      ...imagesValue,\n      event.target.files[0]\n    ]);\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      newImagesValue = [\n        ...imagesValue,\n        pickedFile\n      ]\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    let onInputImgValue\n    if (props.id === \"images\") {onInputImgValue = newImagesValue} else {onInputImgValue = pickedFile}\n    if (props.id === \"image\") console.log(\"image\" );\n    else if (!(props.id === \"image\")) console.log(\"images\" );\n    \n    props.onInput(props.id, onInputImgValue, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  const deleteImage = (e) => {\n    setSelectedId(e.target.id)\n    const newImages = images\n    const newImagesValue = imagesValue\n    if (newImages.length > 0) {\n    newImages.splice(e.target.id, 1);\n    newImagesValue.splice(e.target.id, 1);\n    setImages(newImages)\n    setImagesValue(newImagesValue)\n    setSelectedId(null)\n    }\n    let fileIsValid = isValid;\n    if (newImagesValue.length > 1) {\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, newImagesValue, fileIsValid);\n  };\n\n  const imageArea = images.map((i, id) => \n  (<div style={{height: \"100%\", width: \"100%\"}} key={id}>\n  <img src={i} alt=\"Preview\" id={id} onClick={deleteImage}\n  style={{cursor: 'pointer'}}/>\n  </div>\n  )\n  )\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {props.id === \"images\" && images.length > 0 && imageArea}\n          {!(props.id === \"images\") && previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {props.id === \"images\" && !images.length > 0 && <p>Proszę wybrać zdjęcie produktu.</p>}\n          {!(props.id === \"images\") && !previewUrl && <p>Proszę wybrać zdjęcie produktu.</p>}\n          \n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\n\r\nimport ImageUpload from \"../../FormElements/ImageUpload\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\n\r\nconst AdminAddItem = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n            description: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            price: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            category: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n          image: {\r\n            value: null,\r\n            isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category`\r\n              );\r\n      \r\n              setCategories(responseData.category);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchCategories();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const itemSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            const formData = new FormData();\r\n            formData.append('name', formState.inputs.name.value);\r\n            formData.append('description', formState.inputs.description.value);\r\n            formData.append('price', formState.inputs.price.value);\r\n            formData.append('category', formState.inputs.category.value);\r\n            formData.append('image', formState.inputs.image.value);\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/items/`,\r\n              'POST',\r\n              formData\r\n              ,\r\n              {\r\n                Authorization: 'Bearer ' + auth.token\r\n                //  + auth.token\r\n                // 'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Utworzono produkt\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n    const setOptions = categories.map(i => <option value={i.id}>{i.name}</option>)\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Dodaj danie / produkt</h2>\r\n                <form\r\n                onSubmit={itemSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nazwa produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <ImageUpload\r\n                    center\r\n                    id=\"image\"\r\n                    onInput={inputHandler}\r\n                    errorText=\"Wprowadź zdjęcie produktu.\"\r\n                    />\r\n                    <Input \r\n                    id=\"description\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"Opis produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawny opis.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"price\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Cena\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną cenę.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    {categories.length > 0 && <Input \r\n                    id=\"category\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Kategoria\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną kategorię.\"\r\n                    onInput={inputHandler}\r\n                    options={setOptions}\r\n                    />}\r\n                    <Button type=\"submit\"\r\n                    disabled={!formState.isValid}>\r\n                    DODAJ\r\n                    </Button>\r\n                    {/* <button onClick={() => console.log(formState.inputs)\r\n                     }></button> */}\r\n                </form>\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminAddItem\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\n\r\nconst AdminCategory = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [catId, setCatId] = useState(false);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n      const catSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/category/`,\r\n              'POST',\r\n              JSON.stringify({\r\n                name: formState.inputs.name.value\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Utworzono kategorię\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category`\r\n              );\r\n      \r\n              setCategories(responseData.category);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchCategories();\r\n      }, [sendRequest])\r\n\r\n    const deleteCategorySubmitHandler = async event => {\r\n        event.preventDefault();\r\n            try {\r\n              await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category/${catId}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                  Authorization: 'Bearer ' + auth.token\r\n                }\r\n              );\r\n            alert(\"Usunięto Kategorię\")\r\n            \r\n            window.location.reload()\r\n            } catch (err) {}\r\n        }\r\n\r\n    const choseDeletedCatId = (e) => {\r\n        console.log(e.target.value);\r\n        \r\n        setCatId(e.target.value)\r\n              }\r\n\r\n    const setOptions = categories.map(i => <option value={i._id}>{i.name}</option>)\r\n\r\n    return (\r\n            <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Dodaj kategorię</h2>\r\n                <form\r\n                onSubmit={catSubmitHandler}\r\n                >\r\n                <Input \r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nazwa kategorii\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Button type=\"submit\"\r\n                    disabled={!formState.isValid}>\r\n                    DODAJ\r\n                    </Button>\r\n                    </form>\r\n                <h2>Usuń kategorię</h2>\r\n                {categories.length > 0 ? <select name=\"items\" id=\"items\" onChange={choseDeletedCatId} >\r\n                    <option value={''}>wybierz kategorię</option>\r\n                    {setOptions}\r\n                </select> : <p>Brak Kategorii</p>}\r\n                <Button \r\n                onClick={deleteCategorySubmitHandler}\r\n                disabled={!catId}\r\n                >USUŃ</Button>\r\n            </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminCategory\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Button from \"../../FormElements/Button\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\n\r\nconst AdminDeleteItem = () => {\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [itemId, setItemId] = useState(false);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n    \r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/items`\r\n              );\r\n      \r\n              setItems(responseData.items);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchItems();\r\n      }, [sendRequest])\r\n\r\n    const deleteItemSubmitHandler = async event => {\r\n        event.preventDefault();\r\n            try {\r\n              await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/items/${itemId}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                  Authorization: 'Bearer ' + auth.token\r\n                }\r\n              );\r\n            alert(\"Usunięto produkt\")\r\n            \r\n            window.location.reload()\r\n            } catch (err) {}\r\n        }\r\n\r\n    const choseDeletedItemId = (e) => {\r\n            setItemId(e.target.value)\r\n              }\r\n\r\n\r\n    const setOptions = items.map(i => <option value={i.id}>{i.name}</option>)\r\n\r\n    return (\r\n            <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Usuń</h2>\r\n                {items.length > 0 ? <select name=\"items\" id=\"items\" onChange={choseDeletedItemId} >\r\n                    <option value={''}>wybierz produkt</option>\r\n                    {setOptions}\r\n                </select> : <p>Brak produktów</p>}\r\n                <Button \r\n                onClick={deleteItemSubmitHandler}\r\n                disabled={!itemId}\r\n                >USUŃ</Button>\r\n            </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminDeleteItem\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminDeliveryPrice = () => {\r\n    const [value, setValue] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          value: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchValue = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/delivery/${process.env.REACT_APP_DELIVERY_PRICE_ID}`\r\n              );\r\n              setValue(responseData.delivery_price);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchValue();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const valueSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/delivery/${process.env.REACT_APP_DELIVERY_PRICE_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                value: parseInt(formState.inputs.value.value)\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień wartość opłaty za dowóz</h2>\r\n                {value && <form\r\n                onSubmit={valueSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"value\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Minimalna wartość opłaty za dowóz (zł)\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={value.value}\r\n                    /> \r\n                    <Button type=\"submit\"\r\n                    // disabled={!formState.isValid}\r\n                    >\r\n                    ZMIEŃ WARTOŚĆ\r\n                    </Button> \r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminDeliveryPrice\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminTime = () => {\r\n    const [times, setTimes] = useState([]);\r\n    const [time, setTime] = useState(false);\r\n    const [timeAvailability, setTimeAvailability] = useState();\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          startHour: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        startMinute: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        endHour: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        endMinute: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n      const [dayFormState, selectHandler] = useForm(\r\n        {\r\n            day: {\r\n              value: '',\r\n              isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchTimes = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/time`\r\n              );\r\n              setTimes(responseData.time);             \r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchTimes();\r\n      }, [sendRequest])\r\n\r\n      useEffect(() => {\r\n        const fetchTime = async () => {\r\n            if(dayFormState.inputs.day.value) {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/time/${dayFormState.inputs.day.value}`\r\n              );\r\n              setTime(responseData.time);\r\n              setTimeAvailability(responseData.time.available);\r\n        } catch (err) {}      \r\n        } else return\r\n    }\r\n    fetchTime();\r\n  }, [sendRequest, dayFormState.inputs.day.value])\r\n    \r\n\r\n    const timeSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/time/${dayFormState.inputs.day.value}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                startHour: parseInt(formState.inputs.startHour.value),\r\n                startMinute: parseInt(formState.inputs.startMinute.value),\r\n                endHour: parseInt(formState.inputs.endHour.value),\r\n                endMinute: parseInt(formState.inputs.endMinute.value),\r\n                available: timeAvailability\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano Godziny\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n      const changeAvailability = () => {\r\n        setTimeAvailability(prevAvailibility => !prevAvailibility)\r\n    }\r\n\r\n    const setOptions = times.map(i => <option value={i._id}>{i.day}</option>)\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień godziny dowozu</h2>\r\n                {times.length > 0 && <Input \r\n                    id=\"day\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Wybierz dzień\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wybierz poprawny dzień.\"\r\n                    onInput={selectHandler}\r\n                    options={setOptions}\r\n                    />}\r\n                \r\n                {time && <form\r\n                onSubmit={timeSubmitHandler}\r\n                >\r\n                    <div className=\"start\">\r\n                    <span>Start: </span>\r\n                    <Input \r\n                    id=\"startHour\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={23}\r\n                    // label=\"Minimalna wartość zamówienia\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    // errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.start.hour}\r\n                    />\r\n                    :\r\n                    <Input \r\n                    id=\"startMinute\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={59}\r\n                    // label=\"Minimalna wartość zamówienia\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    // errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.start.minute}\r\n                    />\r\n                    </div>\r\n                    <div className=\"end\">\r\n                        <span>Koniec: </span>\r\n                    <Input \r\n                    id=\"endHour\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={23}\r\n                    // label=\"Godzina\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    // errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.end.hour}\r\n                    />\r\n                    :\r\n                    <Input \r\n                    id=\"endMinute\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={59}\r\n                    // label=\"Minimalna wartość zamówienia\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    // errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.end.minute}\r\n                    />\r\n                    <div className='availability' style={{marginTop: \"1em\"}}>\r\n                    <label for='availability' style={{fontWeight: 'bold', marginBottom: '0.5rem'}}>Dowóz aktywny?</label>\r\n                    <input id='availability' type='checkbox' onChange={changeAvailability} checked={timeAvailability} style={{display: 'block', margin: 'auto'}} />\r\n                    </div>\r\n                    \r\n                    </div>\r\n                    <Button type=\"submit\"\r\n                    // disabled={!formState.isValid}\r\n                    >\r\n                    ZMIEŃ GODZINY\r\n                    </Button>\r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminTime\r\n\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\n  import { AuthContext } from '../../../context/auth-context';\r\n\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\n\r\n\r\nconst AdminUpdateItem = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [items, setItems] = useState([]);\r\n    const [item, setItem] = useState(false);\r\n    const [itemAvailability, setItemAvailability] = useState();\r\n    const [itemBonus, setItemBonus] = useState();\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n            description: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            price: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            category: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            available: {\r\n                value: '',\r\n                isValid: false\r\n    },\r\n        //   image: {\r\n        //     value: null,\r\n        //     isValid: false\r\n        //   }\r\n        },\r\n        false\r\n      );\r\n\r\n    const [itemFormState, selectHandler] = useForm(\r\n        {\r\n            name: {\r\n              value: '',\r\n              isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category`\r\n              );\r\n      \r\n              setCategories(responseData.category);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    const fetchItems = async () => {\r\n        try {\r\n          const responseData = await sendRequest(\r\n            `${process.env.REACT_APP_BACKEND_URL}/api/items`\r\n          );\r\n  \r\n          setItems(responseData.items);\r\n    } catch (err) {}\r\n      \r\n};\r\n    fetchCategories();\r\n    fetchItems();\r\n      }, [sendRequest])\r\n\r\n      useEffect(() => {\r\n        \r\n            const fetchItem = async () => {\r\n                if(itemFormState.inputs.name.value) {\r\n                try {\r\n                  const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/items/${itemFormState.inputs.name.value}`\r\n                  );\r\n          \r\n                  setItem(responseData.item);\r\n                  setItemAvailability(responseData.item.available)\r\n                  setItemBonus(responseData.item.bonus)\r\n            } catch (err) {}      \r\n            } else return\r\n        }\r\n    fetchItem();\r\n      }, [sendRequest, itemFormState.inputs.name.value])\r\n    \r\n\r\n    const itemSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/items/${item.id}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                name: formState.inputs.name.value,\r\n                description: formState.inputs.description.value,\r\n                price: formState.inputs.price.value,\r\n                category: formState.inputs.category.value,\r\n                available: itemAvailability,\r\n                bonus: itemBonus\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            //   formData\r\n            //   ,\r\n            //   {\r\n            //     Authorization: 'Bearer '\r\n            //     //  + auth.token\r\n            //     // 'Content-Type': 'application/json'\r\n            //   }\r\n            );\r\n                alert(\"Zaktualizowano produkt\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n    const setOptions = categories.map(i => <option value={i.id}>{i.name}</option>)\r\n    const setItemOptions = items.map(i => <option value={i.id}>{i.name}</option>)\r\n\r\n    const changeAvailability = () => {\r\n        setItemAvailability(prevAvailibility => !prevAvailibility)\r\n    }\r\n\r\n    const changeBonus = () => {\r\n      setItemBonus(prevBonus => !prevBonus)\r\n  }\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zaktualizuj danie / produkt</h2>\r\n                <Input \r\n                    id=\"name\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Wybierz Produkt\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wybierz poprawny produkt.\"\r\n                    onInput={selectHandler}\r\n                    options={setItemOptions}\r\n                    />\r\n                {item && <form\r\n                onSubmit={itemSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nazwa produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={item.name}\r\n                    />\r\n                    <Input \r\n                    id=\"description\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"Opis produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawny opis.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={item.description}\r\n                    />\r\n                    <Input \r\n                    id=\"price\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Cena\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną cenę.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={item.price}\r\n                    />\r\n                    {categories.length > 0 && <Input \r\n                    id=\"category\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Kategoria\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną kategorię.\"\r\n                    onInput={inputHandler}\r\n                    options={setOptions}\r\n                    initialValue={item.category}\r\n                    />}\r\n                    <label for='availability' style={{fontWeight: 'bold', marginBottom: '0.5rem'}}>Produkt dostępny?</label>\r\n                    <input id='availability' type='checkbox' onChange={changeAvailability} checked={itemAvailability} style={{display: 'block', margin: 'auto'}} />\r\n                    <label for='bonus' style={{fontWeight: 'bold', marginBottom: '0.5rem'}}>Produkt gratis?</label>\r\n                    <input id='bonus' type='checkbox' onChange={changeBonus} checked={itemBonus} style={{display: 'block', margin: 'auto'}} />\r\n                    <Button type=\"submit\"\r\n                    // disabled={!formState.isValid}\r\n                    >\r\n                    ZMIEŃ\r\n                    </Button>\r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminUpdateItem\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminValue = () => {\r\n    const [value, setValue] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          value: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchValue = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`\r\n              );\r\n              setValue(responseData.value);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchValue();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const valueSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                newValue: parseInt(formState.inputs.value.value)\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień minimalną wartość zamówienia</h2>\r\n                {value && <form\r\n                onSubmit={valueSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"value\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Minimalna wartość zamówienia (zł)\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={value.value}\r\n                    />\r\n                    <Button type=\"submit\"\r\n                    // disabled={!formState.isValid}\r\n                    >\r\n                    ZMIEŃ WARTOŚĆ\r\n                    </Button>\r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminValue\r\n","import React, {useState} from 'react';\r\nimport \"./Admin.css\"\r\nimport AdminNav from './AdminNav';\r\nimport AdminAddItem from './AdminStore/AdminAddItem';\r\nimport AdminCategory from './AdminStore/AdminCategory';\r\nimport AdminDeleteItem from './AdminStore/AdminDeleteItem';\r\nimport AdminDeliveryPrice from './AdminStore/AdminDeliveryPrice';\r\nimport AdminTime from './AdminStore/AdminTime';\r\nimport AdminUpdateItem from './AdminStore/AdminUpdate';\r\nimport AdminValue from './AdminStore/AdminValue';\r\n// import AdminStore from './AdminStore/AdminStore';\r\n\r\nconst AdminPanel = () => {\r\n\r\n    const [section, setSection] = useState(\"0\");\r\n\r\n    const changeSection = (e) => {\r\n        console.log(e.target.id);\r\n        \r\n        setSection(e.target.id);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"admin\">\r\n                <div className=\"admin-navigation\">\r\n                    <AdminNav changeSection={changeSection} />\r\n                </div>\r\n                <div className=\"admin-content\">\r\n                {section === \"0\" && <AdminAddItem />}\r\n                {section === \"1\" && <AdminUpdateItem />}\r\n                {section === \"2\" && <AdminDeleteItem />}\r\n                {section === \"3\" && <AdminCategory />}\r\n                {section === \"4\" && <AdminTime />}\r\n                {section === \"5\" && <AdminValue />}\r\n                {section === \"6\" && <AdminDeliveryPrice />}\r\n                {/* {section === 1 ? <AdminChar /> : (section === 2 ? <AdminShoop /> : <h2>Witaj, użyj panelu po lewej</h2>)} */}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminPanel\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n\r\n    return (\r\n        \r\n    <ul className='nav'>\r\n        <li className=\"main-navigation\">\r\n            <NavLink to='/'exact>\r\n            Zamów\r\n            </NavLink>\r\n        </li>\r\n        <li className=\"main-navigation\">\r\n            <NavLink to='/koszyk'exact>\r\n            <span class=\"fas fa-shopping-cart\"></span>\r\n            </NavLink>\r\n        </li>\r\n    </ul>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","export default __webpack_public_path__ + \"static/media/logo.f284211f.png\";","import React, {useState} from 'react';\r\nimport './Header.css';\r\nimport Navigation from './Navigation';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport ErrorModal from \"../UIElements/ErrorModal\"\r\nimport SideDrawer from './SideDrawer';\r\nimport Backdrop from '../UIElements/Backdrop';\r\n\r\nimport Logo from '../../images/logo.png'\r\n\r\n\r\nconst Header = () => {\r\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n    const { error, clearError } = useHttpClient();\r\n\r\n      const openDrawerHandler = () => {\r\n        setDrawerIsOpen(true);\r\n      };\r\n    \r\n      const closeDrawerHandler = () => {\r\n        setDrawerIsOpen(false);\r\n      };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n            <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n              <nav className=\"main-navigation__drawer-nav\">\r\n          <Navigation />\r\n              </nav>\r\n\r\n            </SideDrawer>\r\n        <div className='header'>\r\n        <a href= \"https://niepospolita-lublin.com\" className=\"logo-link\" exact>\r\n            <div className='logo title'>\r\n              <img src={Logo} alt=\"logo\" className=\"logo\"></img>\r\n              <span>Niepospolita Restauracja</span>\r\n            </div>\r\n                </a>\r\n              <button\r\n                className=\"main-navigation__menu-btn\"\r\n                onClick={openDrawerHandler}\r\n                >\r\n                <span />\r\n                <span />\r\n                <span />\r\n              </button>\r\n            <div className='navigation'><Navigation/></div>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport \"./Footer.css\";\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\n\r\nimport Logo from '../../images/logo.png'\r\n\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <a href= \"https://niepospolita-lublin.com\" className=\"logo-link\" exact>\r\n            <div className=\"footer-logo logo title\">\r\n              <img src={Logo} alt=\"logo\" className=\"logo\"></img>\r\n              <span>Powrót na stronę główną</span>\r\n            </div>\r\n            </a>\r\n            <div className=\"footer-menu\">\r\n                <h3>MENU</h3>\r\n                <ul className='nav'>\r\n                    <li className=\"main-navigation\">\r\n                    <NavLink to='/'exact>\r\n                    Zamów\r\n                    </NavLink>\r\n                    </li>\r\n                    <li className=\"main-navigation\">\r\n                    <NavLink to='/koszyk'exact>\r\n                    Koszyk\r\n                    </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export const sumItems = cartItems => {\r\n    return {\r\n        itemCount: cartItems.reduce((total, prod) => total + prod.quantity , 0),\r\n        total: cartItems.reduce((total, prod) => total + (prod.price * prod.quantity), 0)\r\n    }\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_ITEM':\r\n            if(!state.cartItems.find(item => item.id === action.payload.id)) {\r\n                state.cartItems.push({\r\n                    ...action.payload,\r\n                    quantity: 1\r\n                })\r\n            }\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems],\r\n                ...sumItems(state.cartItems)\r\n            }   \r\n        case 'REMOVE_ITEM':\r\n            const newCartItems = state.cartItems.filter(item => item.id !== action.payload.id);\r\n            return {\r\n                ...state,\r\n                cartItems: [...newCartItems],\r\n                ...sumItems(newCartItems)\r\n            }\r\n        case 'INCREASE':\r\n            const increaseIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\r\n            state.cartItems[increaseIndex].quantity++;\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems],\r\n                ...sumItems(state.cartItems)\r\n            }\r\n        case 'DECREASE':\r\n            const decreaseIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\r\n            state.cartItems[decreaseIndex].quantity--;\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems],\r\n                ...sumItems(state.cartItems)\r\n            }\r\n        default:\r\n                return state;\r\n    }\r\n}\r\nexport default cartReducer;","import React, { createContext, useReducer } from 'react';\r\nimport cartReducer from './cart-reducer';\r\n\r\nexport const CartContext = createContext();\r\n\r\nconst initialState = { cartItems: [], itemCount: 0, total: 0 };\r\n\r\nconst CartContextProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(cartReducer, initialState);\r\n    const addProduct = (product) => dispatch({ type: 'ADD_ITEM', payload: product });\r\n    const removeProduct = (product) => dispatch({ type: 'REMOVE_ITEM', payload: product });\r\n    const increase = (product) => dispatch({ type: 'INCREASE', payload: product });\r\n    const decrease = (product) => dispatch({ type: 'DECREASE', payload: product });\r\n\r\n    const contextValues = {\r\n        ...state,\r\n        addProduct,\r\n        removeProduct,\r\n        increase,\r\n        decrease\r\n    }\r\n    return (\r\n        <CartContext.Provider value={ contextValues }>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\nexport default CartContextProvider;","export const isInCart = (product, cartItems) => {\r\n    return cartItems.find(item => item.id === product.id)\r\n}","import React, { useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from '../FormElements/Button';\r\nimport { CartContext } from '../../context/cart-context';\r\nimport { isInCart } from '../../helper';\r\n\r\n\r\nconst ProductCard = ({id, name, price, image, description}) => {\r\n\r\n    const product = { id, name, price, image, description };\r\n    const { addProduct, cartItems } = useContext(CartContext)\r\n    const history = useHistory()\r\n\r\n    const goToCartSection = () => {\r\n          history.push(\"/koszyk\");\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div \r\n            className=\"item-card\"\r\n            >\r\n                <div className=\"item-card__image\">\r\n                <img src={`${process.env.REACT_APP_BACKEND_URL}/${image}`} alt={name}></img>\r\n                </div>\r\n                <div className=\"item-card__info\">\r\n                <p>\r\n                    <span style={{fontWeight: \"bold\"}}>{name}</span>\r\n                    <span style={{fontWeight: \"bold\"}}>{price} zł</span>\r\n                </p>\r\n                {\r\n                    !isInCart(product, cartItems) && <Button onClick={() => {\r\n                        addProduct(product)\r\n                    }}>Dodaj do koszyka</Button>\r\n                }\r\n                {\r\n                    isInCart(product, cartItems) && <Button active={true} onClick={() => goToCartSection()}>Przejdź do koszyka</Button>\r\n                }\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductCard\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useDate = () => {\r\n\r\n    const [today, setToday] = useState(false);\r\n    const [dayId, setDayId] = useState(false);\r\n    const [currentHour, setCurrentHour] = useState(false);\r\n    const [currentMinute, setCurrentMinute] = useState(false);\r\n\r\n    useEffect(() => {\r\n    const date = new Date().getDay()\r\n    const hour = new Date().getHours()\r\n    const minute = new Date().getMinutes()\r\n    setCurrentHour(hour)\r\n    setCurrentMinute(minute)\r\n        switch (date) {\r\n            case 0: \r\n                setToday('Niedziela');\r\n                setDayId(\"616866d188b1a5c67bdb3547\")\r\n                break;\r\n            case 1: \r\n                setToday('Poniedziałek');\r\n                setDayId(\"6168665588b1a5c67bdb3539\")\r\n                break;\r\n            case 2: \r\n                setToday('Wtorek');\r\n                setDayId(\"6168666588b1a5c67bdb353b\")\r\n                break;\r\n            case 3: \r\n                setToday('Środa');\r\n                setDayId(\"6168667c88b1a5c67bdb353d\")\r\n                break;\r\n            case 4: \r\n                setToday('Czwartek');\r\n                setDayId(\"6168669588b1a5c67bdb3540\")\r\n                break;\r\n            case 5: \r\n                setToday('Piątek');\r\n                setDayId(\"616866bd88b1a5c67bdb3543\")\r\n                break;\r\n            case 6: \r\n                setToday('Sobota');\r\n                setDayId(\"616866c888b1a5c67bdb3545\")\r\n                break;\r\n            default:\r\n                setToday('Niedziela');\r\n                setDayId(\"616866d188b1a5c67bdb3547\")\r\n                break;\r\n        }\r\n    }, [])\r\n\r\n  return { today, dayId, currentHour, currentMinute };\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\nimport \"./Store.css\";\r\nimport Input from '../FormElements/Input';\r\nimport ProductCard from './ProductCard';\r\nimport Card from '../UIElements/Card'\r\n\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useDate } from '../hooks/date-hook';\r\n\r\n\r\nconst Store = () => {\r\n\r\n    const [items, setItems] = useState();\r\n    const [allItems, setAllItems] = useState();\r\n    const [categories, setCategories] = useState([]);\r\n    const [minOrderValue, setMinOrderValue] = useState();\r\n    const [deliveryHours, setDeliveryHours] = useState(false);\r\n    const [deliveryAvailable, setDeliveryAvailable] = useState(true);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const { today, dayId } = useDate();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        const fetchItems = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/items/`\r\n                  );\r\n                \r\n                setItems(responseData.items)\r\n                setAllItems(responseData.items)\r\n                } catch (err) {}\r\n            }\r\n            const fetchCategories = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/category/`\r\n                  );\r\n                \r\n                setCategories(responseData.category)\r\n                } catch (err) {}\r\n            } \r\n            const getMinOrderValue = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`\r\n                  );\r\n                \r\n                setMinOrderValue(responseData.value)\r\n                } catch (err) {}\r\n            } \r\n            const getDeliveryHours = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/time/`\r\n                  );\r\n                \r\n                  setDeliveryHours(responseData.time)\r\n                  const currentDay = responseData.time.find(time => time._id === dayId)\r\n                  const currentDayAvailibility = currentDay.available\r\n                  setDeliveryAvailable(currentDayAvailibility)\r\n                } catch (err) {}\r\n            } \r\n            fetchItems()\r\n            fetchCategories()\r\n            getMinOrderValue()\r\n            getDeliveryHours()\r\n    }, [sendRequest, dayId])\r\n\r\n    const itemList = () => {\r\n        let item_list\r\n        let sortItems\r\n        let availableItems\r\n        if(items) {\r\n            availableItems = items.filter(item => item.available === true)\r\n            sortItems = availableItems.sort((a, b) => a.name > b.name ? 1 : -1)\r\n            item_list = sortItems.map(i => {\r\n            return (<ProductCard key={i.id} id={i.id} name={i.name} price={i.price} description={i.description} image={i.image} category={i.category} available={i.available} />)\r\n    })\r\n    } return item_list\r\n    }\r\n\r\n    const filterByCategory = (e) => {\r\n        let filteredItems\r\n        if (e.target.innerHTML === \"wszystko\") {\r\n            filteredItems = allItems\r\n        } else {\r\n            const categoryValue = e.target.innerHTML.toLowerCase()\r\n            filteredItems = allItems.filter(i => \r\n                i.category.toLowerCase().includes(categoryValue))\r\n        }\r\n        setItems(filteredItems)\r\n    }\r\n\r\n    const showDeliveryHours = () => {\r\n        let message\r\n        let currentDay\r\n        if (deliveryHours && today && dayId) {\r\n            currentDay = deliveryHours.find(time => time._id === dayId)\r\n            const startHour = currentDay.time.start.hour\r\n            const startMinute = currentDay.time.start.minute\r\n            const endHour = currentDay.time.end.hour\r\n            const endMinute = currentDay.time.end.minute\r\n            message = `${startHour < 10 ? '0' + startHour : startHour}:${startMinute < 10 ? '0' + startMinute : startMinute} - ${endHour < 10 ? '0' + endHour : endHour}:${endMinute < 10 ? '0' + endMinute : endMinute}`\r\n            }\r\n        return message;\r\n    }\r\n\r\n    const categoryList = categories.map(cat => <li key={cat.id} onClick={filterByCategory}>{cat.name}</li>)\r\n\r\n    return (\r\n        <div className=\"store\"\r\n        >\r\n            <div className=\"store-info\">\r\n                <h1\r\n                onClick={()=>console.log(deliveryAvailable)\r\n                }\r\n                >Zamów online!</h1>\r\n                <p>Minimalna kwota zamówienia: <b>{minOrderValue && minOrderValue.value} zł</b></p>\r\n\r\n                <p>\r\n                    {today && today} - \r\n                    {!deliveryAvailable && <b style={{color: 'red'}}>W dzisiejszym dniu nie dowozimy!</b>}\r\n                    {deliveryAvailable && <span> W dzisiejszym dniu dowozimy w godzinach <b>{deliveryHours && today && dayId && showDeliveryHours()}</b></span>}\r\n                </p>\r\n            </div>\r\n            <Card>\r\n            <div className=\"categories\">\r\n                <h2>Wybierz kategorię</h2>\r\n                <ul style={{color: \"white\"}}>\r\n                    <li onClick={filterByCategory}>wszystko</li>\r\n                {categories.length > 0 && categoryList}\r\n                </ul>\r\n            </div>\r\n            </Card>\r\n            <div className=\"store-items\">\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                {items && itemList()}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Store\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport \"./Cart.css\"\r\nimport Button from '../FormElements/Button'\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useDate } from '../hooks/date-hook';\r\nimport ErrorModal from \"../UIElements/ErrorModal\";\r\nimport { CartContext } from '../../context/cart-context';\r\nimport Card from '../UIElements/Card';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst Cart = () => {\r\n\r\n    const [orderValid, setOrderValid] = useState({valid: false, message: ''})\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [minOrderValue, setMinOrderValue] = useState(false);\r\n    const [deliveryHours, setDeliveryHours] = useState(false);\r\n    const [deliveryPrice, setDeliveryPrice] = useState(false);\r\n    const [bonusItems, setBonusItems] = useState([]);\r\n    const { cartItems, removeProduct, increase, decrease, total } = useContext(CartContext);\r\n    const { today, dayId, currentHour, currentMinute } = useDate();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n            const getMinOrderValue = async () => {\r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`\r\n                  );\r\n                \r\n                setMinOrderValue(responseData.value)\r\n                } catch (err) {}\r\n            }\r\n            const getDeliveryHours = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/time/`\r\n                  );\r\n                \r\n                  setDeliveryHours(responseData.time)\r\n                } catch (err) {}\r\n            } \r\n            const getDeliveryPrice = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/delivery/${process.env.REACT_APP_DELIVERY_PRICE_ID}`\r\n                      );\r\n                      setDeliveryPrice(responseData.delivery_price.value);\r\n                } catch (err) {}\r\n            }\r\n            const getBonusItems = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/bonus/`\r\n                      );\r\n                      setBonusItems(responseData.bonusItems);\r\n                } catch (err) {}\r\n            }\r\n            getMinOrderValue()\r\n            getDeliveryHours()\r\n            getDeliveryPrice()\r\n            getBonusItems()\r\n    }, [sendRequest])\r\n\r\n    useEffect(() => {\r\n        const orderValidation = {valid: false, message: ''}\r\n        if(cartItems && deliveryHours && today && dayId && currentHour && currentMinute) {\r\n            const currentDay = deliveryHours.find(time => time._id === dayId)\r\n            const startHour = currentDay.time.start.hour\r\n            const startMinute = currentDay.time.start.minute\r\n            const endHour = currentDay.time.end.hour\r\n            const endMinute = currentDay.time.end.minute\r\n            \r\n                if (!currentDay.available) {\r\n                    orderValidation.valid = false\r\n                    orderValidation.message = 'W dzisiejszym dniu nie dowozimy'\r\n                } else if (total < minOrderValue.value) {\r\n                    orderValidation.valid = false\r\n                    orderValidation.message = `Minimalna kwota zamówienia to ${minOrderValue.value} zł`\r\n                } \r\n                // else if (startHour > currentHour || endHour < currentHour || (startHour === currentHour && startMinute >= currentMinute) || (endHour === currentHour && endMinute <= currentMinute)) {\r\n                // orderValidation.valid = false\r\n                // orderValidation.message = `W dzisiejszym dniu dania można zamawiać od ${startHour < 10 ? '0' + startHour : startHour }:${startMinute < 10 ? '0' + startMinute : startMinute} do ${endHour < 10 ? '0' + endHour : endHour }:${endMinute < 10 ? '0' + endMinute : endMinute}`\r\n                // }\r\n                else if (endHour < currentHour || (endHour === currentHour && endMinute <= currentMinute)) {\r\n                    orderValidation.valid = false\r\n                    orderValidation.message = `W dzisiejszym dniu już nie dowozimy. Zapraszamy ponownie.`\r\n                    }\r\n                else {\r\n                    orderValidation.valid = true\r\n                    orderValidation.message = ''\r\n            }\r\n        }\r\n        return (\r\n            setOrderValid(orderValidation)\r\n            )\r\n    }, [cartItems, deliveryHours, today, dayId, currentHour, currentMinute, total, minOrderValue])\r\n\r\n    const getCoordinates = () => {\r\n        Geocode.setApiKey('AIzaSyCC2-7o0QiPK0-IoueeS0VgFOgUbWNE_Gw')\r\n        Geocode.fromAddress(\"Eiffel Tower\").then(\r\n        (response) => {\r\n          const { lat, lng } = response.results[0].geometry.location;\r\n          console.log(lat, lng);\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n    }\r\n\r\n    const checkProductQuantity = (quantity, product) => {\r\n        if(quantity <= 0) removeProduct(product)\r\n    }\r\n\r\n    const showCartItems = cartItems.map(item => {\r\n        const product = { id: item.id, name: item.name, price: item.price, image: item.image, description: item.description };\r\n        const price = item.price * item.quantity\r\n\r\n        return (\r\n        <li className=\"item-card\" key={item.id}>\r\n            <img src={`${process.env.REACT_APP_BACKEND_URL}/${item.image}`} alt={item.name}></img>\r\n            <span className=\"item-name\">{item.name}</span>\r\n            <span class=\"fas fa-minus item-quantity__handler\" onClick={() => {\r\n                decrease(product)\r\n                checkProductQuantity(item.quantity, product)\r\n                }}></span>\r\n            <span class=\"item-quantity\" onClick={() => {getCoordinates()}}>{item.quantity}</span>\r\n            <span class=\"fas fa-plus item-quantity__handler\" onClick={() => {increase(product)}}></span>\r\n            <span class=\"item-price\">{price.toFixed(2)} zł</span>\r\n            <span class=\"fas fa-times item-remove\" onClick={() => {removeProduct(product)}}></span>\r\n        </li>\r\n            )\r\n    })\r\n\r\n    const bonusItemsNames = bonusItems.map(item => {\r\n        return `${item.name}, `\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        <div className=\"cart\">\r\n                <h1>Twój koszyk</h1>\r\n                {cartItems.length > 0 &&<div className=\"cart-info\">\r\n                    <p>Koszt dowozu: <b>{deliveryPrice && deliveryPrice} zł</b>, w przypadku dowozu poza Lublin koszt obliczany wg odległości.</p>\r\n                    <p >Zamówienie powyżej 60 zł <b style={{color: \"lightgreen\"}}>dostawa gratis!</b></p>\r\n                    {bonusItems.length > 0 && <p >Zamówienie powyżej 80 zł <b style={{color: \"lightgreen\"}}>{bonusItemsNames} gratis!</b></p>}\r\n                </div>}\r\n                {cartItems.length > 0 && <Card>\r\n            <div className=\"cart-products\">\r\n            <li className=\"item-card titles\">\r\n                    <span className='item-name'>Produkt</span>\r\n                    <span style={{width: '20%'}}>Ilość</span>\r\n                    <span style={{width: '20%'}}>Cena</span>\r\n                    <span style={{width: '10%', marginLeft: '5px'}}></span>\r\n            </li>\r\n                {showCartItems}\r\n            <li className=\"item-card summary \">\r\n                    <span className='item-name'></span>\r\n                    <span className='total'>SUMA:  <b style={{marginLeft: \"5px\", color: \"white\"}}>{total.toFixed(2)} zł</b> {deliveryPrice && total.toFixed(2) <= 80 ? (total.toFixed(2) <= 60 ? <b>+ ({deliveryPrice} zł dostawa)</b> : <span style={{fontSize: \"0.7em\", color: \"lightgreen\"}}>(powyżej 60 zł dostawa gratis)</span>) : <span style={{fontSize: \"0.7em\", color: \"lightgreen\"}}>(powyżej 80 zł dostawa, {bonusItems.length > 0 && bonusItemsNames} gratis)</span>} </span>\r\n                    {/* <span style={{width: '5%', marginLeft: '5px'}}></span> */}\r\n            </li>\r\n            <li className=\"item-card__alert\">\r\n                    <span>{!orderValid.valid && minOrderValue && <p>{orderValid.message}</p>}</span>\r\n            </li>\r\n            </div>\r\n            </Card>}\r\n            {!cartItems.length > 0 && <h3 style={{color: \"white\"}}>Brak produktów w koszyku</h3>}\r\n            {cartItems.length > 0 && <Link to=\"/zamowienie\"><Button disabled={!orderValid.valid}>Przejdź do zamówienia</Button></Link>}\r\n            {!cartItems.length > 0 && <Link to=\"/\"><Button>Przejdź do sklepu</Button></Link>}\r\n        </div>\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport \"./Order.css\"\r\nimport Button from '../FormElements/Button'\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport ErrorModal from \"../UIElements/ErrorModal\";\r\nimport { CartContext } from '../../context/cart-context';\r\nimport Card from '../UIElements/Card';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useStripe } from '@stripe/react-stripe-js'\r\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'\r\nimport { useDate } from '../hooks/date-hook';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE,\r\n    VALIDATOR_EMAIL\r\n  } from '../util/validators';\r\n  import Input from '../FormElements/Input';\r\n\r\nimport { useForm } from \"../hooks/form-hook\"\r\n\r\nconst Order = () => {\r\n    \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const { cartItems, total } = useContext(CartContext);\r\n    const [deliveryPrice, setDeliveryPrice] = useState(false);\r\n    const [bonusItems, setBonusItems] = useState([]);\r\n    const [timepickerValue, setTimepickerValue] = useState('nie określono');\r\n    const [minTime, setMinTime] = useState();\r\n    const [maxTime, setMaxTime] = useState();\r\n    const [isToLateToOrder, setIsToLateToOrder] = useState(false);\r\n\r\n    const [deliveryHours, setDeliveryHours] = useState(false);\r\n    const stripe = useStripe();\r\n    let history = useHistory();\r\n    \r\n    const { today, dayId, currentHour, currentMinute } = useDate();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n            const getDeliveryPrice = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/delivery/${process.env.REACT_APP_DELIVERY_PRICE_ID}`\r\n                      );\r\n                      setDeliveryPrice(responseData.delivery_price.value);\r\n                } catch (err) {}\r\n            }\r\n            const getBonusItems = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/bonus/`\r\n                      );\r\n                      setBonusItems(responseData.bonusItems);\r\n                } catch (err) {}\r\n            }\r\n            const getDeliveryHours = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/time/`\r\n                  );\r\n                \r\n                  setDeliveryHours(responseData.time)\r\n                } catch (err) {}\r\n            } \r\n            getDeliveryPrice()\r\n            getBonusItems()\r\n            getDeliveryHours()\r\n    }, [sendRequest])\r\n\r\n    useEffect(() => {\r\n        let minOrderTime\r\n        let maxOrderTime\r\n        if(deliveryHours && today && dayId && currentHour && currentMinute) {\r\n            const currentDay = deliveryHours.find(time => time._id === dayId)\r\n            const startHour = currentDay.time.start.hour\r\n            const startMinute = currentDay.time.start.minute + '0'\r\n            const endHour = currentDay.time.end.hour\r\n            const endMinute = currentDay.time.end.minute + '0'\r\n            \r\n            maxOrderTime = (endHour + ':' + endMinute).toString()\r\n\r\n            if(currentHour > startHour) {\r\n                if(currentMinute > 30) {\r\n                    minOrderTime = (currentHour + 1 + ':30').toString()\r\n                } else {\r\n                    minOrderTime = (currentHour + 1 + ':00').toString()\r\n                }\r\n                \r\n            } else if (currentHour === startHour && currentMinute > startMinute) {\r\n                if(currentMinute > 30) {\r\n                    minOrderTime = (currentHour + 1 + ':30').toString()\r\n                } else {\r\n                    minOrderTime = (currentHour + 1 + ':00').toString()\r\n                }\r\n            } else minOrderTime = (startHour + ':' + startMinute).toString()\r\n            const endTimeDifference = endMinute - currentMinute\r\n\r\n            if(currentHour >= endHour || (currentHour === endHour && (currentMinute > endMinute || endTimeDifference < 30 )) ) {\r\n                setIsToLateToOrder(true)\r\n            }\r\n            \r\n        }\r\n            if(minOrderTime && maxOrderTime) {\r\n                setMinTime(new Date(`8/3/2017 ${minOrderTime}`))\r\n                setMaxTime(new Date(`8/3/2017 ${maxOrderTime}`))\r\n            }\r\n    }, [deliveryHours, today, dayId, currentHour, currentMinute])\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n        //   name: {\r\n        //     value: '',\r\n        //     isValid: false\r\n        // },\r\n            street: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            local: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            apartament: {\r\n                value: null,\r\n                isValid: true\r\n        },\r\n            zipCode: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            city: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            email: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            phoneNumber: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n        message: {\r\n            value: null,\r\n            isValid: true\r\n        },\r\n        },\r\n        false\r\n      );\r\n\r\n    const formSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        \r\n        let customer_items = cartItems.map(i => {\r\n            return {\r\n                quantity: i.quantity,\r\n                name: i.name,\r\n                price: i.price\r\n            }\r\n        })\r\n        let line_items\r\n        if (cartItems && deliveryPrice) {\r\n            line_items = cartItems.map(i => {\r\n                return {\r\n                    quantity: i.quantity,\r\n                    price_data: {\r\n                        currency: \"pln\",\r\n                        unit_amount: i.price * 100,\r\n                        product_data: {\r\n                            name: i.name,\r\n                            description: i.description\r\n                        }\r\n                    }  \r\n                }\r\n            })\r\n    \r\n            const delivery_price = {\r\n                quantity: 1,\r\n                price_data: {\r\n                    currency: \"pln\",\r\n                    unit_amount: deliveryPrice * 100,\r\n                    product_data: {\r\n                        name: 'opłata za dowóz'\r\n                    }\r\n                }  \r\n            }\r\n            \r\n            if (total >= 80 && bonusItems.length > 0) {\r\n                bonusItems.map(i => {\r\n                    return line_items.push({\r\n                    quantity: 1,\r\n                    price_data: {\r\n                        currency: \"pln\",\r\n                        unit_amount: 0 * 100,\r\n                        product_data: {\r\n                            name: i.name + \" gratis\"\r\n                        }}})})\r\n            } else if (total <= 60) {\r\n                line_items.push(delivery_price)\r\n            }\r\n        }\r\n        \r\n        let address = {\r\n            street: formState.inputs.street.value,\r\n            local: formState.inputs.local.value,\r\n            zipCode: formState.inputs.zipCode.value,\r\n            city: formState.inputs.city.value\r\n        }\r\n        if (!!formState.inputs.apartament.value) {\r\n            address = {\r\n                ...address,\r\n                apartament: formState.inputs.apartament.value\r\n            }\r\n        } else {\r\n            address = {\r\n                ...address,\r\n                apartament: false\r\n            }\r\n        }\r\n        if (!!formState.inputs.message.value) {\r\n            address = {\r\n                ...address,\r\n                message: formState.inputs.message.value\r\n            }\r\n        } else {\r\n            address = {\r\n                ...address,\r\n                message: \"brak\"\r\n            }\r\n        }\r\n        if (event.target.id === \"payment-online\") {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/checkout/`,\r\n                    'POST',\r\n                    JSON.stringify({\r\n                        line_items,\r\n                        customer_email: formState.inputs.email.value,\r\n                        message: formState.inputs.message.value,\r\n                        deliveryHour: timepickerValue.toString(),\r\n                        phone: formState.inputs.phoneNumber.value,\r\n                        address\r\n                    }),\r\n                    {\r\n                      'Content-Type': 'application/json'\r\n                    }\r\n                );\r\n                const { sessionId } = responseData\r\n                await stripe.redirectToCheckout({\r\n                    sessionId\r\n                })\r\n            } catch (err) {}\r\n        } else if (event.target.id === \"payment-offline\") {\r\n\r\n            let delivery_info\r\n            let totalAmount\r\n            if (total && deliveryPrice && total <= 60 ) {\r\n                delivery_info = deliveryPrice + \"zł\"\r\n                totalAmount = total + deliveryPrice\r\n            } else {\r\n                delivery_info = \"dostawa gratis\"\r\n                totalAmount = total\r\n            }\r\n            let bonusItemsNames = 'brak - za mała kwota zamówienia'\r\n            if(bonusItems.length > 0 && total > 80 ) {\r\n                bonusItemsNames = bonusItems.map(item => {\r\n                    return `${item.name} `\r\n                })\r\n            }\r\n            \r\n            try { \r\n                await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/mail/`,\r\n                    'POST',\r\n                    JSON.stringify({\r\n                        customer_email: formState.inputs.email.value,\r\n                        customer_phoneNumber: formState.inputs.phoneNumber.value,\r\n                        customer_address: address,\r\n                        customer_items,\r\n                        total: totalAmount,\r\n                        delivery_info,\r\n                        bonusItemsNames,\r\n                        timepickerValue\r\n                    }),\r\n                    {\r\n                      'Content-Type': 'application/json'\r\n                    }\r\n                );\r\n                await history.push(\"/success\")\r\n                window.location.reload()\r\n              } catch (err) {}\r\n        } \r\n      };\r\n\r\n    const handleTimeValue = (e) => {\r\n        let hours\r\n        let minutes\r\n        if (e.target.value) {\r\n            hours = e.target.value.getHours()\r\n            minutes = e.target.value.getMinutes()\r\n            if (minutes < 10) {\r\n                minutes = '0' + e.target.value.getMinutes()\r\n            }\r\n            setTimepickerValue(hours + ':' + minutes)\r\n        } else {setTimepickerValue('nie określono')}\r\n      }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        <div className=\"order\">\r\n                <h1 onClick={() => console.log(timepickerValue)\r\n                }>Uzupełnij dane do zamówienia</h1>\r\n                <Card>\r\n                {!isToLateToOrder &&  \r\n                <form\r\n                >\r\n                    <div className=\"address-street\">\r\n                    <Input \r\n                    id=\"street\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Ulica\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę ulicy.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"local\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nr lokalu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Podaj poprawny nr lokalu.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"apartament\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nr mieszkania\"\r\n                    validators={null}\r\n                    initialValid={true}\r\n                    // validators={[VALIDATOR_REQUIRE()]}\r\n                    // errorText=\"Podaj poprawny nr mieszkania.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    </div>\r\n                    <div className=\"address-city\">\r\n                        <div className=\"address-city__zip\" style={{position: 'relative'}}>\r\n                            <div className=\"address-city__zip-input\">\r\n                            <Input \r\n                                id=\"zipCode\"\r\n                                element=\"input\"\r\n                                type=\"text\"\r\n                                label=\"Kod pocztowy\"\r\n                                validators={[VALIDATOR_REQUIRE()]}\r\n                                errorText={\"Podaj poprawny kod pocztowy.\"}\r\n                                onInput={inputHandler}\r\n                            />\r\n                            </div>\r\n                        </div>\r\n                    <div className=\"address-city__city\">\r\n                    <Input \r\n                    id=\"city\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Miasto\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Podaj poprawną nazwę miasta.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    </div>\r\n                    \r\n                    </div>\r\n                    <Input \r\n                    id=\"email\"\r\n                    element=\"input\"\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    validators={[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL]}\r\n                    errorText=\"Podaj poprawny email.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"phoneNumber\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Numer telefonu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Podaj nr telefonu.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"message\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"Komentarz do dostawcy\"\r\n                    validators={null}\r\n                    initialValid={true}\r\n                    // errorText=\"Podaj nr telefonu.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <label style={{fontWeight: 'bold', marginBottom: '0.5rem', minHeight: '28px'}}>Wybierz oczekiwany czas dowozu:</label>\r\n                    <div className='timepicker'>\r\n                    <TimePickerComponent\r\n                    placeholder=\"wybierz godzinę\"\r\n                    format=\"HH:mm\"\r\n                    step={30}\r\n                    // value={timepickerValue}\r\n                    min={minTime}\r\n                    max={maxTime}\r\n                    onChange={handleTimeValue}\r\n                    ></TimePickerComponent>\r\n                    </div>\r\n                    \r\n                    <Button\r\n                    disabled={!formState.isValid || isToLateToOrder}\r\n                    id=\"payment-offline\"\r\n                    onClick={formSubmitHandler}\r\n                    >\r\n                    PŁATNOŚĆ PRZY ODBIORZE\r\n                    </Button>\r\n                    <Button\r\n                    disabled={!formState.isValid || isToLateToOrder}\r\n                    id=\"payment-online\"\r\n                    onClick={formSubmitHandler}\r\n                    >\r\n                    PŁATNOŚĆ ONLINE\r\n                    </Button>\r\n                </form>}\r\n                {isToLateToOrder && <p style={{color: 'red'}}>Dziś już nie dowozimy, zapraszamy ponownie.</p>}\r\n                </Card>\r\n        </div>\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Order\r\n","export default __webpack_public_path__ + \"static/media/50.e4514fa3.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Store.css'\r\n\r\nconst Success = () => {\r\n    return (\r\n        <div className=\"store\">\r\n            <h1 style={{marginTop: \"1.5em\"}}>ZAMÓWIENIE ZOSTAŁO PRZEKAZANE DO REALIZACJI</h1>\r\n            <br />\r\n            <Link to='/'><p>powrót do sklepu</p></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Success\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Store.css'\r\n\r\nconst Failed = () => {\r\n    return (\r\n        <div className=\"store\">\r\n            <h1>WYSTĄPIŁ NIEOCZEKIWANY BŁĄD, SPRÓBUJ ZAMÓWIĆ PONOWNIE PÓŹNIEJ</h1>\r\n            <br />\r\n            <Link to='/'><p>powrót do sklepu</p></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Failed\r\n","import React, { Suspense } from 'react';\nimport AdminHeader from \"./Components/Admin/AdminHeader\";\nimport Admin from \"./Components/Admin/AdminPanel\";\n\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/Footer';\nimport Store from './Components/Body/Store';\nimport CartContextProvider from './context/cart-context';\nimport Cart from './Components/Body/Cart';\nimport Order from './Components/Body/Order';\n\nimport background from './images/50.jpg'\n\nimport { useAuth } from './Components/hooks/auth-hook';\nimport { AuthContext } from './context/auth-context';\nimport Success from './Components/Body/Success';\nimport Failed from './Components/Body/Failed';\n\nfunction App() {\n\n  const { token, login, logout, userId, role } = useAuth();\n\n  const routes = (\n    <Switch>\n      <Route path=\"/\" exact>\n      <Header />\n      <Store />\n      </Route>\n      <Route path=\"/koszyk\">\n      <Header />\n      <Cart />\n      </Route>\n      <Route path=\"/zamowienie\">\n      <Header />\n      <Order />\n      </Route>\n      <Route path=\"/success\">\n      <Header />\n      <Success />\n      </Route>\n      <Route path=\"/failed\">\n      <Header />\n      <Failed />\n      </Route>\n      <Route path=\"/admin\">\n      <AdminHeader />\n        <Admin />\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n\n\n  return (\n    <Router>\n      <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        role: role,\n        login: login,\n        logout: logout\n      }}\n    >\n      <CartContextProvider>\n      <div className=\"App\" style={{backgroundImage: `url(${background})`, minHeight: \"100vh\", display: \"flex\", flexDirection: \"column\"}}>\n        {routes}\n      <Footer />\n      </div>\n      </CartContextProvider>\n      </AuthContext.Provider>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\n\nconst stripePromise = loadStripe(process.env.REACT_APP_PUBLISHABLE_KEY)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Elements stripe={stripePromise}>\n    <App />\n    </Elements>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
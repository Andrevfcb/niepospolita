{"version":3,"sources":["Components/hooks/auth-hook.js","Components/FormElements/Button.js","Components/util/validators.js","Components/FormElements/Input.js","Components/hooks/http-hook.js","Components/UIElements/LoadingSpinner.js","Components/UIElements/Backdrop.js","Components/UIElements/Modal.js","Components/UIElements/ErrorModal.js","Components/hooks/form-hook.js","context/auth-context.js","Components/Admin/AdminHeader.js","Components/Admin/AdminNav.js","Components/FormElements/ImageUpload.js","Components/Admin/AdminStore/AdminAddItem.js","Components/Admin/AdminStore/AdminBonusDelivery.js","Components/Admin/AdminStore/AdminBonusItems.js","Components/Admin/AdminStore/AdminBonus.js","Components/Admin/AdminStore/AdminCategory.js","Components/Admin/AdminStore/AdminDeleteItem.js","Components/Admin/AdminStore/AdminDeliveryPrice.js","Components/Admin/AdminStore/AdminDeliveryTime.js","Components/Admin/AdminStore/AdminTime.js","Components/Admin/AdminStore/AdminDelivery.js","Components/Admin/AdminStore/AdminSpecialReservation.js","Components/Admin/AdminStore/AdminUpdate.js","Components/Admin/AdminStore/AdminValue.js","Components/Admin/AdminPanel.js","Components/Header/Navigation.js","Components/Header/SideDrawer.js","images/logo.png","Components/Header/Header.js","Components/Footer/Footer.js","context/cart-reducer.js","context/cart-context.jsx","helper.js","Components/Body/ProductCard.js","Components/UIElements/Card.js","Components/hooks/date-hook.js","Components/Body/Store.js","Components/Body/Cart.js","Components/Body/Order.js","images/50.jpg","Components/Body/Success.js","Components/Body/Failed.js","Components/Body/SpecialProductCard.js","Components/Body/SpecialReservation.js","App.js","index.js"],"names":["logoutTimer","Button","props","href","className","size","inverse","danger","children","to","exact","active","isClicked","type","onClick","disabled","id","name","payment","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","val","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","useEffect","changeHandler","event","target","touchHandler","element","min","max","placeholder","onChange","onBlur","options","rows","htmlFor","label","style","position","left","errorText","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","clearError","LoadingSpinner","asOverlay","Backdrop","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onClear","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","AuthContext","createContext","isLoggedIn","userId","token","role","login","logout","AdminHeader","auth","useContext","email","password","inputHandler","authSubmitHandler","process","JSON","stringify","alert","window","location","reload","AdminNav","changeSection","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","images","setImages","imagesValue","setImagesValue","setSelectedId","filePickerRef","console","log","actualPrevievUrl","fileReader","FileReader","allImages","onload","result","readAsDataURL","deleteImage","e","newImages","newImagesValue","splice","fileIsValid","imageArea","map","i","height","width","src","alt","cursor","ref","display","accept","pickedFile","onInputImgValue","files","center","click","AdminAddItem","categories","setCategories","description","price","category","image","fetchCategories","itemSubmitHandler","formData","FormData","append","Authorization","setOptions","AdminBonusDelivery","setValue","fetchValue","bonus_delivery_price","valueSubmitHandler","parseInt","AdminBonusItems","bonus_items_price","AdminBonus","borderBottom","borderTop","AdminCategory","catId","setCatId","catSubmitHandler","deleteCategorySubmitHandler","_id","AdminDeleteItem","items","setItems","itemId","setItemId","fetchItems","deleteItemSubmitHandler","AdminDeliveryPrice","delivery_price","actualDeliveryTime","setActualDeliveryTime","deliveryTime","fetchDeliveryTime","time","deliveryTimeSubmitHandler","AdminTime","times","setTimes","setTime","timeAvailability","setTimeAvailability","startHour","startMinute","endHour","endMinute","day","dayFormState","selectHandler","fetchTimes","fetchTime","available","timeSubmitHandler","start","hour","minute","end","marginTop","for","fontWeight","marginBottom","prevAvailibility","checked","margin","AdminDelivery","AdminDeliveryTime","AdminSpecialReservation","reservation","setReservation","reservationDay","setReservationDay","availableHours","setAvailableHours","setAvailable","setMessage","showModal","setShowModal","selectDayHandler","guests","fetchSpecialReservation","reservations","days","fetchDay","hours","sortHours","sort","b","inputChange","hourId","find","newGuests","newAvailableHours","Object","values","deleteInput","submitHandler","newAvailable","submitNewHourHandler","closeModalHandler","setDaysOptions","setInputs","color","textAlign","class","padding","prevAvailable","AdminUpdateItem","item","setItem","itemAvailability","setItemAvailability","itemBonus","setItemBonus","itemSpecial","setItemSpecial","itemFormState","fetchItem","bonus","special","setItemOptions","prevBonus","prevSpecial","AdminValue","newValue","AdminPanel","section","setSection","AdminUpdate","Navigation","SideDrawer","Header","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Logo","Footer","sumItems","cartItems","itemCount","reduce","total","prod","quantity","cartReducer","payload","newCartItems","increaseIndex","findIndex","decreaseIndex","bonusItem","CartContext","initialState","CartContextProvider","contextValues","addProduct","product","removeProduct","increase","decrease","addBonusItem","Provider","isInCart","ProductCard","history","useHistory","Card","useDate","today","setToday","dayId","setDayId","currentHour","setCurrentHour","currentMinute","setCurrentMinute","date","Date","getDay","getHours","getMinutes","Store","allItems","setAllItems","minOrderValue","setMinOrderValue","deliveryHours","setDeliveryHours","deliveryPrice","setDeliveryPrice","minBonusDeliveryPrice","setMinBonusDeliveryPrice","deliveryAvailable","setDeliveryAvailable","scrollTo","filteredItems","sortItemsByName","sortItemsByCategory","aCatValue","bCatValue","storeCategories","cat","getMinOrderValue","getDeliveryHours","currentDay","currentDayAvailibility","fetchDeliveryPrice","getBonusDeliveryPrice","filterByCategory","innerHTML","categoryValue","toLowerCase","includes","categoryList","showDeliveryHours","item_list","itemList","Cart","valid","orderValid","setOrderValid","minBonusItemsPrice","setMinBonusItemsPrice","bonusItemCheckedId","setBonusItemCheckedId","bonusItems","setBonusItems","getDeliveryPrice","getBonusItems","getBonusItemsPrice","orderValidation","changeBonusItem","showCartItems","checkProductQuantity","Geocode","setApiKey","fromAddress","then","results","geometry","lat","lng","toFixed","showBonusItems","marginLeft","fontSize","marginRight","Order","timepickerValue","setTimepickerValue","minTime","setMinTime","maxTime","setMaxTime","isToLateToOrder","setIsToLateToOrder","paymentOffline","setPaymentOffline","stripe","useStripe","minOrderTime","maxOrderTime","toString","street","local","apartament","zipCode","city","phoneNumber","formSubmitHandler","customer_items","line_items","price_data","currency","unit_amount","product_data","address","customer_email","deliveryHour","phone","sessionId","redirectToCheckout","paymentMethod","delivery_info","totalAmount","bonusItemName","customer_phoneNumber","customer_address","minHeight","format","step","minutes","prevPayment","Success","setDeliveryTime","Failed","SpecialProductCard","specialItemCheckedId","changeClickedProductId","SpecialReservation","startDate","setStartDate","setSpecialItemCheckedId","getFullYear","getMonth","getDate","selected","dateFormat","minDate","maxDate","App","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","setRole","uid","expirationDate","getTime","localStorage","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","routes","path","backgroundImage","background","backgroundColor","flexDirection","stripePromise","loadStripe","render","StrictMode"],"mappings":"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","file":"static/js/main.c05aab3f.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n  const [role, setRole] = useState(false);\n\n  const login = useCallback((uid, token, role, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    setRole(role);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        role: role,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    setRole(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, storedData.role, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, userId, role };\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'} ${props.active && 'button--active'} ${props.isClicked && \"button--active\"}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n      id={props.id || null}\n      name={props.payment || null}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: action.validators ? validate(action.val, action.validators) : true\n        // isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        min={props.min}\n        max={props.max}\n        // checked={inputState.value}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : props.element === 'select' ? (\n      <select\n        id={props.id}\n        name={props.name}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      >\n        <option value={''}>Wybierz</option>\n        {props.options}\n        </select>\n      ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p style={(props.id === \"zipCode_start\" || props.id === \"zipCode_end\") ? {position:'absolute', left: '20%'} : {}}>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        {props.header}\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  role: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React, { useContext } from 'react';\r\nimport Button from \"../FormElements/Button\"\r\nimport Input from '../FormElements/Input';\r\n\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport ErrorModal from \"../UIElements/ErrorModal\"\r\nimport { useForm } from \"../hooks/form-hook\"\r\nimport \"./AdminHeader.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nconst AdminHeader = () => {\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n        email: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        password: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    const authSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            const responseData = await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/user/login`,\r\n              'POST',\r\n              JSON.stringify({\r\n                email: formState.inputs.email.value,\r\n                password: formState.inputs.password.value\r\n              }),\r\n              {\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n            auth.login(responseData.userId, responseData.token, responseData.role);\r\n                alert(\"zalogowano\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n        <div className=\"admin-header\">\r\n            <Link to=\"/\">Wróć na stronę główną</Link>\r\n            {!auth.isLoggedIn && <form onSubmit={authSubmitHandler}>\r\n                <Input \r\n                    id=\"email\"\r\n                    element=\"input\"\r\n                    type=\"email\"\r\n                    label=\"login:\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Input \r\n                    id=\"password\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"hasło:\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Button type=\"submit\"\r\n                    disabled={!formState.isValid}>\r\n                    ZALOGUJ\r\n                </Button>\r\n            </form>}\r\n            {auth.isLoggedIn && <Button\r\n            onClick={() => auth.logout()}\r\n            >\r\n                    Wyloguj\r\n                </Button>}\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminHeader\r\n","import React from 'react'\r\n\r\nconst AdminNav = ({ changeSection }) => {\r\n    return (\r\n        \r\n            <ul>\r\n                <li id=\"0\" onClick={changeSection}>Dodaj produkt</li>\r\n                <li id={1} onClick={changeSection}>Zmień produkt</li>\r\n                <li id={2} onClick={changeSection}>Usuń produkt</li>\r\n                <li id={3} onClick={changeSection}>Kategorie</li>\r\n                <li id={4} onClick={changeSection}>Min. wartość zamówienia</li>\r\n                <li id={5} onClick={changeSection}>Dowóz</li>\r\n                <li id={6} onClick={changeSection}>Min. wartości gratis</li>\r\n                <li id={7} onClick={changeSection}>Kolacje degustacyjne</li>\r\n            </ul>\r\n        \r\n    )\r\n}\r\n\r\nexport default AdminNav\r\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const [images, setImages] = useState([]);\n  const [imagesValue, setImagesValue] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file && props.previewUrl) {\n      console.log(props.previewUrl);\n      const actualPrevievUrl = process.env.REACT_APP_AWS_URL + \"/\" + props.previewUrl\n      setPreviewUrl(actualPrevievUrl)\n    } else if (!file) {\n      return;\n    } else {\n      const fileReader = new FileReader();\n      let allImages = images\n      fileReader.onload = () => {\n        if (props.id === \"images\") {\n          allImages.push(fileReader.result)\n          setImages(allImages);\n        }\n        setPreviewUrl(fileReader.result);\n      };\n      fileReader.readAsDataURL(file);\n    }\n  }, [file]);\n  \n  const pickedHandler = event => {\n    let pickedFile;\n    let newImagesValue\n    let fileIsValid = isValid;\n    setImagesValue([\n      ...imagesValue,\n      event.target.files[0]\n    ]);\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      newImagesValue = [\n        ...imagesValue,\n        pickedFile\n      ]\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    let onInputImgValue\n    if (props.id === \"images\") {onInputImgValue = newImagesValue} \n    else {onInputImgValue = pickedFile}\n    \n    props.onInput(props.id, onInputImgValue, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  const deleteImage = (e) => {\n    setSelectedId(e.target.id)\n    const newImages = images\n    const newImagesValue = imagesValue\n    if (newImages.length > 0) {\n    newImages.splice(e.target.id, 1);\n    newImagesValue.splice(e.target.id, 1);\n    setImages(newImages)\n    setImagesValue(newImagesValue)\n    setSelectedId(null)\n    }\n    let fileIsValid = isValid;\n    if (newImagesValue.length > 1) {\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, newImagesValue, fileIsValid);\n  };\n\n  const imageArea = images.map((i, id) => \n  (<div style={{height: \"100%\", width: \"100%\"}} key={id}>\n  <img src={i} alt=\"Preview\" id={id} onClick={deleteImage}\n  style={{cursor: 'pointer'}}/>\n  </div>\n  )\n  )\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {props.id === \"images\" && images.length > 0 && imageArea}\n          {!(props.id === \"images\") && previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {props.id === \"images\" && !images.length > 0 && <p>Proszę wybrać zdjęcie produktu.</p>}\n          {!(props.id === \"images\") && !previewUrl && <p>Proszę wybrać zdjęcie produktu.</p>}\n          \n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\n\r\nimport ImageUpload from \"../../FormElements/ImageUpload\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\n\r\nconst AdminAddItem = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n            description: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            price: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            category: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n          image: {\r\n            value: null,\r\n            isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category`\r\n              );\r\n      \r\n              setCategories(responseData.category);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchCategories();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const itemSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            const formData = new FormData();\r\n            formData.append('name', formState.inputs.name.value);\r\n            formData.append('description', formState.inputs.description.value);\r\n            formData.append('price', formState.inputs.price.value);\r\n            formData.append('category', formState.inputs.category.value);\r\n            formData.append('image', formState.inputs.image.value);\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/items/`,\r\n              'POST',\r\n              formData\r\n              ,\r\n              {\r\n                Authorization: 'Bearer ' + auth.token\r\n              }\r\n            );\r\n                alert(\"Utworzono produkt\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n    const setOptions = categories.map(i => <option value={i.id}>{i.name}</option>)\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Dodaj danie / produkt</h2>\r\n                <form\r\n                onSubmit={itemSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nazwa produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <ImageUpload\r\n                    center\r\n                    id=\"image\"\r\n                    onInput={inputHandler}\r\n                    errorText=\"Wprowadź zdjęcie produktu.\"\r\n                    />\r\n                    <Input \r\n                    id=\"description\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"Opis produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawny opis.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"price\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Cena\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną cenę.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    {categories.length > 0 && <Input \r\n                    id=\"category\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Kategoria\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną kategorię.\"\r\n                    onInput={inputHandler}\r\n                    options={setOptions}\r\n                    />}\r\n                    <Button type=\"submit\"\r\n                    disabled={!formState.isValid}>\r\n                    DODAJ\r\n                    </Button>\r\n                </form>\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminAddItem\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminBonusDelivery = () => {\r\n    const [value, setValue] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          value: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchValue = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/bonus-delivery/${process.env.REACT_APP_BONUS_DELIVERY_PRICE_ID}`\r\n              );\r\n              setValue(responseData.bonus_delivery_price);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchValue();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const valueSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/bonus-delivery/${process.env.REACT_APP_BONUS_DELIVERY_PRICE_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                value: parseInt(formState.inputs.value.value)\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień minimalną wartość darmowej opłaty za dowóz</h2>\r\n                {value && <form\r\n                onSubmit={valueSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"value\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Minimalna wartość darmowej opłaty za dowóz (zł)\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={value.value}\r\n                    /> \r\n                    <Button type=\"submit\"\r\n                    // disabled={!formState.isValid}\r\n                    >\r\n                    ZMIEŃ WARTOŚĆ\r\n                    </Button> \r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminBonusDelivery\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminBonusItems = () => {\r\n    const [value, setValue] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          value: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchValue = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/bonus-items/${process.env.REACT_APP_BONUS_ITEMS_PRICE_ID}`\r\n              );\r\n              setValue(responseData.bonus_items_price);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchValue();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const valueSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/bonus-items/${process.env.REACT_APP_BONUS_ITEMS_PRICE_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                value: parseInt(formState.inputs.value.value)\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień minimalną wartość produktów gratis</h2>\r\n                {value && <form\r\n                onSubmit={valueSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"value\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Minimalna wartość produktów gratis (zł)\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={value.value}\r\n                    /> \r\n                    <Button type=\"submit\"\r\n                    >\r\n                    ZMIEŃ WARTOŚĆ\r\n                    </Button> \r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminBonusItems\r\n","import React from 'react'\r\nimport AdminBonusDelivery from './AdminBonusDelivery'\r\nimport AdminBonusItems from './AdminBonusItems'\r\n\r\nconst AdminBonus = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ borderBottom: \"1px solid black\", borderTop: \"1px solid black\" }}>\r\n            <AdminBonusDelivery /> \r\n            </div>\r\n            <div style={{ borderBottom: \"1px solid black\", borderTop: \"1px solid black\" }}>\r\n            <AdminBonusItems />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminBonus\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\n\r\nconst AdminCategory = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [catId, setCatId] = useState(false);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n      const catSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/category/`,\r\n              'POST',\r\n              JSON.stringify({\r\n                name: formState.inputs.name.value\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Utworzono kategorię\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category`\r\n              );\r\n      \r\n              setCategories(responseData.category);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchCategories();\r\n      }, [sendRequest])\r\n\r\n    const deleteCategorySubmitHandler = async event => {\r\n        event.preventDefault();\r\n            try {\r\n              await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category/${catId}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                  Authorization: 'Bearer ' + auth.token\r\n                }\r\n              );\r\n            alert(\"Usunięto Kategorię\")\r\n            \r\n            window.location.reload()\r\n            } catch (err) {}\r\n        }\r\n\r\n    const choseDeletedCatId = (e) => {\r\n        console.log(e.target.value);\r\n        \r\n        setCatId(e.target.value)\r\n              }\r\n\r\n    const setOptions = categories.map(i => <option value={i._id}>{i.name}</option>)\r\n\r\n    return (\r\n            <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Dodaj kategorię</h2>\r\n                <form\r\n                onSubmit={catSubmitHandler}\r\n                >\r\n                <Input \r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nazwa kategorii\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Button type=\"submit\"\r\n                    disabled={!formState.isValid}>\r\n                    DODAJ\r\n                    </Button>\r\n                    </form>\r\n                <h2>Usuń kategorię</h2>\r\n                {categories.length > 0 ? <select name=\"items\" id=\"items\" onChange={choseDeletedCatId} >\r\n                    <option value={''}>wybierz kategorię</option>\r\n                    {setOptions}\r\n                </select> : <p>Brak Kategorii</p>}\r\n                <Button \r\n                onClick={deleteCategorySubmitHandler}\r\n                disabled={!catId}\r\n                >USUŃ</Button>\r\n            </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminCategory\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Button from \"../../FormElements/Button\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\n\r\nconst AdminDeleteItem = () => {\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [itemId, setItemId] = useState(false);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n    \r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/items`\r\n              );\r\n      \r\n              setItems(responseData.items);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchItems();\r\n      }, [sendRequest])\r\n\r\n    const deleteItemSubmitHandler = async event => {\r\n        event.preventDefault();\r\n            try {\r\n              await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/items/${itemId}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                  Authorization: 'Bearer ' + auth.token\r\n                }\r\n              );\r\n            alert(\"Usunięto produkt\")\r\n            \r\n            window.location.reload()\r\n            } catch (err) {}\r\n        }\r\n\r\n    const choseDeletedItemId = (e) => {\r\n            setItemId(e.target.value)\r\n              }\r\n\r\n\r\n    const setOptions = items.map(i => <option value={i.id}>{i.name}</option>)\r\n\r\n    return (\r\n            <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Usuń</h2>\r\n                {items.length > 0 ? <select name=\"items\" id=\"items\" onChange={choseDeletedItemId} >\r\n                    <option value={''}>wybierz produkt</option>\r\n                    {setOptions}\r\n                </select> : <p>Brak produktów</p>}\r\n                <Button \r\n                onClick={deleteItemSubmitHandler}\r\n                disabled={!itemId}\r\n                >USUŃ</Button>\r\n            </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminDeleteItem\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminDeliveryPrice = () => {\r\n    const [value, setValue] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          value: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchValue = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/delivery/${process.env.REACT_APP_DELIVERY_PRICE_ID}`\r\n              );\r\n              setValue(responseData.delivery_price);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchValue();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const valueSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/delivery/${process.env.REACT_APP_DELIVERY_PRICE_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                value: parseInt(formState.inputs.value.value)\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień wartość opłaty za dowóz</h2>\r\n                {value && <form\r\n                onSubmit={valueSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"value\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Minimalna wartość opłaty za dowóz (zł)\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={value.value}\r\n                    /> \r\n                    <Button type=\"submit\"\r\n                    >\r\n                    ZMIEŃ WARTOŚĆ\r\n                    </Button> \r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminDeliveryPrice\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminDeliveryPrice = () => {\r\n    const [actualDeliveryTime, setActualDeliveryTime] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          deliveryTime: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchDeliveryTime = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/deliverytime/${process.env.REACT_APP_DELIVERY_TIME_ID}`\r\n              );\r\n              setActualDeliveryTime(responseData.deliveryTime.time);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchDeliveryTime();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const deliveryTimeSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/deliverytime/${process.env.REACT_APP_DELIVERY_TIME_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                time: parseInt(formState.inputs.deliveryTime.value)\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień czas dowozu</h2>\r\n                {actualDeliveryTime && <form\r\n                onSubmit={deliveryTimeSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"deliveryTime\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Czas dowozu (min)\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={actualDeliveryTime}\r\n                    /> \r\n                    <Button type=\"submit\"\r\n                    >\r\n                    ZMIEŃ CZAS\r\n                    </Button> \r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminDeliveryPrice\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminTime = () => {\r\n    const [times, setTimes] = useState([]);\r\n    const [time, setTime] = useState(false);\r\n    const [timeAvailability, setTimeAvailability] = useState();\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          startHour: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        startMinute: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        endHour: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        endMinute: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n      const [dayFormState, selectHandler] = useForm(\r\n        {\r\n            day: {\r\n              value: '',\r\n              isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchTimes = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/time`\r\n              );\r\n              setTimes(responseData.time);             \r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchTimes();\r\n      }, [sendRequest])\r\n\r\n      useEffect(() => {\r\n        const fetchTime = async () => {\r\n            if(dayFormState.inputs.day.value) {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/time/${dayFormState.inputs.day.value}`\r\n              );\r\n              setTime(responseData.time);\r\n              setTimeAvailability(responseData.time.available);\r\n        } catch (err) {}      \r\n        } else return\r\n    }\r\n    fetchTime();\r\n  }, [sendRequest, dayFormState.inputs.day.value])\r\n    \r\n\r\n    const timeSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/time/${dayFormState.inputs.day.value}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                startHour: parseInt(formState.inputs.startHour.value),\r\n                startMinute: parseInt(formState.inputs.startMinute.value),\r\n                endHour: parseInt(formState.inputs.endHour.value),\r\n                endMinute: parseInt(formState.inputs.endMinute.value),\r\n                available: timeAvailability\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano Godziny\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n      const changeAvailability = () => {\r\n        setTimeAvailability(prevAvailibility => !prevAvailibility)\r\n    }\r\n\r\n    const setOptions = times.map(i => <option value={i._id}>{i.day}</option>)\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień godziny dowozu</h2>\r\n                {times.length > 0 && <Input \r\n                    id=\"day\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Wybierz dzień\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wybierz poprawny dzień.\"\r\n                    onInput={selectHandler}\r\n                    options={setOptions}\r\n                    />}\r\n                \r\n                {time && <form\r\n                onSubmit={timeSubmitHandler}\r\n                >\r\n                    <div className=\"start\">\r\n                    <span>Start: </span>\r\n                    <Input \r\n                    id=\"startHour\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={23}\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.start.hour}\r\n                    />\r\n                    :\r\n                    <Input \r\n                    id=\"startMinute\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={59}\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.start.minute}\r\n                    />\r\n                    </div>\r\n                    <div className=\"end\">\r\n                        <span>Koniec: </span>\r\n                    <Input \r\n                    id=\"endHour\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={23}\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.end.hour}\r\n                    />\r\n                    :\r\n                    <Input \r\n                    id=\"endMinute\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={59}\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.end.minute}\r\n                    />\r\n                    <div className='availability' style={{marginTop: \"1em\"}}>\r\n                    <label for='availability' style={{fontWeight: 'bold', marginBottom: '0.5rem'}}>Dowóz aktywny?</label>\r\n                    <input id='availability' type='checkbox' onChange={changeAvailability} checked={timeAvailability} style={{display: 'block', margin: 'auto'}} />\r\n                    </div>\r\n                    \r\n                    </div>\r\n                    <Button type=\"submit\"\r\n                    >\r\n                    ZMIEŃ GODZINY\r\n                    </Button>\r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminTime\r\n\r\n","import React from 'react'\r\nimport AdminDeliveryPrice from './AdminDeliveryPrice'\r\nimport AdminDeliveryTime from './AdminDeliveryTime'\r\nimport AdminTime from './AdminTime'\r\n\r\nconst AdminDelivery = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ borderBottom: \"1px solid black\", borderTop: \"1px solid black\" }}>\r\n            <AdminTime /> \r\n            </div>\r\n            <div style={{ borderBottom: \"1px solid black\", borderTop: \"1px solid black\" }}>\r\n            <AdminDeliveryTime />\r\n            </div>\r\n            <div style={{ borderBottom: \"1px solid black\", borderTop: \"1px solid black\" }}>\r\n            <AdminDeliveryPrice />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminDelivery\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\n\r\nimport ImageUpload from \"../../FormElements/ImageUpload\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\nimport Modal from '../../UIElements/Modal';\r\n\r\nconst AdminSpecialReservation = () => {\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [reservation, setReservation] = useState([]);\r\n    const [reservationDay, setReservationDay] = useState(false);\r\n    const [availableHours, setAvailableHours] = useState([]);\r\n    const [available, setAvailable] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const [dayFormState, selectDayHandler] = useForm(\r\n        {\r\n            name: {\r\n              value: '',\r\n              isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            hour: {\r\n              value: '',\r\n              isValid: false\r\n          },\r\n          guests: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n    );\r\n\r\n    useEffect(() => {\r\n        const fetchSpecialReservation = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/reservation`\r\n              );\r\n              setAvailable(responseData.reservations[0].available.value)\r\n              setMessage(responseData.reservations[0].available.message)\r\n              setReservation(responseData.reservations[0].days);\r\n        } catch (err) {}     \r\n    };\r\n    fetchSpecialReservation();\r\n      }, [sendRequest])\r\n\r\n    useEffect(() => {\r\n        const fetchDay = async () => {\r\n            if(dayFormState.inputs.name.value) {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/reservation/${dayFormState.inputs.name.value}`\r\n              );\r\n              setReservationDay(responseData.reservation);\r\n              const hours = responseData.reservation.availableHours\r\n              const sortHours = hours.sort((a, b) => {\r\n               return a.hour - b.hour})\r\n              console.log(sortHours);\r\n              setAvailableHours(sortHours)\r\n        } catch (err) {}      \r\n        } else return\r\n    }\r\n    fetchDay();\r\n  }, [sendRequest, dayFormState.inputs.name.value])\r\n\r\n  const inputChange = (e) => {\r\n      e.preventDefault()\r\n      const hourId = availableHours.find(i => i._id === e.target.id);\r\n      const newGuests = parseInt(e.target.value)\r\n      hourId.guests = newGuests\r\n      const newAvailableHours = {\r\n        ...availableHours\r\n      }\r\n      setAvailableHours(Object.values(newAvailableHours))\r\n  }\r\n  const deleteInput = (e) => {\r\n    const hourId = availableHours.find(i => i._id === e.target.id);\r\n    const newAvailableHours = availableHours.filter(i => !(i === hourId));\r\n    setAvailableHours(Object.values(newAvailableHours))\r\n  }\r\n  const changeAvailability = () => {\r\n    setMessage('')\r\n    setAvailable(prevAvailable => !prevAvailable)\r\n  }\r\n  const messageHandler = (e) => {\r\n    setMessage(e.target.value)\r\n  }\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault()\r\n    const newAvailable = {\r\n      value: available,\r\n      message\r\n    }\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/api/reservation/${reservationDay._id}`,\r\n        'PATCH',\r\n        JSON.stringify({\r\n          available: newAvailable,\r\n          availableHours\r\n        }),\r\n        {\r\n          Authorization: 'Bearer ' + auth.token,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      );\r\n          alert(\"Zaktualizowano produkt\")\r\n          window.location.reload()\r\n    } catch (err) {}\r\n  }\r\n\r\n  const submitNewHourHandler = async (e) => {\r\n    e.preventDefault()\r\n    console.log(formState.inputs.hour.value, formState.inputs.guests.value);\r\n    \r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/api/reservation/${reservationDay._id}`,\r\n        'POST',\r\n        JSON.stringify({\r\n          hour: formState.inputs.hour.value,\r\n          guests: formState.inputs.guests.value\r\n        }),\r\n        {\r\n          Authorization: 'Bearer ' + auth.token,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      );\r\n          alert(\"Dodano godzinę\")\r\n          window.location.reload()\r\n    } catch (err) {}\r\n  }\r\n\r\n  const closeModalHandler = () => {\r\n    setShowModal(false)\r\n  }\r\n\r\n  const openModalHandler = () => {\r\n    setShowModal(true)\r\n  }\r\n\r\n    const setDaysOptions = reservation.map(i => <option value={i._id}>{i.name}</option>)\r\n    const setInputs = availableHours.map((i, id) => {\r\n        return (\r\n            <div key={id}>\r\n              <p>\r\n                <span style={{color: \"black\", fontWeight: \"bold\"}}>Godzina {i.hour}:00 - </span>\r\n                <span style={{color: \"black\", fontWeight: \"bold\"}}>Liczba gości:</span>\r\n              <input\r\n                style={{margin: \"0 1em\", width: \"10%\", textAlign: \"center\"}}\r\n                type=\"number\"\r\n                id={i._id}\r\n                value={availableHours[id].guests}\r\n                onChange={inputChange}\r\n                ></input>\r\n                <span \r\n                id={i._id}\r\n                class=\"fas fa-times\" \r\n                style={{cursor: 'pointer'}} \r\n                onClick={deleteInput}\r\n                ></span>\r\n              </p>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            <Modal\r\n            show={showModal}\r\n            onCancel={closeModalHandler}\r\n            header={\r\n              <h2>Nowa Godzina</h2>\r\n            }\r\n            contentClass=\"place-item__modal-content\"\r\n            footerClass=\"place-item__modal-actions\"\r\n            footer={<Button onClick={closeModalHandler}>ZAMKNIJ</Button>}\r\n            >\r\n            <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            <form \r\n              className=\"new-hour\"\r\n              onSubmit={submitNewHourHandler}\r\n            >\r\n                <Input\r\n                id=\"hour\"\r\n                element=\"input\"\r\n                type=\"number\"\r\n                label=\"Godzina\"\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                errorText=\"Wprowadź poprawną godzinę.\"\r\n                onInput={inputHandler}\r\n                ></Input>\r\n                <Input\r\n                id=\"guests\"\r\n                element=\"input\"\r\n                type=\"number\"\r\n                label=\"Liczba gości\"\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                errorText=\"Wprowadź poprawną liczbę gości.\"\r\n                onInput={inputHandler}\r\n                ></Input>\r\n                <Button \r\n                 type=\"submit\"\r\n                 disabled={!formState.isValid}\r\n                 onClick={submitNewHourHandler}\r\n                >DODAJ\r\n                </Button>\r\n              </form>\r\n            </React.Fragment>\r\n            </Modal>\r\n\r\n\r\n            <h2 onClick={() => console.log(availableHours)\r\n            }>Zaktualizuj liczbę gości</h2>\r\n                {reservation.length > 0 && <Input \r\n                    id=\"name\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Wybierz dzień\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wybierz dzień.\"\r\n                    onInput={selectDayHandler}\r\n                    options={setDaysOptions}\r\n                />}\r\n                {reservationDay && <div>\r\n                {setInputs}\r\n                <Button \r\n                onClick={openModalHandler}\r\n                >Dodaj godzinę</Button>\r\n                </div>\r\n                }\r\n                <form \r\n                onSubmit={submitHandler}\r\n                >\r\n                <div style={{borderTop: '1px solid', borderBottom: '1px solid', color: 'black'}}>\r\n                  <label for='available' style={{fontWeight: 'bold', padding: '0.5em', display: 'block'}}>Dostępność:</label>\r\n                  <input id='available' type='checkbox' onChange={changeAvailability} checked={available} style={{display: 'block', margin: '0.5em auto'}} />\r\n                  {!available && <p><span>Wiadomość:</span><textarea onChange={messageHandler} value={message} style={{display: 'block', margin: '0.5em auto'}}/></p>}\r\n                </div>\r\n                <Button \r\n                type=\"submit\">\r\n                  ZAKTUALIZUJ\r\n                </Button>\r\n                </form>\r\n                \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminSpecialReservation\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport ImageUpload from \"../../FormElements/ImageUpload\"\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\n  import { AuthContext } from '../../../context/auth-context';\r\n\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\n\r\n\r\nconst AdminUpdateItem = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [items, setItems] = useState([]);\r\n    const [item, setItem] = useState(false);\r\n    const [itemAvailability, setItemAvailability] = useState();\r\n    const [itemBonus, setItemBonus] = useState();\r\n    const [itemSpecial, setItemSpecial] = useState();\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n            description: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            price: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            category: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n        // image: {\r\n        //   value: null,\r\n        //   isValid: false\r\n        // }\r\n        },\r\n        false\r\n      );\r\n\r\n    const [itemFormState, selectHandler] = useForm(\r\n        {\r\n            name: {\r\n              value: '',\r\n              isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category`\r\n              );\r\n      \r\n              setCategories(responseData.category);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    const fetchItems = async () => {\r\n        try {\r\n          const responseData = await sendRequest(\r\n            `${process.env.REACT_APP_BACKEND_URL}/api/items`\r\n          );\r\n  \r\n          setItems(responseData.items);\r\n    } catch (err) {}\r\n      \r\n};\r\n    fetchCategories();\r\n    fetchItems();\r\n      }, [sendRequest])\r\n\r\n      useEffect(() => {\r\n        \r\n            const fetchItem = async () => {\r\n                if(itemFormState.inputs.name.value) {\r\n                try {\r\n                  const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/items/${itemFormState.inputs.name.value}`\r\n                  );\r\n          \r\n                  setItem(responseData.item);\r\n                  setItemAvailability(responseData.item.available)\r\n                  setItemBonus(responseData.item.bonus)\r\n                  setItemSpecial(responseData.item.special)\r\n            } catch (err) {}      \r\n            } else return\r\n        }\r\n    fetchItem();\r\n      }, [sendRequest, itemFormState.inputs.name.value])\r\n    \r\n\r\n    const itemSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/items/${item.id}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                name: formState.inputs.name.value,\r\n                description: formState.inputs.description.value,\r\n                price: formState.inputs.price.value,\r\n                category: formState.inputs.category.value,\r\n                available: itemAvailability,\r\n                bonus: itemBonus,\r\n                special: itemSpecial\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano produkt\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n    const setOptions = categories.map(i => <option value={i.id}>{i.name}</option>)\r\n    const setItemOptions = items.map(i => <option value={i.id}>{i.name}</option>)\r\n\r\n    const changeAvailability = () => {\r\n        setItemAvailability(prevAvailibility => !prevAvailibility)\r\n    }\r\n\r\n    const changeBonus = () => {\r\n      setItemBonus(prevBonus => !prevBonus)\r\n  }\r\n\r\n  const changeSpecial = () => {\r\n    setItemSpecial(prevSpecial => !prevSpecial)\r\n}\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zaktualizuj danie / produkt</h2>\r\n                <Input \r\n                    id=\"name\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Wybierz Produkt\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wybierz poprawny produkt.\"\r\n                    onInput={selectHandler}\r\n                    options={setItemOptions}\r\n                    />\r\n                {item && <form\r\n                onSubmit={itemSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nazwa produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={item.name}\r\n                    />\r\n                    {/* <ImageUpload\r\n                    center\r\n                    id=\"image\"\r\n                    onInput={inputHandler}\r\n                    previewUrl={item.image}\r\n                    errorText=\"Wprowadź zdjęcie produktu.\"\r\n                    /> */}\r\n                    <Input \r\n                    id=\"description\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"Opis produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawny opis.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={item.description}\r\n                    />\r\n                    <Input \r\n                    id=\"price\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Cena\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną cenę.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={item.price}\r\n                    />\r\n                    {categories.length > 0 && <Input \r\n                    id=\"category\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Kategoria\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną kategorię.\"\r\n                    onInput={inputHandler}\r\n                    options={setOptions}\r\n                    initialValue={item.category}\r\n                    />}\r\n                    <label for='availability' style={{fontWeight: 'bold', marginBottom: '0.5rem'}}>Produkt dostępny?</label>\r\n                    <input id='availability' type='checkbox' onChange={changeAvailability} checked={itemAvailability} style={{display: 'block', margin: 'auto'}} />\r\n                    <label for='bonus' style={{fontWeight: 'bold', marginBottom: '0.5rem'}}>Produkt gratis?</label>\r\n                    <input id='bonus' type='checkbox' onChange={changeBonus} checked={itemBonus} style={{display: 'block', margin: 'auto'}} />\r\n                    <label for='special' style={{fontWeight: 'bold', marginBottom: '0.5rem'}}>Kolacje degustacyjne?</label>\r\n                    <input id='special' type='checkbox' onChange={changeSpecial} checked={itemSpecial} style={{display: 'block', margin: 'auto'}} />\r\n                    <Button \r\n                    type=\"submit\"\r\n                    // disabled={!formState.isValid}\r\n                    >\r\n                    ZMIEŃ\r\n                    </Button>\r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminUpdateItem\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminValue = () => {\r\n    const [value, setValue] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          value: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchValue = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`\r\n              );\r\n              setValue(responseData.value);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchValue();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const valueSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                newValue: parseInt(formState.inputs.value.value)\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień minimalną wartość zamówienia</h2>\r\n                {value && <form\r\n                onSubmit={valueSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"value\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Minimalna wartość zamówienia (zł)\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={value.value}\r\n                    />\r\n                    <Button type=\"submit\"\r\n                    >\r\n                    ZMIEŃ WARTOŚĆ\r\n                    </Button>\r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminValue\r\n","import React, {useState} from 'react';\r\nimport \"./Admin.css\"\r\nimport AdminNav from './AdminNav';\r\nimport AdminAddItem from './AdminStore/AdminAddItem';\r\nimport AdminBonus from './AdminStore/AdminBonus';\r\nimport AdminCategory from './AdminStore/AdminCategory';\r\nimport AdminDeleteItem from './AdminStore/AdminDeleteItem';\r\nimport AdminDelivery from './AdminStore/AdminDelivery';\r\nimport AdminSpecialReservation from './AdminStore/AdminSpecialReservation';\r\nimport AdminUpdateItem from './AdminStore/AdminUpdate';\r\nimport AdminValue from './AdminStore/AdminValue';\r\n\r\nconst AdminPanel = () => {\r\n\r\n    const [section, setSection] = useState(\"0\");\r\n\r\n    const changeSection = (e) => {\r\n        console.log(e.target.id);\r\n        \r\n        setSection(e.target.id);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"admin\">\r\n                <div className=\"admin-navigation\">\r\n                    <AdminNav changeSection={changeSection} />\r\n                </div>\r\n                <div className=\"admin-content\">\r\n                {section === \"0\" && <AdminAddItem />}\r\n                {section === \"1\" && <AdminUpdateItem />}\r\n                {section === \"2\" && <AdminDeleteItem />}\r\n                {section === \"3\" && <AdminCategory />}\r\n                {section === \"4\" && <AdminValue />}\r\n                {section === \"5\" && <AdminDelivery />}\r\n                {section === \"6\" && <AdminBonus />}\r\n                {section === \"7\" && <AdminSpecialReservation />}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminPanel\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n\r\n    return (\r\n        \r\n    <ul className='nav'>\r\n        {/* <li className=\"main-navigation\">\r\n            <NavLink to='/special'exact>\r\n            Kolacje degustacyjne\r\n            </NavLink>\r\n        </li> */}\r\n        <li className=\"main-navigation\">\r\n            <NavLink to='/'exact>\r\n            Zamów\r\n            </NavLink>\r\n        </li>\r\n        <li className=\"main-navigation\">\r\n            <NavLink to='/koszyk'exact>\r\n            <span class=\"fas fa-shopping-cart\"></span>\r\n            </NavLink>\r\n        </li>\r\n    </ul>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","export default __webpack_public_path__ + \"static/media/logo.f284211f.png\";","import React, {useState} from 'react';\r\nimport './Header.css';\r\nimport Navigation from './Navigation';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport ErrorModal from \"../UIElements/ErrorModal\"\r\nimport SideDrawer from './SideDrawer';\r\nimport Backdrop from '../UIElements/Backdrop';\r\n\r\nimport Logo from '../../images/logo.png'\r\n\r\n\r\nconst Header = () => {\r\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n    const { error, clearError } = useHttpClient();\r\n\r\n      const openDrawerHandler = () => {\r\n        setDrawerIsOpen(true);\r\n      };\r\n    \r\n      const closeDrawerHandler = () => {\r\n        setDrawerIsOpen(false);\r\n      };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n            <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n              <nav className=\"main-navigation__drawer-nav\">\r\n          <Navigation />\r\n              </nav>\r\n\r\n            </SideDrawer>\r\n        <div className='header'>\r\n        <a href= \"https://niepospolita-lublin.com\" className=\"logo-link\" exact>\r\n            <div className='logo title'>\r\n              <img src={Logo} alt=\"logo\" className=\"logo\"></img>\r\n              <span>Niepospolita Restauracja</span>\r\n            </div>\r\n                </a>\r\n              <button\r\n                className=\"main-navigation__menu-btn\"\r\n                onClick={openDrawerHandler}\r\n                >\r\n                <span />\r\n                <span />\r\n                <span />\r\n              </button>\r\n            <div className='navigation'><Navigation/></div>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport \"./Footer.css\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nimport Logo from '../../images/logo.png'\r\n\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <a href= \"https://niepospolita-lublin.com\" className=\"logo-link\" exact>\r\n            <div className=\"footer-logo logo title\">\r\n              <img src={Logo} alt=\"logo\" className=\"logo\"></img>\r\n              <span>Powrót na stronę główną</span>\r\n            </div>\r\n            </a>\r\n            <div className=\"footer-menu\">\r\n                <h3>MENU</h3>\r\n                <ul className='nav'>\r\n                    <li className=\"main-navigation\">\r\n                    <NavLink to='/'exact>\r\n                    Zamów\r\n                    </NavLink>\r\n                    </li>\r\n                    <li className=\"main-navigation\">\r\n                    <NavLink to='/koszyk'exact>\r\n                    Koszyk\r\n                    </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export const sumItems = cartItems => {\r\n    return {\r\n        itemCount: cartItems.reduce((total, prod) => total + prod.quantity , 0),\r\n        total: cartItems.reduce((total, prod) => total + (prod.price * prod.quantity), 0)\r\n    }\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_ITEM':\r\n            if(!state.cartItems.find(item => item.id === action.payload.id)) {\r\n                state.cartItems.push({\r\n                    ...action.payload,\r\n                    quantity: 1\r\n                })\r\n            }\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems],\r\n                ...sumItems(state.cartItems)\r\n            }   \r\n        case 'REMOVE_ITEM':\r\n            const newCartItems = state.cartItems.filter(item => item.id !== action.payload.id);\r\n            return {\r\n                ...state,\r\n                cartItems: [...newCartItems],\r\n                ...sumItems(newCartItems)\r\n            }\r\n        case 'INCREASE':\r\n            const increaseIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\r\n            state.cartItems[increaseIndex].quantity++;\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems],\r\n                ...sumItems(state.cartItems)\r\n            }\r\n        case 'DECREASE':\r\n            const decreaseIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\r\n            state.cartItems[decreaseIndex].quantity--;\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems],\r\n                ...sumItems(state.cartItems),\r\n            }\r\n        case 'ADD_BONUS_ITEM':\r\n            const bonusItem = {\r\n                id: action.payload._id,\r\n                item: action.payload.name,\r\n                quantity: 1,\r\n                price: 0\r\n            }\r\n        return {\r\n                ...state,\r\n                cartItems: [...state.cartItems],\r\n                ...sumItems(state.cartItems),\r\n                bonusItem\r\n            }   \r\n        default:\r\n                return state;\r\n    }\r\n}\r\nexport default cartReducer;","import React, { createContext, useReducer } from 'react';\r\nimport cartReducer from './cart-reducer';\r\n\r\nexport const CartContext = createContext();\r\n\r\nconst initialState = { cartItems: [], itemCount: 0, total: 0, bonusItem: false };\r\n\r\nconst CartContextProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(cartReducer, initialState);\r\n    const addProduct = (product) => dispatch({ type: 'ADD_ITEM', payload: product });\r\n    const removeProduct = (product) => dispatch({ type: 'REMOVE_ITEM', payload: product });\r\n    const increase = (product) => dispatch({ type: 'INCREASE', payload: product });\r\n    const decrease = (product) => dispatch({ type: 'DECREASE', payload: product });\r\n    const addBonusItem = (product) => dispatch({ type: 'ADD_BONUS_ITEM', payload: product });\r\n\r\n    const contextValues = {\r\n        ...state,\r\n        addProduct,\r\n        removeProduct,\r\n        increase,\r\n        decrease,\r\n        addBonusItem\r\n    }\r\n    return (\r\n        <CartContext.Provider value={ contextValues }>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\nexport default CartContextProvider;","export const isInCart = (product, cartItems) => {\r\n    return cartItems.find(item => item.id === product.id)\r\n}","import React, { useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from '../FormElements/Button';\r\nimport { CartContext } from '../../context/cart-context';\r\nimport { isInCart } from '../../helper';\r\n\r\n\r\nconst ProductCard = ({id, name, price, image, description}) => {\r\n\r\n    const product = { id, name, price, image, description };\r\n    const { addProduct, cartItems } = useContext(CartContext)\r\n    const history = useHistory()\r\n\r\n    const goToCartSection = () => {\r\n          history.push(\"/koszyk\");\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div \r\n            className=\"item-card\"\r\n            >\r\n                <div className=\"item-card__image\">\r\n                <img src={`${process.env.REACT_APP_AWS_URL}/${image}`} alt={name}></img>\r\n                </div>\r\n                <div className=\"item-card__info\">\r\n                <p>\r\n                    <span style={{fontWeight: \"bold\"}}>{name}</span>\r\n                    <span style={{fontWeight: \"bold\"}}>{price} zł</span>\r\n                </p>\r\n                {\r\n                    !isInCart(product, cartItems) && <Button onClick={() => {\r\n                        addProduct(product)\r\n                    }}>Dodaj do koszyka</Button>\r\n                }\r\n                {\r\n                    isInCart(product, cartItems) && <Button active={true} onClick={() => goToCartSection()}>Przejdź do koszyka</Button>\r\n                }\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductCard\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useDate = () => {\r\n\r\n    const [today, setToday] = useState(false);\r\n    const [dayId, setDayId] = useState(false);\r\n    const [currentHour, setCurrentHour] = useState(false);\r\n    const [currentMinute, setCurrentMinute] = useState(false);\r\n\r\n    useEffect(() => {\r\n    const date = new Date().getDay()\r\n    const hour = new Date().getHours()\r\n    const minute = new Date().getMinutes()\r\n    setCurrentHour(hour)\r\n    setCurrentMinute(minute)\r\n        switch (date) {\r\n            case 0: \r\n                setToday('Niedziela');\r\n                setDayId(\"616866d188b1a5c67bdb3547\")\r\n                break;\r\n            case 1: \r\n                setToday('Poniedziałek');\r\n                setDayId(\"6168665588b1a5c67bdb3539\")\r\n                break;\r\n            case 2: \r\n                setToday('Wtorek');\r\n                setDayId(\"6168666588b1a5c67bdb353b\")\r\n                break;\r\n            case 3: \r\n                setToday('Środa');\r\n                setDayId(\"6168667c88b1a5c67bdb353d\")\r\n                break;\r\n            case 4: \r\n                setToday('Czwartek');\r\n                setDayId(\"6168669588b1a5c67bdb3540\")\r\n                break;\r\n            case 5: \r\n                setToday('Piątek');\r\n                setDayId(\"616866bd88b1a5c67bdb3543\")\r\n                break;\r\n            case 6: \r\n                setToday('Sobota');\r\n                setDayId(\"616866c888b1a5c67bdb3545\")\r\n                break;\r\n            default:\r\n                setToday('Niedziela');\r\n                setDayId(\"616866d188b1a5c67bdb3547\")\r\n                break;\r\n        }\r\n    }, [])\r\n\r\n  return { today, dayId, currentHour, currentMinute };\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\nimport \"./Store.css\";\r\nimport ProductCard from './ProductCard';\r\nimport Card from '../UIElements/Card'\r\n\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useDate } from '../hooks/date-hook';\r\n\r\n\r\nconst Store = () => {\r\n\r\n    const [items, setItems] = useState();\r\n    const [allItems, setAllItems] = useState();\r\n    const [categories, setCategories] = useState([]);\r\n    const [minOrderValue, setMinOrderValue] = useState();\r\n    const [deliveryHours, setDeliveryHours] = useState(false);\r\n    const [deliveryPrice, setDeliveryPrice] = useState(false);\r\n    const [minBonusDeliveryPrice, setMinBonusDeliveryPrice] = useState(false);\r\n    const [deliveryAvailable, setDeliveryAvailable] = useState(true);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const { today, dayId } = useDate();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        const fetchItems = async () => {\r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/items/`\r\n                  );\r\n                const filteredItems = responseData.items.filter(i => !(i.category === \"INNE\"))\r\n                const sortItemsByName = filteredItems.sort((a, b) => a.name > b.name ? 1 : -1)\r\n                const sortItemsByCategory = sortItemsByName.sort((a, b) => {\r\n                    let aCatValue\r\n                    let bCatValue\r\n                    if (a.category === \"PRZYSTAWKI\") {\r\n                        aCatValue = 0\r\n                    } else if (a.category === \"ZUPY\") {\r\n                        aCatValue = 1\r\n                    } else if (a.category === \"SAŁATY\") {\r\n                        aCatValue = 2\r\n                    } else if (a.category === \"DANIA GŁÓWNE\") {\r\n                        aCatValue = 3\r\n                    } else if (a.category === \"BURGERY I KANAPKI\") {\r\n                        aCatValue = 4\r\n                    } else if (a.category === \"DODATKI\") {\r\n                        aCatValue = 5\r\n                    } else if (a.category === \"DANIA DLA DZIECI\") {\r\n                        aCatValue = 6\r\n                    } else if (a.category === \"DESERY\") {\r\n                        aCatValue = 7\r\n                    } else aCatValue = 10\r\n\r\n                    if (b.category === \"PRZYSTAWKI\") {\r\n                        bCatValue = 0\r\n                    } else if (b.category === \"ZUPY\") {\r\n                        bCatValue = 1\r\n                    } else if (b.category === \"SAŁATY\") {\r\n                        bCatValue = 2\r\n                    } else if (b.category === \"DANIA GŁÓWNE\") {\r\n                        bCatValue = 3\r\n                    } else if (b.category === \"BURGERY I KANAPKI\") {\r\n                        bCatValue = 4\r\n                    } else if (b.category === \"DODATKI\") {\r\n                        bCatValue = 5\r\n                    } else if (b.category === \"DANIA DLA DZIECI\") {\r\n                        bCatValue = 6\r\n                    } else if (b.category === \"DESERY\") {\r\n                        bCatValue = 7\r\n                    } else bCatValue = 10\r\n                    if ( aCatValue < bCatValue ){\r\n                    return -1;\r\n                    }\r\n                    if ( aCatValue > bCatValue ){\r\n                    return 1;\r\n                    }\r\n                  return 0;})\r\n                // console.log(filteredItems);\r\n                console.log(sortItemsByCategory);\r\n                \r\n                setItems(sortItemsByCategory)\r\n                setAllItems(sortItemsByCategory)\r\n                } catch (err) {}\r\n            }\r\n            const fetchCategories = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/category/`\r\n                  );\r\n                const storeCategories = responseData.category.filter(cat => !(cat.name === \"INNE\"))\r\n                setCategories(storeCategories)\r\n                } catch (err) {}\r\n            } \r\n            const getMinOrderValue = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`\r\n                  );\r\n                \r\n                setMinOrderValue(responseData.value)\r\n                } catch (err) {}\r\n            } \r\n            const getDeliveryHours = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/time/`\r\n                  );\r\n                \r\n                  setDeliveryHours(responseData.time)\r\n                  const currentDay = responseData.time.find(time => time._id === dayId)\r\n                  const currentDayAvailibility = currentDay.available\r\n                  setDeliveryAvailable(currentDayAvailibility)\r\n                } catch (err) {}\r\n            } \r\n            const fetchDeliveryPrice = async () => {\r\n                try {\r\n                  const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/delivery/${process.env.REACT_APP_DELIVERY_PRICE_ID}`\r\n                  );\r\n                  setDeliveryPrice(responseData.delivery_price);\r\n                \r\n            } catch (err) {}\r\n              \r\n        };\r\n        const getBonusDeliveryPrice = async () => {\r\n                \r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/bonus-delivery/${process.env.REACT_APP_BONUS_DELIVERY_PRICE_ID}`\r\n                  );\r\n                  setMinBonusDeliveryPrice(responseData.bonus_delivery_price.value);\r\n            } catch (err) {}\r\n        }\r\n            getBonusDeliveryPrice()\r\n            fetchDeliveryPrice();\r\n            fetchItems()\r\n            fetchCategories()\r\n            getMinOrderValue()\r\n            getDeliveryHours()\r\n    }, [sendRequest, dayId])\r\n\r\n    const itemList = () => {\r\n        let item_list\r\n        let sortItems\r\n        let availableItems\r\n        if(items) {\r\n            availableItems = items.filter(item => item.available === true)\r\n            // sortItems = availableItems.sort((a, b) => a.name > b.name ? 1 : -1)\r\n            item_list = availableItems.map(i => {\r\n            return (<ProductCard key={i.id} id={i.id} name={i.name} price={i.price} description={i.description} image={i.image} category={i.category} available={i.available} />)\r\n    })\r\n    } return item_list\r\n    }\r\n\r\n    const filterByCategory = (e) => {\r\n        let filteredItems\r\n        if (e.target.innerHTML === \"WSZYSTKO\") {\r\n            filteredItems = allItems\r\n        } else {\r\n            const categoryValue = e.target.innerHTML.toLowerCase()\r\n            filteredItems = allItems.filter(i => \r\n                i.category.toLowerCase().includes(categoryValue))\r\n        }\r\n        setItems(filteredItems)\r\n    }\r\n\r\n    const showDeliveryHours = () => {\r\n        let message\r\n        let currentDay\r\n        if (deliveryHours && today && dayId) {\r\n            currentDay = deliveryHours.find(time => time._id === dayId)\r\n            const startHour = currentDay.time.start.hour\r\n            const startMinute = currentDay.time.start.minute\r\n            const endHour = currentDay.time.end.hour\r\n            const endMinute = currentDay.time.end.minute\r\n            message = `${startHour < 10 ? '0' + startHour : startHour}:${startMinute < 10 ? '0' + startMinute : startMinute} - ${endHour < 10 ? '0' + endHour : endHour}:${endMinute < 10 ? '0' + endMinute : endMinute}`\r\n            }\r\n        return message;\r\n    }\r\n\r\n    const categoryList = categories.map(cat => <li key={cat.id} onClick={filterByCategory}>{cat.name}</li>)\r\n\r\n    return (\r\n        <div className=\"store\"\r\n        >\r\n            <div className=\"store-info\">\r\n                <h1>Zamów online!</h1>\r\n                <p>\r\n                    {today && today} - \r\n                    {!deliveryAvailable && <b style={{color: 'red'}}>W dzisiejszym dniu nie dowozimy!</b>}\r\n                    {deliveryAvailable && <span> W dzisiejszym dniu dowozimy w godzinach <b>{deliveryHours && today && dayId && showDeliveryHours()}</b></span>}\r\n                </p>\r\n                <p>Minimalna kwota zamówienia: <b>{minOrderValue && minOrderValue.value} zł</b></p>\r\n                <p>Koszt dostawy: <b>{deliveryPrice && deliveryPrice.value} zł</b>. W przypadku dowozu poza Lublin koszt obliczany wg odległości.</p>\r\n                {minBonusDeliveryPrice && <p>Zamówienie powyżej <b>{minBonusDeliveryPrice} zł</b> <b style={{color: \"lightgreen\"}}>dostawa gratis!</b></p>}\r\n                \r\n            </div>\r\n            <Card>\r\n            <div className=\"categories\">\r\n                <h2>Wybierz kategorię</h2>\r\n                <ul style={{color: \"white\"}}>\r\n                    <li onClick={filterByCategory}>WSZYSTKO</li>\r\n                {categories.length > 0 && categoryList}\r\n                </ul>\r\n            </div>\r\n            </Card>\r\n            <div className=\"store-items\">\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                {items && itemList()}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Store\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport \"./Cart.css\"\r\nimport Button from '../FormElements/Button'\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useDate } from '../hooks/date-hook';\r\nimport ErrorModal from \"../UIElements/ErrorModal\";\r\nimport { CartContext } from '../../context/cart-context';\r\nimport Card from '../UIElements/Card';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst Cart = () => {\r\n\r\n    const [orderValid, setOrderValid] = useState({valid: false, message: ''})\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [minOrderValue, setMinOrderValue] = useState(false);\r\n    const [deliveryHours, setDeliveryHours] = useState(false);\r\n    const [deliveryPrice, setDeliveryPrice] = useState(false);\r\n    const [minBonusDeliveryPrice, setMinBonusDeliveryPrice] = useState(false);\r\n    const [minBonusItemsPrice, setMinBonusItemsPrice] = useState(false);\r\n    const [bonusItemCheckedId, setBonusItemCheckedId] = useState(false);\r\n    const [bonusItems, setBonusItems] = useState([]);\r\n    const { cartItems, removeProduct, increase, decrease, total, addBonusItem, bonusItem } = useContext(CartContext);\r\n    const { today, dayId, currentHour, currentMinute } = useDate();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n            const getMinOrderValue = async () => {\r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`\r\n                  );\r\n                \r\n                setMinOrderValue(responseData.value)\r\n                } catch (err) {}\r\n            }\r\n            const getDeliveryHours = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/time/`\r\n                  );\r\n                \r\n                  setDeliveryHours(responseData.time)\r\n                } catch (err) {}\r\n            } \r\n            const getDeliveryPrice = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/delivery/${process.env.REACT_APP_DELIVERY_PRICE_ID}`\r\n                      );\r\n                      setDeliveryPrice(responseData.delivery_price.value);\r\n                } catch (err) {}\r\n            }\r\n            const getBonusItems = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/bonus/`\r\n                      );\r\n                      setBonusItems(responseData.bonusItems);\r\n                } catch (err) {}\r\n            }\r\n            const getBonusItemsPrice = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/bonus-items/${process.env.REACT_APP_BONUS_ITEMS_PRICE_ID}`\r\n                      );\r\n                      setMinBonusItemsPrice(responseData.bonus_items_price.value);\r\n                } catch (err) {}\r\n            }\r\n            const getBonusDeliveryPrice = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/bonus-delivery/${process.env.REACT_APP_BONUS_DELIVERY_PRICE_ID}`\r\n                      );\r\n                      setMinBonusDeliveryPrice(responseData.bonus_delivery_price.value);\r\n                } catch (err) {}\r\n            }\r\n            getMinOrderValue()\r\n            getDeliveryHours()\r\n            getDeliveryPrice()\r\n            getBonusItems()\r\n            getBonusItemsPrice()\r\n            getBonusDeliveryPrice()\r\n    }, [sendRequest])\r\n\r\n    useEffect(() => {\r\n        const orderValidation = {valid: false, message: ''}\r\n        if(cartItems && deliveryHours && today && dayId && currentHour && currentMinute) {\r\n            const currentDay = deliveryHours.find(time => time._id === dayId)\r\n            // const startHour = currentDay.time.start.hour\r\n            // const startMinute = currentDay.time.start.minute\r\n            const endHour = currentDay.time.end.hour\r\n            const endMinute = currentDay.time.end.minute\r\n            \r\n                if (!currentDay.available) {\r\n                    orderValidation.valid = false\r\n                    orderValidation.message = 'W dzisiejszym dniu nie dowozimy'\r\n                } else if (total < minOrderValue.value) {\r\n                    orderValidation.valid = false\r\n                    orderValidation.message = `Minimalna kwota zamówienia to ${minOrderValue.value} zł`\r\n                } \r\n                // else if (startHour > currentHour || endHour < currentHour || (startHour === currentHour && startMinute >= currentMinute) || (endHour === currentHour && endMinute <= currentMinute)) {\r\n                // orderValidation.valid = false\r\n                // orderValidation.message = `W dzisiejszym dniu dania można zamawiać od ${startHour < 10 ? '0' + startHour : startHour }:${startMinute < 10 ? '0' + startMinute : startMinute} do ${endHour < 10 ? '0' + endHour : endHour }:${endMinute < 10 ? '0' + endMinute : endMinute}`\r\n                // }\r\n                else if (endHour < currentHour || (endHour === currentHour && endMinute <= currentMinute)) {\r\n                    orderValidation.valid = false\r\n                    orderValidation.message = `W dzisiejszym dniu już nie dowozimy. Zapraszamy ponownie.`\r\n                    }\r\n                else {\r\n                    orderValidation.valid = true\r\n                    orderValidation.message = ''\r\n            }\r\n        }\r\n        return (\r\n            setOrderValid(orderValidation)\r\n            )\r\n    }, [cartItems, deliveryHours, today, dayId, currentHour, currentMinute, total, minOrderValue])\r\n\r\n    const getCoordinates = () => {\r\n        Geocode.setApiKey('AIzaSyCC2-7o0QiPK0-IoueeS0VgFOgUbWNE_Gw')\r\n        Geocode.fromAddress(\"Eiffel Tower\").then(\r\n        (response) => {\r\n          const { lat, lng } = response.results[0].geometry.location;\r\n          console.log(lat, lng);\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n    }\r\n\r\n    const checkProductQuantity = (quantity, product) => {\r\n        if(quantity <= 0) removeProduct(product)\r\n    }\r\n\r\n    const changeBonusItem = (e) => {\r\n        setBonusItemCheckedId(e.target.id)\r\n    }\r\n\r\n    const showCartItems = cartItems.map(item => {\r\n        const product = { id: item.id, name: item.name, price: item.price, image: item.image, description: item.description };\r\n        const price = item.price * item.quantity\r\n        return (\r\n        <li className=\"item-card\" key={item.id}>\r\n            <img src={`${process.env.REACT_APP_AWS_URL}/${item.image}`} alt={item.name}></img>\r\n            <span className=\"item-name\">{item.name}</span>\r\n            <span class=\"fas fa-minus item-quantity__handler\" onClick={() => {\r\n                decrease(product)\r\n                checkProductQuantity(item.quantity, product)\r\n                }}></span>\r\n            <span class=\"item-quantity\" onClick={() => {getCoordinates()}}>{item.quantity}</span>\r\n            <span class=\"fas fa-plus item-quantity__handler\" onClick={() => {increase(product)}}></span>\r\n            <span class=\"item-price\">{price.toFixed(2)} zł</span>\r\n            <span class=\"fas fa-times item-remove\" onClick={() => {removeProduct(product)}}></span>\r\n        </li>\r\n            )\r\n    })\r\n\r\n    const showBonusItems = bonusItems.map(item => {\r\n        return <li className=\"item-card bonus-item\" key={item._id}>\r\n            {/* <img src={`${process.env.REACT_APP_AWS_URL}/${item.image}`} alt={item.image}></img> */}\r\n            <div>\r\n                <span>{item.name}</span>\r\n                <input id={item._id} type='checkbox' \r\n                onChange={changeBonusItem}\r\n                onClick={() => addBonusItem(item)}\r\n                checked={item._id === (bonusItemCheckedId || (bonusItem && bonusItem.id))} \r\n                style={{display: 'block', margin: 'auto', marginTop: '1em'}} />\r\n            </div>\r\n            \r\n        </li>\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        <div className=\"cart\">\r\n                <h1 onClick={() => console.log(bonusItem)}\r\n                >Twój koszyk</h1>\r\n                {cartItems.length > 0 &&<div className=\"cart-info\">\r\n                    <p>Koszt dowozu: <b>{deliveryPrice && deliveryPrice} zł</b>, w przypadku dowozu poza Lublin koszt obliczany wg odległości.</p>\r\n                    {minBonusDeliveryPrice && <p>Zamówienie powyżej {minBonusDeliveryPrice} zł <b style={{color: \"lightgreen\"}}>dostawa gratis!</b></p>}\r\n                    {bonusItems.length > 0 && minBonusItemsPrice && <p >Zamówienie powyżej {minBonusItemsPrice} zł <b style={{color: \"lightgreen\"}}>produkt gratis!</b></p>}\r\n                </div>}\r\n                {cartItems.length > 0 && <Card>\r\n            <div className=\"cart-products\">\r\n            <li className=\"item-card titles\">\r\n                    <span className='item-name'>Produkt</span>\r\n                    <span className='item-quantity-title'>Ilość</span>\r\n                    <span className='item-price-title'>Cena</span>\r\n                    {/* <span style={{width: '10%', marginLeft: '5px'}}></span> */}\r\n            </li>\r\n                {showCartItems}\r\n            <li className=\"item-card summary \">\r\n                    <span className='item-name'></span>\r\n                    <span className='total'>SUMA:  <b style={{marginLeft: \"5px\", color: \"white\"}}>{total.toFixed(2)} zł</b> \r\n                    {total.toFixed(2) <= minBonusDeliveryPrice ? <b> + ({deliveryPrice} zł dostawa)</b> : <span style={{fontSize: \"0.7em\", color: \"lightgreen\"}}>(powyżej {minBonusDeliveryPrice} zł dostawa gratis)</span>} </span>\r\n            </li>\r\n            <li className=\"item-card__alert\">\r\n                    <span>{!orderValid.valid && minOrderValue && <p style={{marginRight: '1em'}}>{orderValid.message}</p>}</span>\r\n            </li>\r\n            {total.toFixed(2) > minBonusItemsPrice && <div>\r\n                <h3>Wybierz produkt gratis</h3>\r\n                <div className=\"bonus\">\r\n                {showBonusItems}\r\n                </div>\r\n            </div>}\r\n            </div>\r\n            \r\n            </Card>}\r\n            {!cartItems.length > 0 && <h3 style={{color: \"white\"}}>Brak produktów w koszyku</h3>}\r\n            {cartItems.length > 0 && <Link to=\"/zamowienie\"><Button disabled={!orderValid.valid}>Przejdź do zamówienia</Button></Link>}\r\n            {!cartItems.length > 0 && <Link to=\"/\"><Button>Przejdź do sklepu</Button></Link>}\r\n        </div>\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport \"./Order.css\"\r\nimport Button from '../FormElements/Button'\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport ErrorModal from \"../UIElements/ErrorModal\";\r\nimport { CartContext } from '../../context/cart-context';\r\nimport Card from '../UIElements/Card';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useStripe } from '@stripe/react-stripe-js'\r\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'\r\nimport { useDate } from '../hooks/date-hook';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE,\r\n    VALIDATOR_EMAIL\r\n  } from '../util/validators';\r\n  import Input from '../FormElements/Input';\r\n\r\nimport { useForm } from \"../hooks/form-hook\"\r\n\r\nconst Order = () => {\r\n    \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    \r\n    const [deliveryPrice, setDeliveryPrice] = useState(false);\r\n    const [timepickerValue, setTimepickerValue] = useState('nie określono');\r\n    const [minTime, setMinTime] = useState();\r\n    const [maxTime, setMaxTime] = useState();\r\n    const [isToLateToOrder, setIsToLateToOrder] = useState(false);\r\n    const [paymentOffline, setPaymentOffline] = useState(false);\r\n\r\n    const [deliveryHours, setDeliveryHours] = useState(false);\r\n    const stripe = useStripe();\r\n    let history = useHistory();\r\n    \r\n    const { today, dayId, currentHour, currentMinute } = useDate();\r\n    const { cartItems, total, bonusItem } = useContext(CartContext);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n            const getDeliveryPrice = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/delivery/${process.env.REACT_APP_DELIVERY_PRICE_ID}`\r\n                      );\r\n                      setDeliveryPrice(responseData.delivery_price.value);\r\n                } catch (err) {}\r\n            }\r\n            const getDeliveryHours = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/time/`\r\n                  );\r\n                \r\n                  setDeliveryHours(responseData.time)\r\n                } catch (err) {}\r\n            } \r\n            getDeliveryPrice()\r\n            getDeliveryHours()\r\n    }, [sendRequest])\r\n\r\n    useEffect(() => {\r\n        let minOrderTime\r\n        let maxOrderTime\r\n        if(deliveryHours && today && dayId && currentHour && currentMinute) {\r\n            const currentDay = deliveryHours.find(time => time._id === dayId)\r\n            const startHour = currentDay.time.start.hour\r\n            let startMinute = currentDay.time.start.minute\r\n            const endHour = currentDay.time.end.hour\r\n            let endMinute = currentDay.time.end.minute\r\n\r\n            if (currentDay.time.start.minute < 10) {\r\n                startMinute = currentDay.time.start.minute + '0'\r\n            } else {\r\n                startMinute = currentDay.time.start.minute\r\n            }\r\n\r\n            if (currentDay.time.end.minute < 10) {\r\n                endMinute = currentDay.time.end.minute + '0'\r\n            } else {\r\n                endMinute = currentDay.time.end.minute\r\n            }\r\n            \r\n            maxOrderTime = (endHour + ':' + endMinute).toString()\r\n            \r\n            \r\n            if(currentHour > startHour) {\r\n                if(currentMinute > 45) {\r\n                    minOrderTime = (currentHour + 2 + ':00').toString()\r\n                } else if (currentMinute > 30) {\r\n                    minOrderTime = (currentHour + 1 + ':45').toString()\r\n                } else if (currentMinute > 15) {\r\n                    minOrderTime = (currentHour + 1 + ':30').toString()\r\n                } else {\r\n                    minOrderTime = (currentHour + 1 + ':15').toString()\r\n                }\r\n                \r\n            } else if (currentHour === startHour && currentMinute > startMinute) {\r\n                if(currentMinute > 45) {\r\n                    minOrderTime = (currentHour + 2 + ':00').toString()\r\n                } else if (currentMinute > 30) {\r\n                    minOrderTime = (currentHour + 1 + ':45').toString()\r\n                } else if (currentMinute > 15) {\r\n                    minOrderTime = (currentHour + 1 + ':30').toString()\r\n                } else {\r\n                    minOrderTime = (currentHour + 1 + ':15').toString()\r\n                }\r\n            } else minOrderTime = (startHour + 1 + ':' + startMinute).toString()\r\n\r\n            if(currentHour >= endHour || (currentHour === (endHour - 1) && (currentMinute > endMinute )) ) {\r\n                setIsToLateToOrder(true)\r\n            }\r\n        }\r\n            if(minOrderTime && maxOrderTime) {\r\n                setMinTime(new Date(`8/3/2017 ${minOrderTime}`))\r\n                setMaxTime(new Date(`8/3/2017 ${maxOrderTime}`))\r\n            }\r\n    }, [deliveryHours, today, dayId, currentHour, currentMinute])\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n        //   name: {\r\n        //     value: '',\r\n        //     isValid: false\r\n        // },\r\n            street: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            local: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            apartament: {\r\n                value: null,\r\n                isValid: true\r\n        },\r\n            zipCode: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            city: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            email: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            phoneNumber: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n        message: {\r\n            value: null,\r\n            isValid: true\r\n        },\r\n        },\r\n        false\r\n      );\r\n\r\n    const formSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        \r\n        let customer_items = cartItems.map(i => {\r\n            return {\r\n                quantity: i.quantity,\r\n                name: i.name,\r\n                price: i.price\r\n            }\r\n        })\r\n        let line_items\r\n        if (cartItems && deliveryPrice) {\r\n            line_items = cartItems.map(i => {\r\n                return {\r\n                    quantity: i.quantity,\r\n                    price_data: {\r\n                        currency: \"pln\",\r\n                        unit_amount: i.price * 100,\r\n                        product_data: {\r\n                            name: i.name,\r\n                            description: i.description\r\n                        }\r\n                    }  \r\n                }\r\n            })\r\n    \r\n            const delivery_price = {\r\n                quantity: 1,\r\n                price_data: {\r\n                    currency: \"pln\",\r\n                    unit_amount: deliveryPrice * 100,\r\n                    product_data: {\r\n                        name: 'opłata za dowóz'\r\n                    }\r\n                }  \r\n            }\r\n            \r\n            if (total >= 80 && bonusItem) {\r\n                line_items.push({\r\n                    quantity: 1,\r\n                    price_data: {\r\n                        currency: \"pln\",\r\n                        unit_amount: 0 * 100,\r\n                        product_data: {\r\n                            name: bonusItem.item + \" gratis\"\r\n                        }}})\r\n            } else if (total <= 60) {\r\n                line_items.push(delivery_price)\r\n            }\r\n        }\r\n        \r\n        let address = {\r\n            street: formState.inputs.street.value,\r\n            local: formState.inputs.local.value,\r\n            zipCode: formState.inputs.zipCode.value,\r\n            city: formState.inputs.city.value\r\n        }\r\n        if (!!formState.inputs.apartament.value) {\r\n            address = {\r\n                ...address,\r\n                apartament: formState.inputs.apartament.value\r\n            }\r\n        } else {\r\n            address = {\r\n                ...address,\r\n                apartament: false\r\n            }\r\n        }\r\n        if (!!formState.inputs.message.value) {\r\n            address = {\r\n                ...address,\r\n                message: formState.inputs.message.value\r\n            }\r\n        } else {\r\n            address = {\r\n                ...address,\r\n                message: \"brak\"\r\n            }\r\n        }\r\n        if (event.target.id === \"payment-online\" && !isToLateToOrder) {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/checkout/`,\r\n                    'POST',\r\n                    JSON.stringify({\r\n                        line_items,\r\n                        customer_email: formState.inputs.email.value,\r\n                        message: formState.inputs.message.value,\r\n                        deliveryHour: timepickerValue.toString(),\r\n                        phone: formState.inputs.phoneNumber.value,\r\n                        address\r\n                    }),\r\n                    {\r\n                      'Content-Type': 'application/json'\r\n                    }\r\n                );\r\n                const { sessionId } = responseData\r\n                await stripe.redirectToCheckout({\r\n                    sessionId\r\n                })\r\n            } catch (err) {}\r\n        } else if (event.target.id === \"payment-offline\" && !isToLateToOrder) {\r\n\r\n            let delivery_info\r\n            let totalAmount\r\n            const paymentMethod = event.target.name\r\n            if (total && deliveryPrice && total <= 60 ) {\r\n                delivery_info = deliveryPrice + \"zł\"\r\n                totalAmount = total + deliveryPrice\r\n            } else {\r\n                delivery_info = \"dostawa gratis\"\r\n                totalAmount = total\r\n            }\r\n            let bonusItemName = 'brak'\r\n            if(bonusItem && total > 80 ) {\r\n                bonusItemName = bonusItem.item\r\n            }\r\n            \r\n            try { \r\n                await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/mail/`,\r\n                    'POST',\r\n                    JSON.stringify({\r\n                        customer_email: formState.inputs.email.value,\r\n                        customer_phoneNumber: formState.inputs.phoneNumber.value,\r\n                        customer_address: address,\r\n                        customer_items,\r\n                        total: totalAmount,\r\n                        delivery_info,\r\n                        bonusItemName,\r\n                        timepickerValue,\r\n                        paymentMethod\r\n                    }),\r\n                    {\r\n                      'Content-Type': 'application/json'\r\n                    }\r\n                );\r\n                await history.push(\"/success\")\r\n                window.location.reload()\r\n              } catch (err) {}\r\n        } \r\n      };\r\n\r\n    const handleTimeValue = (e) => {\r\n        let hours\r\n        let minutes\r\n        if (e.target.value) {\r\n            hours = e.target.value.getHours()\r\n            minutes = e.target.value.getMinutes()\r\n            if (minutes < 10) {\r\n                minutes = '0' + e.target.value.getMinutes()\r\n            }\r\n            setTimepickerValue(hours + ':' + minutes)\r\n        } else {setTimepickerValue('nie określono')}\r\n      }\r\n\r\n    const handleOfflinePayment = (e) => {\r\n        e.preventDefault();\r\n        setPaymentOffline(prevPayment => !prevPayment)\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        <div className=\"order\">\r\n                <h1 onClick={() => console.log(cartItems, total, bonusItem)\r\n                }>Uzupełnij dane do zamówienia</h1>\r\n                <Card>\r\n                {!isToLateToOrder &&  \r\n                <form\r\n                >\r\n                    <div className=\"address-street\">\r\n                    <Input \r\n                    id=\"street\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Ulica\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę ulicy.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"local\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nr lokalu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Podaj poprawny nr lokalu.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"apartament\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nr mieszkania\"\r\n                    validators={null}\r\n                    initialValid={true}\r\n                    onInput={inputHandler}\r\n                    />\r\n                    </div>\r\n                    <div className=\"address-city\">\r\n                        <div className=\"address-city__zip\" style={{position: 'relative'}}>\r\n                            <div className=\"address-city__zip-input\">\r\n                            <Input \r\n                                id=\"zipCode\"\r\n                                element=\"input\"\r\n                                type=\"text\"\r\n                                label=\"Kod pocztowy\"\r\n                                validators={[VALIDATOR_REQUIRE()]}\r\n                                errorText={\"Podaj poprawny kod pocztowy.\"}\r\n                                onInput={inputHandler}\r\n                            />\r\n                            </div>\r\n                        </div>\r\n                    <div className=\"address-city__city\">\r\n                    <Input \r\n                    id=\"city\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Miasto\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Podaj poprawną nazwę miasta.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    </div>\r\n                    \r\n                    </div>\r\n                    <Input \r\n                    id=\"email\"\r\n                    element=\"input\"\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    validators={[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL]}\r\n                    errorText=\"Podaj poprawny email.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"phoneNumber\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Numer telefonu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Podaj nr telefonu.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"message\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"Komentarz do dostawcy\"\r\n                    validators={null}\r\n                    initialValid={true}\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <label style={{fontWeight: 'bold', marginBottom: '0.5rem', minHeight: '28px'}}>Wybierz oczekiwany czas dowozu:</label>\r\n                    <div className='timepicker'>\r\n                    <TimePickerComponent\r\n                    placeholder=\"wybierz godzinę\"\r\n                    format=\"HH:mm\"\r\n                    step={15}\r\n                    min={minTime}\r\n                    max={maxTime}\r\n                    onChange={handleTimeValue}\r\n                    ></TimePickerComponent>\r\n                    </div>\r\n                    <div>\r\n                    <Button\r\n                    disabled={!formState.isValid || isToLateToOrder}\r\n                    id=\"payment-offline\"\r\n                    onClick={handleOfflinePayment}\r\n                    isClicked={paymentOffline}\r\n                    >\r\n                    PŁATNOŚĆ PRZY ODBIORZE\r\n                    </Button>\r\n                    <Button\r\n                    disabled={!formState.isValid || isToLateToOrder || paymentOffline}\r\n                    id=\"payment-online\"\r\n                    onClick={formSubmitHandler}\r\n                    >\r\n                    PŁATNOŚĆ ONLINE\r\n                    </Button>\r\n                    </div>\r\n                    {paymentOffline && <div style={{margin: '1em'}}>\r\n                    <Button\r\n                    disabled={!formState.isValid || isToLateToOrder}\r\n                    id=\"payment-offline\"\r\n                    payment=\"karta\"\r\n                    onClick={formSubmitHandler}\r\n                    >\r\n                    PŁATNOŚĆ KARTĄ\r\n                    </Button>\r\n                    <Button\r\n                    disabled={!formState.isValid || isToLateToOrder}\r\n                    id=\"payment-offline\"\r\n                    payment=\"gotówka\"\r\n                    onClick={formSubmitHandler}\r\n                    >\r\n                    PŁATNOŚĆ GOTÓWKĄ\r\n                    </Button>\r\n                    </div>}\r\n                </form>}\r\n                {isToLateToOrder && <p style={{color: 'red'}}>Dziś już nie dowozimy, zapraszamy ponownie.</p>}\r\n                </Card>\r\n        </div>\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Order\r\n","export default __webpack_public_path__ + \"static/media/50.e4514fa3.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Store.css';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport ErrorModal from \"../UIElements/ErrorModal\"\r\n\r\nconst Success = () => {\r\n\r\n    const [deliveryTime, setDeliveryTime] = useState(false); \r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    useEffect(() => {\r\n        const fetchDeliveryTime = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/deliverytime/${process.env.REACT_APP_DELIVERY_TIME_ID}`\r\n              );\r\n              setDeliveryTime(responseData.deliveryTime.time);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchDeliveryTime();\r\n      }, [sendRequest])\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <div className=\"store\">\r\n            <h1 style={{marginTop: \"1.5em\"}}>ZAMÓWIENIE ZOSTAŁO PRZEKAZANE DO REALIZACJI</h1>\r\n            <br />\r\n            {deliveryTime && <h2>Oczekiwany czas dowozu: {deliveryTime} min</h2>}\r\n            <Link to='/'><p>powrót do sklepu</p></Link>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Success\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Store.css'\r\n\r\nconst Failed = () => {\r\n    return (\r\n        <div className=\"store\">\r\n            <h1>WYSTĄPIŁ NIEOCZEKIWANY BŁĄD, SPRÓBUJ ZAMÓWIĆ PONOWNIE PÓŹNIEJ</h1>\r\n            <br />\r\n            <Link to='/'><p>powrót do sklepu</p></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Failed\r\n","import React, { useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from '../FormElements/Button';\r\nimport { CartContext } from '../../context/cart-context';\r\nimport { isInCart } from '../../helper';\r\n\r\n\r\nconst SpecialProductCard = ({ id, name, price, image, description, specialItemCheckedId, changeClickedProductId }) => {\r\n\r\n    const product = { id, name, price, image, description };\r\n    const { addProduct, cartItems } = useContext(CartContext)\r\n    const history = useHistory()\r\n    // const [showReservation, setShowReservation] = useState(false);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div \r\n            className=\"item-card\"\r\n            >\r\n                <div className=\"item-card__image\">\r\n                <img src={`${process.env.REACT_APP_AWS_URL}/${image}`} alt={name}></img>\r\n                </div>\r\n                <div className=\"item-card__info\">\r\n                <p>\r\n                    <span style={{fontWeight: \"bold\"}}>{name}</span>\r\n                    <span style={{fontWeight: \"bold\"}}>{price} zł</span>\r\n                </p>\r\n                <Button \r\n                id={id}\r\n                onClick={changeClickedProductId}\r\n                isClicked={id === specialItemCheckedId}\r\n                >WYBIERZ</Button>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SpecialProductCard\r\n","import React, { useState, useEffect } from 'react';\r\nimport \"./SpecialReservation.css\"\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport SpecialProductCard from './SpecialProductCard';\r\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport { useDate } from '../hooks/date-hook';\r\nimport Input from '../FormElements/Input';\r\nimport { VALIDATOR_REQUIRE } from '../util/validators';\r\nimport { useForm } from '../hooks/form-hook';\r\n\r\nconst SpecialReservation = () => {\r\n\r\n    const [reservation, setReservation] = useState([]);\r\n    const [available, setAvailable] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n\r\n    const [isClickedProduct, setIsClickedProduct] = useState(false);\r\n    const [showReservation, setShowReservation] = useState(false);\r\n    const [specialItemCheckedId, setSpecialItemCheckedId] = useState(false);\r\n    const [timepickerValue, setTimepickerValue] = useState('nie określono');\r\n    const [minTime, setMinTime] = useState();\r\n    const [maxTime, setMaxTime] = useState();\r\n    const [items, setItems] = useState([]);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const { today, dayId, currentHour, currentMinute } = useDate();\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            hour: {\r\n              value: '',\r\n              isValid: false\r\n          },\r\n          guests: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n    );\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        const fetchItems = async () => {\r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/items/`\r\n                  );\r\n                \r\n                  const filteredItems = responseData.items.filter(item => item.special === true)\r\n                setItems(filteredItems)\r\n                } catch (err) {}\r\n            }\r\n            const fetchSpecialReservation = async () => {\r\n                try {\r\n                  const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/reservation`\r\n                  );\r\n                  setAvailable(responseData.reservations[0].available.value)\r\n                  setMessage(responseData.reservations[0].available.message)\r\n                  setReservation(responseData.reservations[0].days);\r\n            } catch (err) {}     \r\n        };\r\n        fetchSpecialReservation();\r\n            fetchItems()\r\n        }, [sendRequest] )\r\n\r\n    // useEffect(() => {\r\n    //         let minOrderTime\r\n    //         let maxOrderTime\r\n    //         if(deliveryHours && today && dayId && currentHour && currentMinute) {\r\n    //             const currentDay = deliveryHours.find(time => time._id === dayId)\r\n    //             const startHour = currentDay.time.start.hour\r\n    //             let startMinute = currentDay.time.start.minute\r\n    //             const endHour = currentDay.time.end.hour\r\n    //             let endMinute = currentDay.time.end.minute\r\n    \r\n    //             if (currentDay.time.start.minute < 10) {\r\n    //                 startMinute = currentDay.time.start.minute + '0'\r\n    //             } else {\r\n    //                 startMinute = currentDay.time.start.minute\r\n    //             }\r\n    \r\n    //             if (currentDay.time.end.minute < 10) {\r\n    //                 endMinute = currentDay.time.end.minute + '0'\r\n    //             } else {\r\n    //                 endMinute = currentDay.time.end.minute\r\n    //             }\r\n                \r\n    //             maxOrderTime = (endHour + ':' + endMinute).toString()\r\n                \r\n                \r\n    //             if(currentHour > startHour) {\r\n    //                 if(currentMinute > 45) {\r\n    //                     minOrderTime = (currentHour + 2 + ':00').toString()\r\n    //                 } else if (currentMinute > 30) {\r\n    //                     minOrderTime = (currentHour + 1 + ':45').toString()\r\n    //                 } else if (currentMinute > 15) {\r\n    //                     minOrderTime = (currentHour + 1 + ':30').toString()\r\n    //                 } else {\r\n    //                     minOrderTime = (currentHour + 1 + ':15').toString()\r\n    //                 }\r\n                    \r\n    //             } else if (currentHour === startHour && currentMinute > startMinute) {\r\n    //                 if(currentMinute > 45) {\r\n    //                     minOrderTime = (currentHour + 2 + ':00').toString()\r\n    //                 } else if (currentMinute > 30) {\r\n    //                     minOrderTime = (currentHour + 1 + ':45').toString()\r\n    //                 } else if (currentMinute > 15) {\r\n    //                     minOrderTime = (currentHour + 1 + ':30').toString()\r\n    //                 } else {\r\n    //                     minOrderTime = (currentHour + 1 + ':15').toString()\r\n    //                 }\r\n    //             } else minOrderTime = (startHour + 1 + ':' + startMinute).toString()\r\n    \r\n    //             if(currentHour >= endHour || (currentHour === (endHour - 1) && (currentMinute > endMinute )) ) {\r\n    //                 setIsToLateToOrder(true)\r\n    //             }\r\n    //         }\r\n    //             if(minOrderTime && maxOrderTime) {\r\n    //                 setMinTime(new Date(`8/3/2017 ${minOrderTime}`))\r\n    //                 setMaxTime(new Date(`8/3/2017 ${maxOrderTime}`))\r\n    //             }\r\n    //     }, [deliveryHours, today, dayId, currentHour, currentMinute])\r\n\r\n        const changeClickedProductId = (e) => {\r\n            e.preventDefault();\r\n            // console.log(e.target.);\r\n            // console.log(e.target.className);\r\n            // e.target.className -= \" button--active\"\r\n            console.log(e.target.id);\r\n            if (specialItemCheckedId === e.target.id) {\r\n                return setSpecialItemCheckedId(false)\r\n            } else return setSpecialItemCheckedId(e.target.id)\r\n            // setSpecialItemCheckedId(e.target.id)\r\n        }\r\n\r\n        const handleTimeValue = (e) => {\r\n            let hours\r\n            let minutes\r\n            if (e.target.value) {\r\n                hours = e.target.value.getHours()\r\n                minutes = e.target.value.getMinutes()\r\n                if (minutes < 10) {\r\n                    minutes = '0' + e.target.value.getMinutes()\r\n                }\r\n                setTimepickerValue(hours + ':' + minutes)\r\n            } else {setTimepickerValue('nie określono')}\r\n          }\r\n\r\n        const itemList = () => {\r\n            let item_list\r\n            let sortItems\r\n            if(items.length > 0) {\r\n                sortItems = items.sort((a, b) => a.name > b.name ? 1 : -1)\r\n                item_list = sortItems.map(i => {\r\n                return (<SpecialProductCard key={i.id} id={i.id} name={i.name} price={i.price} description={i.description} image={i.image} changeClickedProductId={changeClickedProductId} specialItemCheckedId={specialItemCheckedId} />)\r\n                })\r\n            } return item_list\r\n        }\r\n\r\n        const setDaysOptions = reservation.map(i => <option value={i._id}>{i.name}</option>)\r\n\r\n    return (\r\n        <div className=\"special\">\r\n            {items.length > 0 && \r\n            <div className=\"special-items\">\r\n            <h1\r\n            onClick={() => {console.log(new Date(), new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() + 10))}}\r\n            // onClick={() => {console.log(new Date().setDate(new Date().getDate() + 10))}}\r\n            >Wybierz produkt i zarezerwuj stolik</h1>\r\n            {itemList()}\r\n            </div>\r\n            }\r\n            {specialItemCheckedId && <div className=\"special-reservation\">\r\n            {/* <label style={{fontWeight: 'bold', marginBottom: '0.5rem', minHeight: '28px'}}>Wybierz godzinę:</label> */}\r\n            <Input \r\n                id=\"name\"\r\n                element=\"select\"\r\n                name=\"select\"\r\n                label=\"Wybierz godzinę:\"\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                errorText=\"Proszę wybrać godzinę.\"\r\n                onInput={inputHandler}\r\n                options={setDaysOptions}\r\n            />\r\n            <DatePicker \r\n            selected={startDate} \r\n            onChange={(date) => setStartDate(date)}\r\n            dateFormat='dd/MM/yyyy' \r\n            minDate={new Date()}\r\n            maxDate={new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() + 10)}\r\n            // maxDate={new Date().setDate(new Date().getDate() + 10)}\r\n            />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpecialReservation\r\n","import React, { Suspense } from 'react';\nimport AdminHeader from \"./Components/Admin/AdminHeader\";\nimport Admin from \"./Components/Admin/AdminPanel\";\n\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/Footer';\nimport Store from './Components/Body/Store';\nimport CartContextProvider from './context/cart-context';\nimport Cart from './Components/Body/Cart';\nimport Order from './Components/Body/Order';\n\nimport background from './images/50.jpg'\n\nimport { useAuth } from './Components/hooks/auth-hook';\nimport { AuthContext } from './context/auth-context';\nimport Success from './Components/Body/Success';\nimport Failed from './Components/Body/Failed';\nimport SpecialReservation from './Components/Body/SpecialReservation';\n\nfunction App() {\n\n  const { token, login, logout, userId, role } = useAuth();\n\n  const routes = (\n    <Switch>\n      <Route path=\"/\" exact>\n      <Header />\n      <Store />\n      </Route>\n      <Route path=\"/koszyk\">\n      <Header />\n      <Cart />\n      </Route>\n      <Route path=\"/special\">\n      <Header />\n      <SpecialReservation />\n      </Route>\n      <Route path=\"/zamowienie\">\n      <Header />\n      <Order />\n      </Route>\n      <Route path=\"/success\">\n      <Header />\n      <Success />\n      </Route>\n      <Route path=\"/failed\">\n      <Header />\n      <Failed />\n      </Route>\n      <Route path=\"/admin\">\n      <AdminHeader />\n        <Admin />\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n\n\n  return (\n    <Router>\n      <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        role: role,\n        login: login,\n        logout: logout\n      }}\n    >\n      <CartContextProvider>\n      <div className=\"App\" style={{backgroundImage: `url(${background})`, backgroundColor: \"black\", minHeight: \"100vh\", display: \"flex\", flexDirection: \"column\"}}>\n        {routes}\n      <Footer />\n      </div>\n      </CartContextProvider>\n      </AuthContext.Provider>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\n\nconst stripePromise = loadStripe(process.env.REACT_APP_PUBLISHABLE_KEY)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Elements stripe={stripePromise}>\n    <App />\n    </Elements>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
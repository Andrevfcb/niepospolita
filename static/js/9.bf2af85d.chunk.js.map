{"version":3,"sources":["Components/Body/Success.js"],"names":["Success","useState","deliveryTime","setDeliveryTime","useHttpClient","isLoading","error","sendRequest","clearError","useEffect","fetchDeliveryTime","a","process","responseData","time","Fragment","onClear","asOverlay","className","style","marginTop","to"],"mappings":"8MAwCeA,UAjCC,WAEZ,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsDC,cAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WAgBvC,OAdAC,qBAAU,WACN,IAAMC,EAAiB,uCAAG,4BAAAC,EAAA,+EAEOJ,EAAY,GAAD,OACjCK,iDADiC,6BACqBA,6BAHvC,OAEdC,EAFc,OAKpBV,EAAgBU,EAAaX,aAAaY,MALtB,uGAAH,qDAU3BJ,MACK,CAACH,IAGF,eAAC,IAAMQ,SAAP,WACA,cAAC,IAAD,CAAYT,MAAOA,EAAOU,QAASR,IAClCH,GAAa,cAAC,IAAD,CAAgBY,WAAS,IACvC,sBAAKC,UAAU,QAAf,UACI,oBAAIC,MAAO,CAACC,UAAW,SAAvB,iEACA,uBACClB,GAAgB,0DAA6BA,EAA7B,UACjB,cAAC,IAAD,CAAMmB,GAAG,IAAT,SAAa","file":"static/js/9.bf2af85d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Store.css';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport ErrorModal from \"../UIElements/ErrorModal\"\r\n\r\nconst Success = () => {\r\n\r\n    const [deliveryTime, setDeliveryTime] = useState(false); \r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    useEffect(() => {\r\n        const fetchDeliveryTime = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/deliverytime/${process.env.REACT_APP_DELIVERY_TIME_ID}`\r\n              );\r\n              setDeliveryTime(responseData.deliveryTime.time);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchDeliveryTime();\r\n      }, [sendRequest])\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <div className=\"store\">\r\n            <h1 style={{marginTop: \"1.5em\"}}>ZAMÓWIENIE ZOSTAŁO PRZEKAZANE DO REALIZACJI</h1>\r\n            <br />\r\n            {deliveryTime && <h2>Oczekiwany czas dowozu: {deliveryTime} min</h2>}\r\n            <Link to='/'><p>powrót do sklepu</p></Link>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Success\r\n"],"sourceRoot":""}
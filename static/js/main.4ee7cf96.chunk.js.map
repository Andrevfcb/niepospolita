{"version":3,"sources":["Components/hooks/auth-hook.js","Components/FormElements/Button.js","Components/util/validators.js","Components/FormElements/Input.js","Components/hooks/http-hook.js","Components/UIElements/LoadingSpinner.js","Components/UIElements/Backdrop.js","Components/UIElements/Modal.js","Components/UIElements/ErrorModal.js","Components/hooks/form-hook.js","context/auth-context.js","Components/Admin/AdminHeader.js","Components/Admin/AdminNav.js","Components/FormElements/ImageUpload.js","Components/Admin/AdminStore/AdminAddItem.js","Components/Admin/AdminStore/AdminBonusDelivery.js","Components/Admin/AdminStore/AdminBonusItems.js","Components/Admin/AdminStore/AdminBonus.js","Components/Admin/AdminStore/AdminCategory.js","Components/Admin/AdminStore/AdminDeleteItem.js","Components/Admin/AdminStore/AdminDeliveryPrice.js","Components/Admin/AdminStore/AdminDeliveryTime.js","Components/Admin/AdminStore/AdminTime.js","Components/Admin/AdminStore/AdminDelivery.js","Components/Admin/AdminStore/AdminUpdate.js","Components/Admin/AdminStore/AdminValue.js","Components/Admin/AdminPanel.js","Components/Header/Navigation.js","Components/Header/SideDrawer.js","images/logo.png","Components/Header/Header.js","Components/Footer/Footer.js","context/cart-reducer.js","context/cart-context.jsx","helper.js","Components/Body/ProductCard.js","Components/UIElements/Card.js","Components/hooks/date-hook.js","Components/Body/Store.js","Components/Body/Cart.js","Components/Body/Order.js","images/50.jpg","Components/Body/Success.js","Components/Body/Failed.js","App.js","index.js"],"names":["logoutTimer","Button","props","href","className","size","inverse","danger","children","to","exact","active","isClicked","type","onClick","disabled","id","name","payment","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","val","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","useEffect","changeHandler","event","target","touchHandler","element","min","max","placeholder","onChange","onBlur","options","rows","htmlFor","label","style","position","left","errorText","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","clearError","LoadingSpinner","asOverlay","Backdrop","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onClear","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","AuthContext","createContext","isLoggedIn","userId","token","role","login","logout","AdminHeader","auth","useContext","email","password","inputHandler","authSubmitHandler","process","JSON","stringify","alert","window","location","reload","AdminNav","changeSection","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","images","setImages","imagesValue","setImagesValue","setSelectedId","filePickerRef","fileReader","FileReader","allImages","onload","result","readAsDataURL","deleteImage","e","newImages","newImagesValue","splice","fileIsValid","imageArea","map","i","height","width","src","alt","cursor","ref","display","accept","pickedFile","onInputImgValue","files","console","log","center","click","AdminAddItem","categories","setCategories","description","price","category","image","fetchCategories","itemSubmitHandler","formData","FormData","append","Authorization","setOptions","AdminBonusDelivery","setValue","fetchValue","bonus_delivery_price","valueSubmitHandler","parseInt","AdminBonusItems","bonus_items_price","AdminBonus","borderBottom","borderTop","AdminCategory","catId","setCatId","catSubmitHandler","deleteCategorySubmitHandler","_id","AdminDeleteItem","items","setItems","itemId","setItemId","fetchItems","deleteItemSubmitHandler","AdminDeliveryPrice","delivery_price","actualDeliveryTime","setActualDeliveryTime","deliveryTime","fetchDeliveryTime","time","deliveryTimeSubmitHandler","AdminTime","times","setTimes","setTime","timeAvailability","setTimeAvailability","startHour","startMinute","endHour","endMinute","day","dayFormState","selectHandler","fetchTimes","fetchTime","available","timeSubmitHandler","start","hour","minute","end","marginTop","for","fontWeight","marginBottom","prevAvailibility","checked","margin","AdminDelivery","AdminDeliveryTime","AdminUpdateItem","item","setItem","itemAvailability","setItemAvailability","itemBonus","setItemBonus","itemFormState","fetchItem","bonus","setItemOptions","prevBonus","AdminValue","newValue","AdminPanel","section","setSection","AdminUpdate","Navigation","class","SideDrawer","Header","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Logo","Footer","sumItems","cartItems","itemCount","reduce","total","prod","quantity","cartReducer","find","payload","newCartItems","increaseIndex","findIndex","decreaseIndex","bonusItem","CartContext","initialState","CartContextProvider","contextValues","addProduct","product","removeProduct","increase","decrease","addBonusItem","Provider","isInCart","ProductCard","history","useHistory","Card","useDate","today","setToday","dayId","setDayId","currentHour","setCurrentHour","currentMinute","setCurrentMinute","date","Date","getDay","getHours","getMinutes","Store","allItems","setAllItems","minOrderValue","setMinOrderValue","deliveryHours","setDeliveryHours","deliveryAvailable","setDeliveryAvailable","scrollTo","getMinOrderValue","getDeliveryHours","currentDay","currentDayAvailibility","filterByCategory","filteredItems","innerHTML","categoryValue","toLowerCase","includes","categoryList","cat","color","showDeliveryHours","item_list","sort","b","itemList","Cart","valid","orderValid","setOrderValid","deliveryPrice","setDeliveryPrice","minBonusDeliveryPrice","setMinBonusDeliveryPrice","minBonusItemsPrice","setMinBonusItemsPrice","bonusItemCheckedId","setBonusItemCheckedId","bonusItems","setBonusItems","getDeliveryPrice","getBonusItems","getBonusItemsPrice","getBonusDeliveryPrice","orderValidation","changeBonusItem","showCartItems","checkProductQuantity","Geocode","setApiKey","fromAddress","then","results","geometry","lat","lng","toFixed","showBonusItems","marginLeft","fontSize","Order","timepickerValue","setTimepickerValue","minTime","setMinTime","maxTime","setMaxTime","isToLateToOrder","setIsToLateToOrder","paymentOffline","setPaymentOffline","stripe","useStripe","minOrderTime","maxOrderTime","toString","street","local","apartament","zipCode","city","phoneNumber","formSubmitHandler","customer_items","line_items","price_data","currency","unit_amount","product_data","address","customer_email","deliveryHour","phone","sessionId","redirectToCheckout","paymentMethod","delivery_info","totalAmount","bonusItemName","customer_phoneNumber","customer_address","minHeight","format","step","hours","minutes","prevPayment","Success","setDeliveryTime","Failed","App","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","setRole","uid","expirationDate","getTime","localStorage","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","routes","path","backgroundImage","background","flexDirection","stripePromise","loadStripe","render","StrictMode"],"mappings":"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","file":"static/js/main.4ee7cf96.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n  const [role, setRole] = useState(false);\n\n  const login = useCallback((uid, token, role, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    setRole(role);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        role: role,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    setRole(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, storedData.role, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, userId, role };\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'} ${props.active && 'button--active'} ${props.isClicked && \"button--active\"}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n      id={props.id || null}\n      name={props.payment || null}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: action.validators ? validate(action.val, action.validators) : true\n        // isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        min={props.min}\n        max={props.max}\n        // checked={inputState.value}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : props.element === 'select' ? (\n      <select\n        id={props.id}\n        name={props.name}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      >\n        <option value={''}>Wybierz</option>\n        {props.options}\n        </select>\n      ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p style={(props.id === \"zipCode_start\" || props.id === \"zipCode_end\") ? {position:'absolute', left: '20%'} : {}}>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        {props.header}\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  role: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React, { useContext } from 'react';\r\nimport Button from \"../FormElements/Button\"\r\nimport Input from '../FormElements/Input';\r\n\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport ErrorModal from \"../UIElements/ErrorModal\"\r\nimport { useForm } from \"../hooks/form-hook\"\r\nimport \"./AdminHeader.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nconst AdminHeader = () => {\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n        email: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        password: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    const authSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            const responseData = await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/user/login`,\r\n              'POST',\r\n              JSON.stringify({\r\n                email: formState.inputs.email.value,\r\n                password: formState.inputs.password.value\r\n              }),\r\n              {\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n            auth.login(responseData.userId, responseData.token, responseData.role);\r\n                alert(\"zalogowano\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n        <div className=\"admin-header\">\r\n            <Link to=\"/\">Wróć na stronę główną</Link>\r\n            {!auth.isLoggedIn && <form onSubmit={authSubmitHandler}>\r\n                <Input \r\n                    id=\"email\"\r\n                    element=\"input\"\r\n                    type=\"email\"\r\n                    label=\"login:\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Input \r\n                    id=\"password\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"hasło:\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Button type=\"submit\"\r\n                    disabled={!formState.isValid}>\r\n                    ZALOGUJ\r\n                </Button>\r\n            </form>}\r\n            {auth.isLoggedIn && <Button\r\n            onClick={() => auth.logout()}\r\n            >\r\n                    Wyloguj\r\n                </Button>}\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminHeader\r\n","import React from 'react'\r\n\r\nconst AdminNav = ({ changeSection }) => {\r\n    return (\r\n        \r\n            <ul>\r\n                <li id=\"0\" onClick={changeSection}>Dodaj produkt</li>\r\n                <li id={1} onClick={changeSection}>Zmień produkt</li>\r\n                <li id={2} onClick={changeSection}>Usuń produkt</li>\r\n                <li id={3} onClick={changeSection}>Kategorie</li>\r\n                <li id={4} onClick={changeSection}>Min. wartość zamówienia</li>\r\n                <li id={5} onClick={changeSection}>Dowóz</li>\r\n                <li id={6} onClick={changeSection}>Min. wartości gratis</li>\r\n            </ul>\r\n        \r\n    )\r\n}\r\n\r\nexport default AdminNav\r\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const [images, setImages] = useState([]);\n  const [imagesValue, setImagesValue] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    let allImages = images\n    fileReader.onload = () => {\n      if (props.id === \"images\") {\n        allImages.push(fileReader.result)\n        setImages(allImages);\n      }\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n  \n  const pickedHandler = event => {\n    let pickedFile;\n    let newImagesValue\n    let fileIsValid = isValid;\n    setImagesValue([\n      ...imagesValue,\n      event.target.files[0]\n    ]);\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      newImagesValue = [\n        ...imagesValue,\n        pickedFile\n      ]\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    let onInputImgValue\n    if (props.id === \"images\") {onInputImgValue = newImagesValue} else {onInputImgValue = pickedFile}\n    if (props.id === \"image\") console.log(\"image\" );\n    else if (!(props.id === \"image\")) console.log(\"images\" );\n    \n    props.onInput(props.id, onInputImgValue, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  const deleteImage = (e) => {\n    setSelectedId(e.target.id)\n    const newImages = images\n    const newImagesValue = imagesValue\n    if (newImages.length > 0) {\n    newImages.splice(e.target.id, 1);\n    newImagesValue.splice(e.target.id, 1);\n    setImages(newImages)\n    setImagesValue(newImagesValue)\n    setSelectedId(null)\n    }\n    let fileIsValid = isValid;\n    if (newImagesValue.length > 1) {\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, newImagesValue, fileIsValid);\n  };\n\n  const imageArea = images.map((i, id) => \n  (<div style={{height: \"100%\", width: \"100%\"}} key={id}>\n  <img src={i} alt=\"Preview\" id={id} onClick={deleteImage}\n  style={{cursor: 'pointer'}}/>\n  </div>\n  )\n  )\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {props.id === \"images\" && images.length > 0 && imageArea}\n          {!(props.id === \"images\") && previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {props.id === \"images\" && !images.length > 0 && <p>Proszę wybrać zdjęcie produktu.</p>}\n          {!(props.id === \"images\") && !previewUrl && <p>Proszę wybrać zdjęcie produktu.</p>}\n          \n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\n\r\nimport ImageUpload from \"../../FormElements/ImageUpload\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\n\r\nconst AdminAddItem = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n            description: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            price: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            category: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n          image: {\r\n            value: null,\r\n            isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category`\r\n              );\r\n      \r\n              setCategories(responseData.category);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchCategories();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const itemSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            const formData = new FormData();\r\n            formData.append('name', formState.inputs.name.value);\r\n            formData.append('description', formState.inputs.description.value);\r\n            formData.append('price', formState.inputs.price.value);\r\n            formData.append('category', formState.inputs.category.value);\r\n            formData.append('image', formState.inputs.image.value);\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/items/`,\r\n              'POST',\r\n              formData\r\n              ,\r\n              {\r\n                Authorization: 'Bearer ' + auth.token\r\n              }\r\n            );\r\n                alert(\"Utworzono produkt\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n    const setOptions = categories.map(i => <option value={i.id}>{i.name}</option>)\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Dodaj danie / produkt</h2>\r\n                <form\r\n                onSubmit={itemSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nazwa produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <ImageUpload\r\n                    center\r\n                    id=\"image\"\r\n                    onInput={inputHandler}\r\n                    errorText=\"Wprowadź zdjęcie produktu.\"\r\n                    />\r\n                    <Input \r\n                    id=\"description\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"Opis produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawny opis.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"price\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Cena\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną cenę.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    {categories.length > 0 && <Input \r\n                    id=\"category\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Kategoria\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną kategorię.\"\r\n                    onInput={inputHandler}\r\n                    options={setOptions}\r\n                    />}\r\n                    <Button type=\"submit\"\r\n                    disabled={!formState.isValid}>\r\n                    DODAJ\r\n                    </Button>\r\n                </form>\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminAddItem\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminBonusDelivery = () => {\r\n    const [value, setValue] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          value: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchValue = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/bonus-delivery/${process.env.REACT_APP_BONUS_DELIVERY_PRICE_ID}`\r\n              );\r\n              setValue(responseData.bonus_delivery_price);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchValue();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const valueSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/bonus-delivery/${process.env.REACT_APP_BONUS_DELIVERY_PRICE_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                value: parseInt(formState.inputs.value.value)\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień minimalną wartość darmowej opłaty za dowóz</h2>\r\n                {value && <form\r\n                onSubmit={valueSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"value\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Minimalna wartość darmowej opłaty za dowóz (zł)\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={value.value}\r\n                    /> \r\n                    <Button type=\"submit\"\r\n                    // disabled={!formState.isValid}\r\n                    >\r\n                    ZMIEŃ WARTOŚĆ\r\n                    </Button> \r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminBonusDelivery\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminBonusItems = () => {\r\n    const [value, setValue] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          value: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchValue = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/bonus-items/${process.env.REACT_APP_BONUS_ITEMS_PRICE_ID}`\r\n              );\r\n              setValue(responseData.bonus_items_price);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchValue();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const valueSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/bonus-items/${process.env.REACT_APP_BONUS_ITEMS_PRICE_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                value: parseInt(formState.inputs.value.value)\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień minimalną wartość produktów gratis</h2>\r\n                {value && <form\r\n                onSubmit={valueSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"value\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Minimalna wartość produktów gratis (zł)\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={value.value}\r\n                    /> \r\n                    <Button type=\"submit\"\r\n                    >\r\n                    ZMIEŃ WARTOŚĆ\r\n                    </Button> \r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminBonusItems\r\n","import React from 'react'\r\nimport AdminBonusDelivery from './AdminBonusDelivery'\r\nimport AdminBonusItems from './AdminBonusItems'\r\n\r\nconst AdminBonus = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ borderBottom: \"1px solid black\", borderTop: \"1px solid black\" }}>\r\n            <AdminBonusDelivery /> \r\n            </div>\r\n            <div style={{ borderBottom: \"1px solid black\", borderTop: \"1px solid black\" }}>\r\n            <AdminBonusItems />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminBonus\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\n\r\nconst AdminCategory = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [catId, setCatId] = useState(false);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n      const catSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/category/`,\r\n              'POST',\r\n              JSON.stringify({\r\n                name: formState.inputs.name.value\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Utworzono kategorię\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category`\r\n              );\r\n      \r\n              setCategories(responseData.category);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchCategories();\r\n      }, [sendRequest])\r\n\r\n    const deleteCategorySubmitHandler = async event => {\r\n        event.preventDefault();\r\n            try {\r\n              await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category/${catId}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                  Authorization: 'Bearer ' + auth.token\r\n                }\r\n              );\r\n            alert(\"Usunięto Kategorię\")\r\n            \r\n            window.location.reload()\r\n            } catch (err) {}\r\n        }\r\n\r\n    const choseDeletedCatId = (e) => {\r\n        console.log(e.target.value);\r\n        \r\n        setCatId(e.target.value)\r\n              }\r\n\r\n    const setOptions = categories.map(i => <option value={i._id}>{i.name}</option>)\r\n\r\n    return (\r\n            <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Dodaj kategorię</h2>\r\n                <form\r\n                onSubmit={catSubmitHandler}\r\n                >\r\n                <Input \r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nazwa kategorii\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Button type=\"submit\"\r\n                    disabled={!formState.isValid}>\r\n                    DODAJ\r\n                    </Button>\r\n                    </form>\r\n                <h2>Usuń kategorię</h2>\r\n                {categories.length > 0 ? <select name=\"items\" id=\"items\" onChange={choseDeletedCatId} >\r\n                    <option value={''}>wybierz kategorię</option>\r\n                    {setOptions}\r\n                </select> : <p>Brak Kategorii</p>}\r\n                <Button \r\n                onClick={deleteCategorySubmitHandler}\r\n                disabled={!catId}\r\n                >USUŃ</Button>\r\n            </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminCategory\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Button from \"../../FormElements/Button\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\n\r\nconst AdminDeleteItem = () => {\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [itemId, setItemId] = useState(false);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n    \r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/items`\r\n              );\r\n      \r\n              setItems(responseData.items);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchItems();\r\n      }, [sendRequest])\r\n\r\n    const deleteItemSubmitHandler = async event => {\r\n        event.preventDefault();\r\n            try {\r\n              await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/items/${itemId}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                  Authorization: 'Bearer ' + auth.token\r\n                }\r\n              );\r\n            alert(\"Usunięto produkt\")\r\n            \r\n            window.location.reload()\r\n            } catch (err) {}\r\n        }\r\n\r\n    const choseDeletedItemId = (e) => {\r\n            setItemId(e.target.value)\r\n              }\r\n\r\n\r\n    const setOptions = items.map(i => <option value={i.id}>{i.name}</option>)\r\n\r\n    return (\r\n            <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Usuń</h2>\r\n                {items.length > 0 ? <select name=\"items\" id=\"items\" onChange={choseDeletedItemId} >\r\n                    <option value={''}>wybierz produkt</option>\r\n                    {setOptions}\r\n                </select> : <p>Brak produktów</p>}\r\n                <Button \r\n                onClick={deleteItemSubmitHandler}\r\n                disabled={!itemId}\r\n                >USUŃ</Button>\r\n            </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminDeleteItem\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminDeliveryPrice = () => {\r\n    const [value, setValue] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          value: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchValue = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/delivery/${process.env.REACT_APP_DELIVERY_PRICE_ID}`\r\n              );\r\n              setValue(responseData.delivery_price);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchValue();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const valueSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/delivery/${process.env.REACT_APP_DELIVERY_PRICE_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                value: parseInt(formState.inputs.value.value)\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień wartość opłaty za dowóz</h2>\r\n                {value && <form\r\n                onSubmit={valueSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"value\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Minimalna wartość opłaty za dowóz (zł)\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={value.value}\r\n                    /> \r\n                    <Button type=\"submit\"\r\n                    >\r\n                    ZMIEŃ WARTOŚĆ\r\n                    </Button> \r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminDeliveryPrice\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminDeliveryPrice = () => {\r\n    const [actualDeliveryTime, setActualDeliveryTime] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          deliveryTime: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchDeliveryTime = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/deliverytime/${process.env.REACT_APP_DELIVERY_TIME_ID}`\r\n              );\r\n              setActualDeliveryTime(responseData.deliveryTime.time);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchDeliveryTime();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const deliveryTimeSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/deliverytime/${process.env.REACT_APP_DELIVERY_TIME_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                time: parseInt(formState.inputs.deliveryTime.value)\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień czas dowozu</h2>\r\n                {actualDeliveryTime && <form\r\n                onSubmit={deliveryTimeSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"deliveryTime\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Czas dowozu (min)\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={actualDeliveryTime}\r\n                    /> \r\n                    <Button type=\"submit\"\r\n                    >\r\n                    ZMIEŃ CZAS\r\n                    </Button> \r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminDeliveryPrice\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminTime = () => {\r\n    const [times, setTimes] = useState([]);\r\n    const [time, setTime] = useState(false);\r\n    const [timeAvailability, setTimeAvailability] = useState();\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          startHour: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        startMinute: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        endHour: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        endMinute: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n      const [dayFormState, selectHandler] = useForm(\r\n        {\r\n            day: {\r\n              value: '',\r\n              isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchTimes = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/time`\r\n              );\r\n              setTimes(responseData.time);             \r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchTimes();\r\n      }, [sendRequest])\r\n\r\n      useEffect(() => {\r\n        const fetchTime = async () => {\r\n            if(dayFormState.inputs.day.value) {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/time/${dayFormState.inputs.day.value}`\r\n              );\r\n              setTime(responseData.time);\r\n              setTimeAvailability(responseData.time.available);\r\n        } catch (err) {}      \r\n        } else return\r\n    }\r\n    fetchTime();\r\n  }, [sendRequest, dayFormState.inputs.day.value])\r\n    \r\n\r\n    const timeSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/time/${dayFormState.inputs.day.value}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                startHour: parseInt(formState.inputs.startHour.value),\r\n                startMinute: parseInt(formState.inputs.startMinute.value),\r\n                endHour: parseInt(formState.inputs.endHour.value),\r\n                endMinute: parseInt(formState.inputs.endMinute.value),\r\n                available: timeAvailability\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano Godziny\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n      const changeAvailability = () => {\r\n        setTimeAvailability(prevAvailibility => !prevAvailibility)\r\n    }\r\n\r\n    const setOptions = times.map(i => <option value={i._id}>{i.day}</option>)\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień godziny dowozu</h2>\r\n                {times.length > 0 && <Input \r\n                    id=\"day\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Wybierz dzień\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wybierz poprawny dzień.\"\r\n                    onInput={selectHandler}\r\n                    options={setOptions}\r\n                    />}\r\n                \r\n                {time && <form\r\n                onSubmit={timeSubmitHandler}\r\n                >\r\n                    <div className=\"start\">\r\n                    <span>Start: </span>\r\n                    <Input \r\n                    id=\"startHour\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={23}\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.start.hour}\r\n                    />\r\n                    :\r\n                    <Input \r\n                    id=\"startMinute\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={59}\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.start.minute}\r\n                    />\r\n                    </div>\r\n                    <div className=\"end\">\r\n                        <span>Koniec: </span>\r\n                    <Input \r\n                    id=\"endHour\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={23}\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.end.hour}\r\n                    />\r\n                    :\r\n                    <Input \r\n                    id=\"endMinute\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={59}\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.end.minute}\r\n                    />\r\n                    <div className='availability' style={{marginTop: \"1em\"}}>\r\n                    <label for='availability' style={{fontWeight: 'bold', marginBottom: '0.5rem'}}>Dowóz aktywny?</label>\r\n                    <input id='availability' type='checkbox' onChange={changeAvailability} checked={timeAvailability} style={{display: 'block', margin: 'auto'}} />\r\n                    </div>\r\n                    \r\n                    </div>\r\n                    <Button type=\"submit\"\r\n                    >\r\n                    ZMIEŃ GODZINY\r\n                    </Button>\r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminTime\r\n\r\n","import React from 'react'\r\nimport AdminDeliveryPrice from './AdminDeliveryPrice'\r\nimport AdminDeliveryTime from './AdminDeliveryTime'\r\nimport AdminTime from './AdminTime'\r\n\r\nconst AdminDelivery = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ borderBottom: \"1px solid black\", borderTop: \"1px solid black\" }}>\r\n            <AdminTime /> \r\n            </div>\r\n            <div style={{ borderBottom: \"1px solid black\", borderTop: \"1px solid black\" }}>\r\n            <AdminDeliveryTime />\r\n            </div>\r\n            <div style={{ borderBottom: \"1px solid black\", borderTop: \"1px solid black\" }}>\r\n            <AdminDeliveryPrice />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminDelivery\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\n  import { AuthContext } from '../../../context/auth-context';\r\n\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\n\r\n\r\nconst AdminUpdateItem = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [items, setItems] = useState([]);\r\n    const [item, setItem] = useState(false);\r\n    const [itemAvailability, setItemAvailability] = useState();\r\n    const [itemBonus, setItemBonus] = useState();\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n            description: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            price: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            category: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            available: {\r\n                value: '',\r\n                isValid: false\r\n    },\r\n        },\r\n        false\r\n      );\r\n\r\n    const [itemFormState, selectHandler] = useForm(\r\n        {\r\n            name: {\r\n              value: '',\r\n              isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category`\r\n              );\r\n      \r\n              setCategories(responseData.category);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    const fetchItems = async () => {\r\n        try {\r\n          const responseData = await sendRequest(\r\n            `${process.env.REACT_APP_BACKEND_URL}/api/items`\r\n          );\r\n  \r\n          setItems(responseData.items);\r\n    } catch (err) {}\r\n      \r\n};\r\n    fetchCategories();\r\n    fetchItems();\r\n      }, [sendRequest])\r\n\r\n      useEffect(() => {\r\n        \r\n            const fetchItem = async () => {\r\n                if(itemFormState.inputs.name.value) {\r\n                try {\r\n                  const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/items/${itemFormState.inputs.name.value}`\r\n                  );\r\n          \r\n                  setItem(responseData.item);\r\n                  setItemAvailability(responseData.item.available)\r\n                  setItemBonus(responseData.item.bonus)\r\n            } catch (err) {}      \r\n            } else return\r\n        }\r\n    fetchItem();\r\n      }, [sendRequest, itemFormState.inputs.name.value])\r\n    \r\n\r\n    const itemSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/items/${item.id}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                name: formState.inputs.name.value,\r\n                description: formState.inputs.description.value,\r\n                price: formState.inputs.price.value,\r\n                category: formState.inputs.category.value,\r\n                available: itemAvailability,\r\n                bonus: itemBonus\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            //   formData\r\n            //   ,\r\n            //   {\r\n            //     Authorization: 'Bearer '\r\n            //     //  + auth.token\r\n            //     // 'Content-Type': 'application/json'\r\n            //   }\r\n            );\r\n                alert(\"Zaktualizowano produkt\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n    const setOptions = categories.map(i => <option value={i.id}>{i.name}</option>)\r\n    const setItemOptions = items.map(i => <option value={i.id}>{i.name}</option>)\r\n\r\n    const changeAvailability = () => {\r\n        setItemAvailability(prevAvailibility => !prevAvailibility)\r\n    }\r\n\r\n    const changeBonus = () => {\r\n      setItemBonus(prevBonus => !prevBonus)\r\n  }\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zaktualizuj danie / produkt</h2>\r\n                <Input \r\n                    id=\"name\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Wybierz Produkt\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wybierz poprawny produkt.\"\r\n                    onInput={selectHandler}\r\n                    options={setItemOptions}\r\n                    />\r\n                {item && <form\r\n                onSubmit={itemSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nazwa produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={item.name}\r\n                    />\r\n                    <Input \r\n                    id=\"description\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"Opis produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawny opis.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={item.description}\r\n                    />\r\n                    <Input \r\n                    id=\"price\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Cena\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną cenę.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={item.price}\r\n                    />\r\n                    {categories.length > 0 && <Input \r\n                    id=\"category\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Kategoria\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną kategorię.\"\r\n                    onInput={inputHandler}\r\n                    options={setOptions}\r\n                    initialValue={item.category}\r\n                    />}\r\n                    <label for='availability' style={{fontWeight: 'bold', marginBottom: '0.5rem'}}>Produkt dostępny?</label>\r\n                    <input id='availability' type='checkbox' onChange={changeAvailability} checked={itemAvailability} style={{display: 'block', margin: 'auto'}} />\r\n                    <label for='bonus' style={{fontWeight: 'bold', marginBottom: '0.5rem'}}>Produkt gratis?</label>\r\n                    <input id='bonus' type='checkbox' onChange={changeBonus} checked={itemBonus} style={{display: 'block', margin: 'auto'}} />\r\n                    <Button type=\"submit\"\r\n                    >\r\n                    ZMIEŃ\r\n                    </Button>\r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminUpdateItem\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminValue = () => {\r\n    const [value, setValue] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          value: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchValue = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`\r\n              );\r\n              setValue(responseData.value);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchValue();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const valueSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                newValue: parseInt(formState.inputs.value.value)\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień minimalną wartość zamówienia</h2>\r\n                {value && <form\r\n                onSubmit={valueSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"value\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Minimalna wartość zamówienia (zł)\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={value.value}\r\n                    />\r\n                    <Button type=\"submit\"\r\n                    >\r\n                    ZMIEŃ WARTOŚĆ\r\n                    </Button>\r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminValue\r\n","import React, {useState} from 'react';\r\nimport \"./Admin.css\"\r\nimport AdminNav from './AdminNav';\r\nimport AdminAddItem from './AdminStore/AdminAddItem';\r\nimport AdminBonus from './AdminStore/AdminBonus';\r\nimport AdminCategory from './AdminStore/AdminCategory';\r\nimport AdminDeleteItem from './AdminStore/AdminDeleteItem';\r\nimport AdminDelivery from './AdminStore/AdminDelivery';\r\nimport AdminUpdateItem from './AdminStore/AdminUpdate';\r\nimport AdminValue from './AdminStore/AdminValue';\r\n\r\nconst AdminPanel = () => {\r\n\r\n    const [section, setSection] = useState(\"0\");\r\n\r\n    const changeSection = (e) => {\r\n        console.log(e.target.id);\r\n        \r\n        setSection(e.target.id);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"admin\">\r\n                <div className=\"admin-navigation\">\r\n                    <AdminNav changeSection={changeSection} />\r\n                </div>\r\n                <div className=\"admin-content\">\r\n                {section === \"0\" && <AdminAddItem />}\r\n                {section === \"1\" && <AdminUpdateItem />}\r\n                {section === \"2\" && <AdminDeleteItem />}\r\n                {section === \"3\" && <AdminCategory />}\r\n                {section === \"4\" && <AdminValue />}\r\n                {section === \"5\" && <AdminDelivery />}\r\n                {section === \"6\" && <AdminBonus />}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminPanel\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n\r\n    return (\r\n        \r\n    <ul className='nav'>\r\n        <li className=\"main-navigation\">\r\n            <NavLink to='/'exact>\r\n            Zamów\r\n            </NavLink>\r\n        </li>\r\n        <li className=\"main-navigation\">\r\n            <NavLink to='/koszyk'exact>\r\n            <span class=\"fas fa-shopping-cart\"></span>\r\n            </NavLink>\r\n        </li>\r\n    </ul>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","export default __webpack_public_path__ + \"static/media/logo.f284211f.png\";","import React, {useState} from 'react';\r\nimport './Header.css';\r\nimport Navigation from './Navigation';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport ErrorModal from \"../UIElements/ErrorModal\"\r\nimport SideDrawer from './SideDrawer';\r\nimport Backdrop from '../UIElements/Backdrop';\r\n\r\nimport Logo from '../../images/logo.png'\r\n\r\n\r\nconst Header = () => {\r\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n    const { error, clearError } = useHttpClient();\r\n\r\n      const openDrawerHandler = () => {\r\n        setDrawerIsOpen(true);\r\n      };\r\n    \r\n      const closeDrawerHandler = () => {\r\n        setDrawerIsOpen(false);\r\n      };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n            <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n              <nav className=\"main-navigation__drawer-nav\">\r\n          <Navigation />\r\n              </nav>\r\n\r\n            </SideDrawer>\r\n        <div className='header'>\r\n        <a href= \"https://niepospolita-lublin.com\" className=\"logo-link\" exact>\r\n            <div className='logo title'>\r\n              <img src={Logo} alt=\"logo\" className=\"logo\"></img>\r\n              <span>Niepospolita Restauracja</span>\r\n            </div>\r\n                </a>\r\n              <button\r\n                className=\"main-navigation__menu-btn\"\r\n                onClick={openDrawerHandler}\r\n                >\r\n                <span />\r\n                <span />\r\n                <span />\r\n              </button>\r\n            <div className='navigation'><Navigation/></div>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport \"./Footer.css\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nimport Logo from '../../images/logo.png'\r\n\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <a href= \"https://niepospolita-lublin.com\" className=\"logo-link\" exact>\r\n            <div className=\"footer-logo logo title\">\r\n              <img src={Logo} alt=\"logo\" className=\"logo\"></img>\r\n              <span>Powrót na stronę główną</span>\r\n            </div>\r\n            </a>\r\n            <div className=\"footer-menu\">\r\n                <h3>MENU</h3>\r\n                <ul className='nav'>\r\n                    <li className=\"main-navigation\">\r\n                    <NavLink to='/'exact>\r\n                    Zamów\r\n                    </NavLink>\r\n                    </li>\r\n                    <li className=\"main-navigation\">\r\n                    <NavLink to='/koszyk'exact>\r\n                    Koszyk\r\n                    </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export const sumItems = cartItems => {\r\n    return {\r\n        itemCount: cartItems.reduce((total, prod) => total + prod.quantity , 0),\r\n        total: cartItems.reduce((total, prod) => total + (prod.price * prod.quantity), 0)\r\n    }\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_ITEM':\r\n            if(!state.cartItems.find(item => item.id === action.payload.id)) {\r\n                state.cartItems.push({\r\n                    ...action.payload,\r\n                    quantity: 1\r\n                })\r\n            }\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems],\r\n                ...sumItems(state.cartItems)\r\n            }   \r\n        case 'REMOVE_ITEM':\r\n            const newCartItems = state.cartItems.filter(item => item.id !== action.payload.id);\r\n            return {\r\n                ...state,\r\n                cartItems: [...newCartItems],\r\n                ...sumItems(newCartItems)\r\n            }\r\n        case 'INCREASE':\r\n            const increaseIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\r\n            state.cartItems[increaseIndex].quantity++;\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems],\r\n                ...sumItems(state.cartItems)\r\n            }\r\n        case 'DECREASE':\r\n            const decreaseIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\r\n            state.cartItems[decreaseIndex].quantity--;\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems],\r\n                ...sumItems(state.cartItems),\r\n            }\r\n        case 'ADD_BONUS_ITEM':\r\n            const bonusItem = {\r\n                id: action.payload._id,\r\n                item: action.payload.name,\r\n                quantity: 1,\r\n                price: 0\r\n            }\r\n        return {\r\n                ...state,\r\n                cartItems: [...state.cartItems],\r\n                ...sumItems(state.cartItems),\r\n                bonusItem\r\n            }   \r\n        default:\r\n                return state;\r\n    }\r\n}\r\nexport default cartReducer;","import React, { createContext, useReducer } from 'react';\r\nimport cartReducer from './cart-reducer';\r\n\r\nexport const CartContext = createContext();\r\n\r\nconst initialState = { cartItems: [], itemCount: 0, total: 0, bonusItem: false };\r\n\r\nconst CartContextProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(cartReducer, initialState);\r\n    const addProduct = (product) => dispatch({ type: 'ADD_ITEM', payload: product });\r\n    const removeProduct = (product) => dispatch({ type: 'REMOVE_ITEM', payload: product });\r\n    const increase = (product) => dispatch({ type: 'INCREASE', payload: product });\r\n    const decrease = (product) => dispatch({ type: 'DECREASE', payload: product });\r\n    const addBonusItem = (product) => dispatch({ type: 'ADD_BONUS_ITEM', payload: product });\r\n\r\n    const contextValues = {\r\n        ...state,\r\n        addProduct,\r\n        removeProduct,\r\n        increase,\r\n        decrease,\r\n        addBonusItem\r\n    }\r\n    return (\r\n        <CartContext.Provider value={ contextValues }>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\nexport default CartContextProvider;","export const isInCart = (product, cartItems) => {\r\n    return cartItems.find(item => item.id === product.id)\r\n}","import React, { useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from '../FormElements/Button';\r\nimport { CartContext } from '../../context/cart-context';\r\nimport { isInCart } from '../../helper';\r\n\r\n\r\nconst ProductCard = ({id, name, price, image, description}) => {\r\n\r\n    const product = { id, name, price, image, description };\r\n    const { addProduct, cartItems } = useContext(CartContext)\r\n    const history = useHistory()\r\n\r\n    const goToCartSection = () => {\r\n          history.push(\"/koszyk\");\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div \r\n            className=\"item-card\"\r\n            >\r\n                <div className=\"item-card__image\">\r\n                <img src={`${process.env.REACT_APP_AWS_URL}/${image}`} alt={name}></img>\r\n                </div>\r\n                <div className=\"item-card__info\">\r\n                <p>\r\n                    <span style={{fontWeight: \"bold\"}}>{name}</span>\r\n                    <span style={{fontWeight: \"bold\"}}>{price} zł</span>\r\n                </p>\r\n                {\r\n                    !isInCart(product, cartItems) && <Button onClick={() => {\r\n                        addProduct(product)\r\n                    }}>Dodaj do koszyka</Button>\r\n                }\r\n                {\r\n                    isInCart(product, cartItems) && <Button active={true} onClick={() => goToCartSection()}>Przejdź do koszyka</Button>\r\n                }\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductCard\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useDate = () => {\r\n\r\n    const [today, setToday] = useState(false);\r\n    const [dayId, setDayId] = useState(false);\r\n    const [currentHour, setCurrentHour] = useState(false);\r\n    const [currentMinute, setCurrentMinute] = useState(false);\r\n\r\n    useEffect(() => {\r\n    const date = new Date().getDay()\r\n    const hour = new Date().getHours()\r\n    const minute = new Date().getMinutes()\r\n    setCurrentHour(hour)\r\n    setCurrentMinute(minute)\r\n        switch (date) {\r\n            case 0: \r\n                setToday('Niedziela');\r\n                setDayId(\"616866d188b1a5c67bdb3547\")\r\n                break;\r\n            case 1: \r\n                setToday('Poniedziałek');\r\n                setDayId(\"6168665588b1a5c67bdb3539\")\r\n                break;\r\n            case 2: \r\n                setToday('Wtorek');\r\n                setDayId(\"6168666588b1a5c67bdb353b\")\r\n                break;\r\n            case 3: \r\n                setToday('Środa');\r\n                setDayId(\"6168667c88b1a5c67bdb353d\")\r\n                break;\r\n            case 4: \r\n                setToday('Czwartek');\r\n                setDayId(\"6168669588b1a5c67bdb3540\")\r\n                break;\r\n            case 5: \r\n                setToday('Piątek');\r\n                setDayId(\"616866bd88b1a5c67bdb3543\")\r\n                break;\r\n            case 6: \r\n                setToday('Sobota');\r\n                setDayId(\"616866c888b1a5c67bdb3545\")\r\n                break;\r\n            default:\r\n                setToday('Niedziela');\r\n                setDayId(\"616866d188b1a5c67bdb3547\")\r\n                break;\r\n        }\r\n    }, [])\r\n\r\n  return { today, dayId, currentHour, currentMinute };\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\nimport \"./Store.css\";\r\nimport ProductCard from './ProductCard';\r\nimport Card from '../UIElements/Card'\r\n\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useDate } from '../hooks/date-hook';\r\n\r\n\r\nconst Store = () => {\r\n\r\n    const [items, setItems] = useState();\r\n    const [allItems, setAllItems] = useState();\r\n    const [categories, setCategories] = useState([]);\r\n    const [minOrderValue, setMinOrderValue] = useState();\r\n    const [deliveryHours, setDeliveryHours] = useState(false);\r\n    const [deliveryAvailable, setDeliveryAvailable] = useState(true);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const { today, dayId } = useDate();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        const fetchItems = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/items/`\r\n                  );\r\n                \r\n                setItems(responseData.items)\r\n                setAllItems(responseData.items)\r\n                } catch (err) {}\r\n            }\r\n            const fetchCategories = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/category/`\r\n                  );\r\n                \r\n                setCategories(responseData.category)\r\n                } catch (err) {}\r\n            } \r\n            const getMinOrderValue = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`\r\n                  );\r\n                \r\n                setMinOrderValue(responseData.value)\r\n                } catch (err) {}\r\n            } \r\n            const getDeliveryHours = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/time/`\r\n                  );\r\n                \r\n                  setDeliveryHours(responseData.time)\r\n                  const currentDay = responseData.time.find(time => time._id === dayId)\r\n                  const currentDayAvailibility = currentDay.available\r\n                  setDeliveryAvailable(currentDayAvailibility)\r\n                } catch (err) {}\r\n            } \r\n            fetchItems()\r\n            fetchCategories()\r\n            getMinOrderValue()\r\n            getDeliveryHours()\r\n    }, [sendRequest, dayId])\r\n\r\n    const itemList = () => {\r\n        let item_list\r\n        let sortItems\r\n        let availableItems\r\n        if(items) {\r\n            availableItems = items.filter(item => item.available === true)\r\n            sortItems = availableItems.sort((a, b) => a.name > b.name ? 1 : -1)\r\n            item_list = sortItems.map(i => {\r\n            return (<ProductCard key={i.id} id={i.id} name={i.name} price={i.price} description={i.description} image={i.image} category={i.category} available={i.available} />)\r\n    })\r\n    } return item_list\r\n    }\r\n\r\n    const filterByCategory = (e) => {\r\n        let filteredItems\r\n        if (e.target.innerHTML === \"wszystko\") {\r\n            filteredItems = allItems\r\n        } else {\r\n            const categoryValue = e.target.innerHTML.toLowerCase()\r\n            filteredItems = allItems.filter(i => \r\n                i.category.toLowerCase().includes(categoryValue))\r\n        }\r\n        setItems(filteredItems)\r\n    }\r\n\r\n    const showDeliveryHours = () => {\r\n        let message\r\n        let currentDay\r\n        if (deliveryHours && today && dayId) {\r\n            currentDay = deliveryHours.find(time => time._id === dayId)\r\n            const startHour = currentDay.time.start.hour\r\n            const startMinute = currentDay.time.start.minute\r\n            const endHour = currentDay.time.end.hour\r\n            const endMinute = currentDay.time.end.minute\r\n            message = `${startHour < 10 ? '0' + startHour : startHour}:${startMinute < 10 ? '0' + startMinute : startMinute} - ${endHour < 10 ? '0' + endHour : endHour}:${endMinute < 10 ? '0' + endMinute : endMinute}`\r\n            }\r\n        return message;\r\n    }\r\n\r\n    const categoryList = categories.map(cat => <li key={cat.id} onClick={filterByCategory}>{cat.name}</li>)\r\n\r\n    return (\r\n        <div className=\"store\"\r\n        >\r\n            <div className=\"store-info\">\r\n                <h1\r\n                onClick={()=>console.log(deliveryAvailable)\r\n                }\r\n                >Zamów online!</h1>\r\n                <p>Minimalna kwota zamówienia: <b>{minOrderValue && minOrderValue.value} zł</b></p>\r\n\r\n                <p>\r\n                    {today && today} - \r\n                    {!deliveryAvailable && <b style={{color: 'red'}}>W dzisiejszym dniu nie dowozimy!</b>}\r\n                    {deliveryAvailable && <span> W dzisiejszym dniu dowozimy w godzinach <b>{deliveryHours && today && dayId && showDeliveryHours()}</b></span>}\r\n                </p>\r\n            </div>\r\n            <Card>\r\n            <div className=\"categories\">\r\n                <h2>Wybierz kategorię</h2>\r\n                <ul style={{color: \"white\"}}>\r\n                    <li onClick={filterByCategory}>wszystko</li>\r\n                {categories.length > 0 && categoryList}\r\n                </ul>\r\n            </div>\r\n            </Card>\r\n            <div className=\"store-items\">\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                {items && itemList()}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Store\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport \"./Cart.css\"\r\nimport Button from '../FormElements/Button'\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useDate } from '../hooks/date-hook';\r\nimport ErrorModal from \"../UIElements/ErrorModal\";\r\nimport { CartContext } from '../../context/cart-context';\r\nimport Card from '../UIElements/Card';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst Cart = () => {\r\n\r\n    const [orderValid, setOrderValid] = useState({valid: false, message: ''})\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [minOrderValue, setMinOrderValue] = useState(false);\r\n    const [deliveryHours, setDeliveryHours] = useState(false);\r\n    const [deliveryPrice, setDeliveryPrice] = useState(false);\r\n    const [minBonusDeliveryPrice, setMinBonusDeliveryPrice] = useState(false);\r\n    const [minBonusItemsPrice, setMinBonusItemsPrice] = useState(false);\r\n    const [bonusItemCheckedId, setBonusItemCheckedId] = useState(false);\r\n    const [bonusItems, setBonusItems] = useState([]);\r\n    const { cartItems, removeProduct, increase, decrease, total, addBonusItem, bonusItem } = useContext(CartContext);\r\n    const { today, dayId, currentHour, currentMinute } = useDate();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n            const getMinOrderValue = async () => {\r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`\r\n                  );\r\n                \r\n                setMinOrderValue(responseData.value)\r\n                } catch (err) {}\r\n            }\r\n            const getDeliveryHours = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/time/`\r\n                  );\r\n                \r\n                  setDeliveryHours(responseData.time)\r\n                } catch (err) {}\r\n            } \r\n            const getDeliveryPrice = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/delivery/${process.env.REACT_APP_DELIVERY_PRICE_ID}`\r\n                      );\r\n                      setDeliveryPrice(responseData.delivery_price.value);\r\n                } catch (err) {}\r\n            }\r\n            const getBonusItems = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/bonus/`\r\n                      );\r\n                      setBonusItems(responseData.bonusItems);\r\n                } catch (err) {}\r\n            }\r\n            const getBonusItemsPrice = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/bonus-items/${process.env.REACT_APP_BONUS_ITEMS_PRICE_ID}`\r\n                      );\r\n                      setMinBonusItemsPrice(responseData.bonus_items_price.value);\r\n                } catch (err) {}\r\n            }\r\n            const getBonusDeliveryPrice = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/bonus-delivery/${process.env.REACT_APP_BONUS_DELIVERY_PRICE_ID}`\r\n                      );\r\n                      setMinBonusDeliveryPrice(responseData.bonus_delivery_price.value);\r\n                } catch (err) {}\r\n            }\r\n            getMinOrderValue()\r\n            getDeliveryHours()\r\n            getDeliveryPrice()\r\n            getBonusItems()\r\n            getBonusItemsPrice()\r\n            getBonusDeliveryPrice()\r\n    }, [sendRequest])\r\n\r\n    useEffect(() => {\r\n        const orderValidation = {valid: false, message: ''}\r\n        if(cartItems && deliveryHours && today && dayId && currentHour && currentMinute) {\r\n            const currentDay = deliveryHours.find(time => time._id === dayId)\r\n            // const startHour = currentDay.time.start.hour\r\n            // const startMinute = currentDay.time.start.minute\r\n            const endHour = currentDay.time.end.hour\r\n            const endMinute = currentDay.time.end.minute\r\n            \r\n                if (!currentDay.available) {\r\n                    orderValidation.valid = false\r\n                    orderValidation.message = 'W dzisiejszym dniu nie dowozimy'\r\n                } else if (total < minOrderValue.value) {\r\n                    orderValidation.valid = false\r\n                    orderValidation.message = `Minimalna kwota zamówienia to ${minOrderValue.value} zł`\r\n                } \r\n                // else if (startHour > currentHour || endHour < currentHour || (startHour === currentHour && startMinute >= currentMinute) || (endHour === currentHour && endMinute <= currentMinute)) {\r\n                // orderValidation.valid = false\r\n                // orderValidation.message = `W dzisiejszym dniu dania można zamawiać od ${startHour < 10 ? '0' + startHour : startHour }:${startMinute < 10 ? '0' + startMinute : startMinute} do ${endHour < 10 ? '0' + endHour : endHour }:${endMinute < 10 ? '0' + endMinute : endMinute}`\r\n                // }\r\n                else if (endHour < currentHour || (endHour === currentHour && endMinute <= currentMinute)) {\r\n                    orderValidation.valid = false\r\n                    orderValidation.message = `W dzisiejszym dniu już nie dowozimy. Zapraszamy ponownie.`\r\n                    }\r\n                else {\r\n                    orderValidation.valid = true\r\n                    orderValidation.message = ''\r\n            }\r\n        }\r\n        return (\r\n            setOrderValid(orderValidation)\r\n            )\r\n    }, [cartItems, deliveryHours, today, dayId, currentHour, currentMinute, total, minOrderValue])\r\n\r\n    const getCoordinates = () => {\r\n        Geocode.setApiKey('AIzaSyCC2-7o0QiPK0-IoueeS0VgFOgUbWNE_Gw')\r\n        Geocode.fromAddress(\"Eiffel Tower\").then(\r\n        (response) => {\r\n          const { lat, lng } = response.results[0].geometry.location;\r\n          console.log(lat, lng);\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n    }\r\n\r\n    const checkProductQuantity = (quantity, product) => {\r\n        if(quantity <= 0) removeProduct(product)\r\n    }\r\n\r\n    const changeBonusItem = (e) => {\r\n        setBonusItemCheckedId(e.target.id)\r\n    }\r\n\r\n    const showCartItems = cartItems.map(item => {\r\n        const product = { id: item.id, name: item.name, price: item.price, image: item.image, description: item.description };\r\n        const price = item.price * item.quantity\r\n        return (\r\n        <li className=\"item-card\" key={item.id}>\r\n            <img src={`${process.env.REACT_APP_AWS_URL}/${item.image}`} alt={item.name}></img>\r\n            <span className=\"item-name\">{item.name}</span>\r\n            <span class=\"fas fa-minus item-quantity__handler\" onClick={() => {\r\n                decrease(product)\r\n                checkProductQuantity(item.quantity, product)\r\n                }}></span>\r\n            <span class=\"item-quantity\" onClick={() => {getCoordinates()}}>{item.quantity}</span>\r\n            <span class=\"fas fa-plus item-quantity__handler\" onClick={() => {increase(product)}}></span>\r\n            <span class=\"item-price\">{price.toFixed(2)} zł</span>\r\n            <span class=\"fas fa-times item-remove\" onClick={() => {removeProduct(product)}}></span>\r\n        </li>\r\n            )\r\n    })\r\n\r\n    const showBonusItems = bonusItems.map(item => {\r\n        return <li className=\"item-card bonus-item\" key={item._id}>\r\n            <img src={`${process.env.REACT_APP_BACKEND_URL}/${item.image}`} alt={item.image}></img>\r\n            <div>\r\n                <span>{item.name}</span>\r\n                <input id={item._id} type='checkbox' \r\n                onChange={changeBonusItem}\r\n                onClick={() => addBonusItem(item)}\r\n                checked={item._id === (bonusItemCheckedId || (bonusItem && bonusItem.id))} \r\n                style={{display: 'block', margin: 'auto', marginTop: '1em'}} />\r\n            </div>\r\n            \r\n        </li>\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        <div className=\"cart\">\r\n                <h1 onClick={() => console.log(bonusItem)}\r\n                >Twój koszyk</h1>\r\n                {cartItems.length > 0 &&<div className=\"cart-info\">\r\n                    <p>Koszt dowozu: <b>{deliveryPrice && deliveryPrice} zł</b>, w przypadku dowozu poza Lublin koszt obliczany wg odległości.</p>\r\n                    {minBonusDeliveryPrice && <p>Zamówienie powyżej {minBonusDeliveryPrice} zł <b style={{color: \"lightgreen\"}}>dostawa gratis!</b></p>}\r\n                    {bonusItems.length > 0 && minBonusItemsPrice && <p >Zamówienie powyżej {minBonusItemsPrice} zł <b style={{color: \"lightgreen\"}}>produkt gratis!</b></p>}\r\n                </div>}\r\n                {cartItems.length > 0 && <Card>\r\n            <div className=\"cart-products\">\r\n            <li className=\"item-card titles\">\r\n                    <span className='item-name'>Produkt</span>\r\n                    <span style={{width: '20%'}}>Ilość</span>\r\n                    <span style={{width: '20%'}}>Cena</span>\r\n                    <span style={{width: '10%', marginLeft: '5px'}}></span>\r\n            </li>\r\n                {showCartItems}\r\n            <li className=\"item-card summary \">\r\n                    <span className='item-name'></span>\r\n                    <span className='total'>SUMA:  <b style={{marginLeft: \"5px\", color: \"white\"}}>{total.toFixed(2)} zł</b> \r\n                    {total.toFixed(2) <= minBonusDeliveryPrice ? <b> + ({deliveryPrice} zł dostawa)</b> : <span style={{fontSize: \"0.7em\", color: \"lightgreen\"}}>(powyżej {minBonusDeliveryPrice} zł dostawa gratis)</span>} </span>\r\n            </li>\r\n            <li className=\"item-card__alert\">\r\n                    <span>{!orderValid.valid && minOrderValue && <p>{orderValid.message}</p>}</span>\r\n            </li>\r\n            {total.toFixed(2) > minBonusItemsPrice && <div>\r\n                <h3>Wybierz produkt gratis</h3>\r\n                <div className=\"bonus\">\r\n                {showBonusItems}\r\n                </div>\r\n            </div>}\r\n            </div>\r\n            \r\n            </Card>}\r\n            {!cartItems.length > 0 && <h3 style={{color: \"white\"}}>Brak produktów w koszyku</h3>}\r\n            {cartItems.length > 0 && <Link to=\"/zamowienie\"><Button disabled={!orderValid.valid}>Przejdź do zamówienia</Button></Link>}\r\n            {!cartItems.length > 0 && <Link to=\"/\"><Button>Przejdź do sklepu</Button></Link>}\r\n        </div>\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport \"./Order.css\"\r\nimport Button from '../FormElements/Button'\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport ErrorModal from \"../UIElements/ErrorModal\";\r\nimport { CartContext } from '../../context/cart-context';\r\nimport Card from '../UIElements/Card';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useStripe } from '@stripe/react-stripe-js'\r\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'\r\nimport { useDate } from '../hooks/date-hook';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE,\r\n    VALIDATOR_EMAIL\r\n  } from '../util/validators';\r\n  import Input from '../FormElements/Input';\r\n\r\nimport { useForm } from \"../hooks/form-hook\"\r\n\r\nconst Order = () => {\r\n    \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    \r\n    const [deliveryPrice, setDeliveryPrice] = useState(false);\r\n    const [timepickerValue, setTimepickerValue] = useState('nie określono');\r\n    const [minTime, setMinTime] = useState();\r\n    const [maxTime, setMaxTime] = useState();\r\n    const [isToLateToOrder, setIsToLateToOrder] = useState(false);\r\n    const [paymentOffline, setPaymentOffline] = useState(false);\r\n\r\n    const [deliveryHours, setDeliveryHours] = useState(false);\r\n    const stripe = useStripe();\r\n    let history = useHistory();\r\n    \r\n    const { today, dayId, currentHour, currentMinute } = useDate();\r\n    const { cartItems, total, bonusItem } = useContext(CartContext);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n            const getDeliveryPrice = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/delivery/${process.env.REACT_APP_DELIVERY_PRICE_ID}`\r\n                      );\r\n                      setDeliveryPrice(responseData.delivery_price.value);\r\n                } catch (err) {}\r\n            }\r\n            const getDeliveryHours = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/time/`\r\n                  );\r\n                \r\n                  setDeliveryHours(responseData.time)\r\n                } catch (err) {}\r\n            } \r\n            getDeliveryPrice()\r\n            getDeliveryHours()\r\n    }, [sendRequest])\r\n\r\n    useEffect(() => {\r\n        let minOrderTime\r\n        let maxOrderTime\r\n        if(deliveryHours && today && dayId && currentHour && currentMinute) {\r\n            const currentDay = deliveryHours.find(time => time._id === dayId)\r\n            const startHour = currentDay.time.start.hour\r\n            let startMinute = currentDay.time.start.minute\r\n            const endHour = currentDay.time.end.hour\r\n            let endMinute = currentDay.time.end.minute\r\n\r\n            if (currentDay.time.start.minute < 10) {\r\n                startMinute = currentDay.time.start.minute + '0'\r\n            } else {\r\n                startMinute = currentDay.time.start.minute\r\n            }\r\n\r\n            if (currentDay.time.end.minute < 10) {\r\n                endMinute = currentDay.time.end.minute + '0'\r\n            } else {\r\n                endMinute = currentDay.time.end.minute\r\n            }\r\n            \r\n            maxOrderTime = (endHour + ':' + endMinute).toString()\r\n            \r\n            \r\n            if(currentHour > startHour) {\r\n                if(currentMinute > 45) {\r\n                    minOrderTime = (currentHour + 2 + ':00').toString()\r\n                } else if (currentMinute > 30) {\r\n                    minOrderTime = (currentHour + 1 + ':45').toString()\r\n                } else if (currentMinute > 15) {\r\n                    minOrderTime = (currentHour + 1 + ':30').toString()\r\n                } else {\r\n                    minOrderTime = (currentHour + 1 + ':15').toString()\r\n                }\r\n                \r\n            } else if (currentHour === startHour && currentMinute > startMinute) {\r\n                if(currentMinute > 45) {\r\n                    minOrderTime = (currentHour + 2 + ':00').toString()\r\n                } else if (currentMinute > 30) {\r\n                    minOrderTime = (currentHour + 1 + ':45').toString()\r\n                } else if (currentMinute > 15) {\r\n                    minOrderTime = (currentHour + 1 + ':30').toString()\r\n                } else {\r\n                    minOrderTime = (currentHour + 1 + ':15').toString()\r\n                }\r\n            } else minOrderTime = (startHour + 1 + ':' + startMinute).toString()\r\n\r\n            if(currentHour >= endHour || (currentHour === (endHour - 1) && (currentMinute > endMinute )) ) {\r\n                setIsToLateToOrder(true)\r\n            }\r\n        }\r\n            if(minOrderTime && maxOrderTime) {\r\n                setMinTime(new Date(`8/3/2017 ${minOrderTime}`))\r\n                setMaxTime(new Date(`8/3/2017 ${maxOrderTime}`))\r\n            }\r\n    }, [deliveryHours, today, dayId, currentHour, currentMinute])\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n        //   name: {\r\n        //     value: '',\r\n        //     isValid: false\r\n        // },\r\n            street: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            local: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            apartament: {\r\n                value: null,\r\n                isValid: true\r\n        },\r\n            zipCode: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            city: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            email: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            phoneNumber: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n        message: {\r\n            value: null,\r\n            isValid: true\r\n        },\r\n        },\r\n        false\r\n      );\r\n\r\n    const formSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        \r\n        let customer_items = cartItems.map(i => {\r\n            return {\r\n                quantity: i.quantity,\r\n                name: i.name,\r\n                price: i.price\r\n            }\r\n        })\r\n        let line_items\r\n        if (cartItems && deliveryPrice) {\r\n            line_items = cartItems.map(i => {\r\n                return {\r\n                    quantity: i.quantity,\r\n                    price_data: {\r\n                        currency: \"pln\",\r\n                        unit_amount: i.price * 100,\r\n                        product_data: {\r\n                            name: i.name,\r\n                            description: i.description\r\n                        }\r\n                    }  \r\n                }\r\n            })\r\n    \r\n            const delivery_price = {\r\n                quantity: 1,\r\n                price_data: {\r\n                    currency: \"pln\",\r\n                    unit_amount: deliveryPrice * 100,\r\n                    product_data: {\r\n                        name: 'opłata za dowóz'\r\n                    }\r\n                }  \r\n            }\r\n            \r\n            if (total >= 80 && bonusItem) {\r\n                line_items.push({\r\n                    quantity: 1,\r\n                    price_data: {\r\n                        currency: \"pln\",\r\n                        unit_amount: 0 * 100,\r\n                        product_data: {\r\n                            name: bonusItem.item + \" gratis\"\r\n                        }}})\r\n            } else if (total <= 60) {\r\n                line_items.push(delivery_price)\r\n            }\r\n        }\r\n        \r\n        let address = {\r\n            street: formState.inputs.street.value,\r\n            local: formState.inputs.local.value,\r\n            zipCode: formState.inputs.zipCode.value,\r\n            city: formState.inputs.city.value\r\n        }\r\n        if (!!formState.inputs.apartament.value) {\r\n            address = {\r\n                ...address,\r\n                apartament: formState.inputs.apartament.value\r\n            }\r\n        } else {\r\n            address = {\r\n                ...address,\r\n                apartament: false\r\n            }\r\n        }\r\n        if (!!formState.inputs.message.value) {\r\n            address = {\r\n                ...address,\r\n                message: formState.inputs.message.value\r\n            }\r\n        } else {\r\n            address = {\r\n                ...address,\r\n                message: \"brak\"\r\n            }\r\n        }\r\n        if (event.target.id === \"payment-online\" && !isToLateToOrder) {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/checkout/`,\r\n                    'POST',\r\n                    JSON.stringify({\r\n                        line_items,\r\n                        customer_email: formState.inputs.email.value,\r\n                        message: formState.inputs.message.value,\r\n                        deliveryHour: timepickerValue.toString(),\r\n                        phone: formState.inputs.phoneNumber.value,\r\n                        address\r\n                    }),\r\n                    {\r\n                      'Content-Type': 'application/json'\r\n                    }\r\n                );\r\n                const { sessionId } = responseData\r\n                await stripe.redirectToCheckout({\r\n                    sessionId\r\n                })\r\n            } catch (err) {}\r\n        } else if (event.target.id === \"payment-offline\" && !isToLateToOrder) {\r\n\r\n            let delivery_info\r\n            let totalAmount\r\n            const paymentMethod = event.target.name\r\n            if (total && deliveryPrice && total <= 60 ) {\r\n                delivery_info = deliveryPrice + \"zł\"\r\n                totalAmount = total + deliveryPrice\r\n            } else {\r\n                delivery_info = \"dostawa gratis\"\r\n                totalAmount = total\r\n            }\r\n            let bonusItemName = 'brak'\r\n            if(bonusItem && total > 80 ) {\r\n                bonusItemName = bonusItem.item\r\n            }\r\n            \r\n            try { \r\n                await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/mail/`,\r\n                    'POST',\r\n                    JSON.stringify({\r\n                        customer_email: formState.inputs.email.value,\r\n                        customer_phoneNumber: formState.inputs.phoneNumber.value,\r\n                        customer_address: address,\r\n                        customer_items,\r\n                        total: totalAmount,\r\n                        delivery_info,\r\n                        bonusItemName,\r\n                        timepickerValue,\r\n                        paymentMethod\r\n                    }),\r\n                    {\r\n                      'Content-Type': 'application/json'\r\n                    }\r\n                );\r\n                await history.push(\"/success\")\r\n                window.location.reload()\r\n              } catch (err) {}\r\n        } \r\n      };\r\n\r\n    const handleTimeValue = (e) => {\r\n        let hours\r\n        let minutes\r\n        if (e.target.value) {\r\n            hours = e.target.value.getHours()\r\n            minutes = e.target.value.getMinutes()\r\n            if (minutes < 10) {\r\n                minutes = '0' + e.target.value.getMinutes()\r\n            }\r\n            setTimepickerValue(hours + ':' + minutes)\r\n        } else {setTimepickerValue('nie określono')}\r\n      }\r\n\r\n    const handleOfflinePayment = (e) => {\r\n        e.preventDefault();\r\n        setPaymentOffline(prevPayment => !prevPayment)\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        <div className=\"order\">\r\n                <h1 onClick={() => console.log(cartItems, total, bonusItem)\r\n                }>Uzupełnij dane do zamówienia</h1>\r\n                <Card>\r\n                {!isToLateToOrder &&  \r\n                <form\r\n                >\r\n                    <div className=\"address-street\">\r\n                    <Input \r\n                    id=\"street\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Ulica\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę ulicy.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"local\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nr lokalu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Podaj poprawny nr lokalu.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"apartament\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nr mieszkania\"\r\n                    validators={null}\r\n                    initialValid={true}\r\n                    onInput={inputHandler}\r\n                    />\r\n                    </div>\r\n                    <div className=\"address-city\">\r\n                        <div className=\"address-city__zip\" style={{position: 'relative'}}>\r\n                            <div className=\"address-city__zip-input\">\r\n                            <Input \r\n                                id=\"zipCode\"\r\n                                element=\"input\"\r\n                                type=\"text\"\r\n                                label=\"Kod pocztowy\"\r\n                                validators={[VALIDATOR_REQUIRE()]}\r\n                                errorText={\"Podaj poprawny kod pocztowy.\"}\r\n                                onInput={inputHandler}\r\n                            />\r\n                            </div>\r\n                        </div>\r\n                    <div className=\"address-city__city\">\r\n                    <Input \r\n                    id=\"city\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Miasto\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Podaj poprawną nazwę miasta.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    </div>\r\n                    \r\n                    </div>\r\n                    <Input \r\n                    id=\"email\"\r\n                    element=\"input\"\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    validators={[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL]}\r\n                    errorText=\"Podaj poprawny email.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"phoneNumber\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Numer telefonu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Podaj nr telefonu.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"message\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"Komentarz do dostawcy\"\r\n                    validators={null}\r\n                    initialValid={true}\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <label style={{fontWeight: 'bold', marginBottom: '0.5rem', minHeight: '28px'}}>Wybierz oczekiwany czas dowozu:</label>\r\n                    <div className='timepicker'>\r\n                    <TimePickerComponent\r\n                    placeholder=\"wybierz godzinę\"\r\n                    format=\"HH:mm\"\r\n                    step={15}\r\n                    min={minTime}\r\n                    max={maxTime}\r\n                    onChange={handleTimeValue}\r\n                    ></TimePickerComponent>\r\n                    </div>\r\n                    <div>\r\n                    <Button\r\n                    disabled={!formState.isValid || isToLateToOrder}\r\n                    id=\"payment-offline\"\r\n                    onClick={handleOfflinePayment}\r\n                    isClicked={paymentOffline}\r\n                    >\r\n                    PŁATNOŚĆ PRZY ODBIORZE\r\n                    </Button>\r\n                    <Button\r\n                    disabled={!formState.isValid || isToLateToOrder || paymentOffline}\r\n                    id=\"payment-online\"\r\n                    onClick={formSubmitHandler}\r\n                    >\r\n                    PŁATNOŚĆ ONLINE\r\n                    </Button>\r\n                    </div>\r\n                    {paymentOffline && <div style={{margin: '1em'}}>\r\n                    <Button\r\n                    disabled={!formState.isValid || isToLateToOrder}\r\n                    id=\"payment-offline\"\r\n                    payment=\"karta\"\r\n                    onClick={formSubmitHandler}\r\n                    >\r\n                    PŁATNOŚĆ KARTĄ\r\n                    </Button>\r\n                    <Button\r\n                    disabled={!formState.isValid || isToLateToOrder}\r\n                    id=\"payment-offline\"\r\n                    payment=\"gotówka\"\r\n                    onClick={formSubmitHandler}\r\n                    >\r\n                    PŁATNOŚĆ GOTÓWKĄ\r\n                    </Button>\r\n                    </div>}\r\n                </form>}\r\n                {isToLateToOrder && <p style={{color: 'red'}}>Dziś już nie dowozimy, zapraszamy ponownie.</p>}\r\n                </Card>\r\n        </div>\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Order\r\n","export default __webpack_public_path__ + \"static/media/50.e4514fa3.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Store.css';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport ErrorModal from \"../UIElements/ErrorModal\"\r\n\r\nconst Success = () => {\r\n\r\n    const [deliveryTime, setDeliveryTime] = useState(false); \r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    useEffect(() => {\r\n        const fetchDeliveryTime = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/deliverytime/${process.env.REACT_APP_DELIVERY_TIME_ID}`\r\n              );\r\n              setDeliveryTime(responseData.deliveryTime.time);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchDeliveryTime();\r\n      }, [sendRequest])\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <div className=\"store\">\r\n            <h1 style={{marginTop: \"1.5em\"}}>ZAMÓWIENIE ZOSTAŁO PRZEKAZANE DO REALIZACJI</h1>\r\n            <br />\r\n            {deliveryTime && <h2>Oczekiwany czas dowozu: {deliveryTime} min</h2>}\r\n            <Link to='/'><p>powrót do sklepu</p></Link>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Success\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Store.css'\r\n\r\nconst Failed = () => {\r\n    return (\r\n        <div className=\"store\">\r\n            <h1>WYSTĄPIŁ NIEOCZEKIWANY BŁĄD, SPRÓBUJ ZAMÓWIĆ PONOWNIE PÓŹNIEJ</h1>\r\n            <br />\r\n            <Link to='/'><p>powrót do sklepu</p></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Failed\r\n","import React, { Suspense } from 'react';\nimport AdminHeader from \"./Components/Admin/AdminHeader\";\nimport Admin from \"./Components/Admin/AdminPanel\";\n\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/Footer';\nimport Store from './Components/Body/Store';\nimport CartContextProvider from './context/cart-context';\nimport Cart from './Components/Body/Cart';\nimport Order from './Components/Body/Order';\n\nimport background from './images/50.jpg'\n\nimport { useAuth } from './Components/hooks/auth-hook';\nimport { AuthContext } from './context/auth-context';\nimport Success from './Components/Body/Success';\nimport Failed from './Components/Body/Failed';\n\nfunction App() {\n\n  const { token, login, logout, userId, role } = useAuth();\n\n  const routes = (\n    <Switch>\n      <Route path=\"/\" exact>\n      <Header />\n      <Store />\n      </Route>\n      <Route path=\"/koszyk\">\n      <Header />\n      <Cart />\n      </Route>\n      <Route path=\"/zamowienie\">\n      <Header />\n      <Order />\n      </Route>\n      <Route path=\"/success\">\n      <Header />\n      <Success />\n      </Route>\n      <Route path=\"/failed\">\n      <Header />\n      <Failed />\n      </Route>\n      <Route path=\"/admin\">\n      <AdminHeader />\n        <Admin />\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n\n\n  return (\n    <Router>\n      <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        role: role,\n        login: login,\n        logout: logout\n      }}\n    >\n      <CartContextProvider>\n      <div className=\"App\" style={{backgroundImage: `url(${background})`, minHeight: \"100vh\", display: \"flex\", flexDirection: \"column\"}}>\n        {routes}\n      <Footer />\n      </div>\n      </CartContextProvider>\n      </AuthContext.Provider>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\n\nconst stripePromise = loadStripe(process.env.REACT_APP_PUBLISHABLE_KEY)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Elements stripe={stripePromise}>\n    <App />\n    </Elements>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
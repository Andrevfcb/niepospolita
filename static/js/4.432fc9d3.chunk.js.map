{"version":3,"sources":["Components/Admin/AdminNav.js","Components/FormElements/ImageUpload.js","Components/Admin/AdminStore/AdminAddItem.js","Components/Admin/AdminStore/AdminBonusDelivery.js","Components/Admin/AdminStore/AdminBonusItems.js","Components/Admin/AdminStore/AdminBonus.js","Components/Admin/AdminStore/AdminCategory.js","Components/Admin/AdminStore/AdminDeleteItem.js","Components/Admin/AdminStore/AdminDeliveryPrice.js","Components/Admin/AdminStore/AdminDeliveryTime.js","Components/Admin/AdminStore/AdminTime.js","Components/Admin/AdminStore/AdminDelivery.js","Components/Admin/AdminStore/AdminSpecialReservation.js","Components/Admin/AdminStore/AdminUpdate.js","Components/Admin/AdminStore/AdminValue.js","Components/Admin/AdminPanel.js"],"names":["AdminNav","changeSection","id","onClick","ImageUpload","props","useState","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","images","setImages","imagesValue","setImagesValue","setSelectedId","filePickerRef","useRef","useEffect","console","log","actualPrevievUrl","process","fileReader","FileReader","allImages","onload","push","result","readAsDataURL","deleteImage","e","target","newImages","newImagesValue","length","splice","fileIsValid","onInput","imageArea","map","i","style","height","width","src","alt","cursor","className","ref","display","type","accept","onChange","event","pickedFile","onInputImgValue","files","center","Button","current","click","AdminAddItem","categories","setCategories","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useForm","name","value","description","price","category","image","formState","inputHandler","fetchCategories","a","responseData","itemSubmitHandler","preventDefault","formData","FormData","append","inputs","Authorization","token","alert","window","location","reload","setOptions","Fragment","ErrorModal","onClear","LoadingSpinner","asOverlay","onSubmit","Input","element","label","validators","VALIDATOR_REQUIRE","errorText","options","disabled","AdminBonusDelivery","setValue","fetchValue","bonus_delivery_price","valueSubmitHandler","JSON","stringify","parseInt","initialValue","AdminBonusItems","bonus_items_price","AdminBonus","borderBottom","borderTop","AdminCategory","catId","setCatId","catSubmitHandler","deleteCategorySubmitHandler","_id","AdminDeleteItem","items","setItems","itemId","setItemId","fetchItems","deleteItemSubmitHandler","AdminDeliveryPrice","delivery_price","actualDeliveryTime","setActualDeliveryTime","deliveryTime","fetchDeliveryTime","time","deliveryTimeSubmitHandler","AdminTime","times","setTimes","setTime","timeAvailability","setTimeAvailability","startHour","startMinute","endHour","endMinute","day","dayFormState","selectHandler","fetchTimes","fetchTime","available","timeSubmitHandler","min","max","start","hour","minute","end","marginTop","for","fontWeight","marginBottom","prevAvailibility","checked","margin","AdminDelivery","AdminDeliveryTime","AdminSpecialReservation","reservation","setReservation","reservationDay","setReservationDay","availableHours","setAvailableHours","setAvailable","message","setMessage","showModal","setShowModal","selectDayHandler","fetchSpecialReservation","reservations","days","fetchDay","hours","sortHours","sort","b","deleteInput","hourId","find","newAvailableHours","filter","Object","values","submitHandler","newAvailable","submitNewHourHandler","guests","closeModalHandler","setDaysOptions","setInputs","color","class","marginLeft","Modal","show","onCancel","header","contentClass","footerClass","footer","padding","prevAvailable","AdminUpdateItem","item","setItem","itemAvailability","setItemAvailability","itemBonus","setItemBonus","itemSpecial","setItemSpecial","itemFormState","fetchItem","bonus","special","setItemOptions","prevBonus","prevSpecial","AdminValue","newValue","AdminPanel","section","setSection","AdminUpdate"],"mappings":"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","file":"static/js/4.432fc9d3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst AdminNav = ({ changeSection }) => {\r\n    return (\r\n        \r\n            <ul>\r\n                <li id=\"0\" onClick={changeSection}>Dodaj produkt</li>\r\n                <li id={1} onClick={changeSection}>Zmień produkt</li>\r\n                <li id={2} onClick={changeSection}>Usuń produkt</li>\r\n                <li id={3} onClick={changeSection}>Kategorie</li>\r\n                <li id={4} onClick={changeSection}>Min. wartość zamówienia</li>\r\n                <li id={5} onClick={changeSection}>Dowóz</li>\r\n                <li id={6} onClick={changeSection}>Min. wartości gratis</li>\r\n                <li id={7} onClick={changeSection}>Menu degustacyjne</li>\r\n            </ul>\r\n        \r\n    )\r\n}\r\n\r\nexport default AdminNav\r\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const [images, setImages] = useState([]);\n  const [imagesValue, setImagesValue] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file && props.previewUrl) {\n      console.log(props.previewUrl);\n      const actualPrevievUrl = process.env.REACT_APP_AWS_URL + \"/\" + props.previewUrl\n      setPreviewUrl(actualPrevievUrl)\n    } else if (!file) {\n      return;\n    } else {\n      const fileReader = new FileReader();\n      let allImages = images\n      fileReader.onload = () => {\n        if (props.id === \"images\") {\n          allImages.push(fileReader.result)\n          setImages(allImages);\n        }\n        setPreviewUrl(fileReader.result);\n      };\n      fileReader.readAsDataURL(file);\n    }\n  }, [file]);\n  \n  const pickedHandler = event => {\n    let pickedFile;\n    let newImagesValue\n    let fileIsValid = isValid;\n    setImagesValue([\n      ...imagesValue,\n      event.target.files[0]\n    ]);\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      newImagesValue = [\n        ...imagesValue,\n        pickedFile\n      ]\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    let onInputImgValue\n    if (props.id === \"images\") {onInputImgValue = newImagesValue} \n    else {onInputImgValue = pickedFile}\n    \n    props.onInput(props.id, onInputImgValue, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  const deleteImage = (e) => {\n    setSelectedId(e.target.id)\n    const newImages = images\n    const newImagesValue = imagesValue\n    if (newImages.length > 0) {\n    newImages.splice(e.target.id, 1);\n    newImagesValue.splice(e.target.id, 1);\n    setImages(newImages)\n    setImagesValue(newImagesValue)\n    setSelectedId(null)\n    }\n    let fileIsValid = isValid;\n    if (newImagesValue.length > 1) {\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, newImagesValue, fileIsValid);\n  };\n\n  const imageArea = images.map((i, id) => \n  (<div style={{height: \"100%\", width: \"100%\"}} key={id}>\n  <img src={i} alt=\"Preview\" id={id} onClick={deleteImage}\n  style={{cursor: 'pointer'}}/>\n  </div>\n  )\n  )\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {props.id === \"images\" && images.length > 0 && imageArea}\n          {!(props.id === \"images\") && previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {props.id === \"images\" && !images.length > 0 && <p>Proszę wybrać zdjęcie produktu.</p>}\n          {!(props.id === \"images\") && !previewUrl && <p>Proszę wybrać zdjęcie produktu.</p>}\n          \n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\n\r\nimport ImageUpload from \"../../FormElements/ImageUpload\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\n\r\nconst AdminAddItem = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n            description: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            price: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            category: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n          image: {\r\n            value: null,\r\n            isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category`\r\n              );\r\n      \r\n              setCategories(responseData.category);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchCategories();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const itemSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            const formData = new FormData();\r\n            formData.append('name', formState.inputs.name.value);\r\n            formData.append('description', formState.inputs.description.value);\r\n            formData.append('price', formState.inputs.price.value);\r\n            formData.append('category', formState.inputs.category.value);\r\n            formData.append('image', formState.inputs.image.value);\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/items/`,\r\n              'POST',\r\n              formData\r\n              ,\r\n              {\r\n                Authorization: 'Bearer ' + auth.token\r\n              }\r\n            );\r\n                alert(\"Utworzono produkt\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n    const setOptions = categories.map(i => <option value={i.id}>{i.name}</option>)\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Dodaj danie / produkt</h2>\r\n                <form\r\n                onSubmit={itemSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nazwa produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <ImageUpload\r\n                    center\r\n                    id=\"image\"\r\n                    onInput={inputHandler}\r\n                    errorText=\"Wprowadź zdjęcie produktu.\"\r\n                    />\r\n                    <Input \r\n                    id=\"description\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"Opis produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawny opis.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Input \r\n                    id=\"price\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Cena\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną cenę.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    {categories.length > 0 && <Input \r\n                    id=\"category\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Kategoria\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną kategorię.\"\r\n                    onInput={inputHandler}\r\n                    options={setOptions}\r\n                    />}\r\n                    <Button type=\"submit\"\r\n                    disabled={!formState.isValid}>\r\n                    DODAJ\r\n                    </Button>\r\n                </form>\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminAddItem\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminBonusDelivery = () => {\r\n    const [value, setValue] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          value: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchValue = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/bonus-delivery/${process.env.REACT_APP_BONUS_DELIVERY_PRICE_ID}`\r\n              );\r\n              setValue(responseData.bonus_delivery_price);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchValue();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const valueSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/bonus-delivery/${process.env.REACT_APP_BONUS_DELIVERY_PRICE_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                value: parseInt(formState.inputs.value.value)\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień minimalną wartość darmowej opłaty za dowóz</h2>\r\n                {value && <form\r\n                onSubmit={valueSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"value\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Minimalna wartość darmowej opłaty za dowóz (zł)\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={value.value}\r\n                    /> \r\n                    <Button type=\"submit\">\r\n                    ZMIEŃ WARTOŚĆ\r\n                    </Button> \r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminBonusDelivery\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminBonusItems = () => {\r\n    const [value, setValue] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          value: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchValue = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/bonus-items/${process.env.REACT_APP_BONUS_ITEMS_PRICE_ID}`\r\n              );\r\n              setValue(responseData.bonus_items_price);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchValue();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const valueSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/bonus-items/${process.env.REACT_APP_BONUS_ITEMS_PRICE_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                value: parseInt(formState.inputs.value.value)\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień minimalną wartość produktów gratis</h2>\r\n                {value && <form\r\n                onSubmit={valueSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"value\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Minimalna wartość produktów gratis (zł)\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={value.value}\r\n                    /> \r\n                    <Button type=\"submit\">\r\n                    ZMIEŃ WARTOŚĆ\r\n                    </Button> \r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminBonusItems\r\n","import React from 'react'\r\nimport AdminBonusDelivery from './AdminBonusDelivery'\r\nimport AdminBonusItems from './AdminBonusItems'\r\n\r\nconst AdminBonus = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ borderBottom: \"1px solid black\", borderTop: \"1px solid black\" }}>\r\n            <AdminBonusDelivery /> \r\n            </div>\r\n            <div style={{ borderBottom: \"1px solid black\", borderTop: \"1px solid black\" }}>\r\n            <AdminBonusItems />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminBonus\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\n\r\nconst AdminCategory = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [catId, setCatId] = useState(false);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n      const catSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/category/`,\r\n              'POST',\r\n              JSON.stringify({\r\n                name: formState.inputs.name.value\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Utworzono kategorię\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category`\r\n              );\r\n      \r\n              setCategories(responseData.category);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchCategories();\r\n      }, [sendRequest])\r\n\r\n    const deleteCategorySubmitHandler = async event => {\r\n        event.preventDefault();\r\n            try {\r\n              await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category/${catId}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                  Authorization: 'Bearer ' + auth.token\r\n                }\r\n              );\r\n            alert(\"Usunięto Kategorię\")\r\n            window.location.reload()\r\n            } catch (err) {}\r\n        }\r\n\r\n    const choseDeletedCatId = (e) => {\r\n        setCatId(e.target.value)}\r\n\r\n    const setOptions = categories.map(i => <option value={i._id}>{i.name}</option>)\r\n\r\n    return (\r\n            <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Dodaj kategorię</h2>\r\n                <form\r\n                onSubmit={catSubmitHandler}\r\n                >\r\n                <Input \r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nazwa kategorii\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę.\"\r\n                    onInput={inputHandler}\r\n                    />\r\n                    <Button type=\"submit\"\r\n                    disabled={!formState.isValid}>\r\n                    DODAJ\r\n                    </Button>\r\n                    </form>\r\n                <h2>Usuń kategorię</h2>\r\n                {categories.length > 0 ? <select name=\"items\" id=\"items\" onChange={choseDeletedCatId} >\r\n                    <option value={''}>wybierz kategorię</option>\r\n                    {setOptions}\r\n                </select> : <p>Brak Kategorii</p>}\r\n                <Button \r\n                onClick={deleteCategorySubmitHandler}\r\n                disabled={!catId}\r\n                >USUŃ</Button>\r\n            </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminCategory\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Button from \"../../FormElements/Button\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\n\r\nconst AdminDeleteItem = () => {\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [itemId, setItemId] = useState(false);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n    \r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/items`\r\n              );\r\n      \r\n              setItems(responseData.items);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchItems();\r\n      }, [sendRequest])\r\n\r\n    const deleteItemSubmitHandler = async event => {\r\n        event.preventDefault();\r\n            try {\r\n              await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/items/${itemId}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                  Authorization: 'Bearer ' + auth.token\r\n                }\r\n              );\r\n            alert(\"Usunięto produkt\")\r\n            \r\n            window.location.reload()\r\n            } catch (err) {}\r\n        }\r\n\r\n    const choseDeletedItemId = (e) => {\r\n            setItemId(e.target.value)\r\n              }\r\n\r\n\r\n    const setOptions = items.map(i => <option value={i.id}>{i.name}</option>)\r\n\r\n    return (\r\n            <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Usuń</h2>\r\n                {items.length > 0 ? <select name=\"items\" id=\"items\" onChange={choseDeletedItemId} >\r\n                    <option value={''}>wybierz produkt</option>\r\n                    {setOptions}\r\n                </select> : <p>Brak produktów</p>}\r\n                <Button \r\n                onClick={deleteItemSubmitHandler}\r\n                disabled={!itemId}\r\n                >USUŃ</Button>\r\n            </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminDeleteItem\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminDeliveryPrice = () => {\r\n    const [value, setValue] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          value: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchValue = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/delivery/${process.env.REACT_APP_DELIVERY_PRICE_ID}`\r\n              );\r\n              setValue(responseData.delivery_price);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchValue();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const valueSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/delivery/${process.env.REACT_APP_DELIVERY_PRICE_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                value: parseInt(formState.inputs.value.value)\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień wartość opłaty za dowóz</h2>\r\n                {value && <form\r\n                onSubmit={valueSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"value\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Minimalna wartość opłaty za dowóz (zł)\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={value.value}\r\n                    /> \r\n                    <Button type=\"submit\"\r\n                    >\r\n                    ZMIEŃ WARTOŚĆ\r\n                    </Button> \r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminDeliveryPrice\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminDeliveryPrice = () => {\r\n    const [actualDeliveryTime, setActualDeliveryTime] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          deliveryTime: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchDeliveryTime = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/deliverytime/${process.env.REACT_APP_DELIVERY_TIME_ID}`\r\n              );\r\n              setActualDeliveryTime(responseData.deliveryTime.time);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchDeliveryTime();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const deliveryTimeSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/deliverytime/${process.env.REACT_APP_DELIVERY_TIME_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                time: parseInt(formState.inputs.deliveryTime.value)\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień czas dowozu</h2>\r\n                {actualDeliveryTime && <form\r\n                onSubmit={deliveryTimeSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"deliveryTime\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Czas dowozu (min)\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={actualDeliveryTime}\r\n                    /> \r\n                    <Button type=\"submit\"\r\n                    >\r\n                    ZMIEŃ CZAS\r\n                    </Button> \r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminDeliveryPrice\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminTime = () => {\r\n    const [times, setTimes] = useState([]);\r\n    const [time, setTime] = useState(false);\r\n    const [timeAvailability, setTimeAvailability] = useState();\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          startHour: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        startMinute: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        endHour: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        endMinute: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n      const [dayFormState, selectHandler] = useForm(\r\n        {\r\n            day: {\r\n              value: '',\r\n              isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchTimes = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/time`\r\n              );\r\n              setTimes(responseData.time);             \r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchTimes();\r\n      }, [sendRequest])\r\n\r\n      useEffect(() => {\r\n        const fetchTime = async () => {\r\n            if(dayFormState.inputs.day.value) {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/time/${dayFormState.inputs.day.value}`\r\n              );\r\n              setTime(responseData.time);\r\n              setTimeAvailability(responseData.time.available);\r\n        } catch (err) {}      \r\n        } else return\r\n    }\r\n    fetchTime();\r\n  }, [sendRequest, dayFormState.inputs.day.value])\r\n    \r\n\r\n    const timeSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/time/${dayFormState.inputs.day.value}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                startHour: parseInt(formState.inputs.startHour.value),\r\n                startMinute: parseInt(formState.inputs.startMinute.value),\r\n                endHour: parseInt(formState.inputs.endHour.value),\r\n                endMinute: parseInt(formState.inputs.endMinute.value),\r\n                available: timeAvailability\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano Godziny\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n      const changeAvailability = () => {\r\n        setTimeAvailability(prevAvailibility => !prevAvailibility)\r\n    }\r\n\r\n    const setOptions = times.map(i => <option value={i._id}>{i.day}</option>)\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień godziny dowozu</h2>\r\n                {times.length > 0 && <Input \r\n                    id=\"day\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Wybierz dzień\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wybierz poprawny dzień.\"\r\n                    onInput={selectHandler}\r\n                    options={setOptions}\r\n                    />}\r\n                \r\n                {time && <form\r\n                onSubmit={timeSubmitHandler}\r\n                >\r\n                    <div className=\"start\">\r\n                    <span>Start: </span>\r\n                    <Input \r\n                    id=\"startHour\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={23}\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.start.hour}\r\n                    />\r\n                    :\r\n                    <Input \r\n                    id=\"startMinute\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={59}\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.start.minute}\r\n                    />\r\n                    </div>\r\n                    <div className=\"end\">\r\n                        <span>Koniec: </span>\r\n                    <Input \r\n                    id=\"endHour\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={23}\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.end.hour}\r\n                    />\r\n                    :\r\n                    <Input \r\n                    id=\"endMinute\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={59}\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    onInput={inputHandler}\r\n                    initialValue={time.time.end.minute}\r\n                    />\r\n                    <div className='availability' style={{marginTop: \"1em\"}}>\r\n                    <label for='availability' style={{fontWeight: 'bold', marginBottom: '0.5rem'}}>Dowóz aktywny?</label>\r\n                    <input id='availability' type='checkbox' onChange={changeAvailability} checked={timeAvailability} style={{display: 'block', margin: 'auto'}} />\r\n                    </div>\r\n                    \r\n                    </div>\r\n                    <Button type=\"submit\"\r\n                    >\r\n                    ZMIEŃ GODZINY\r\n                    </Button>\r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminTime\r\n\r\n","import React from 'react'\r\nimport AdminDeliveryPrice from './AdminDeliveryPrice'\r\nimport AdminDeliveryTime from './AdminDeliveryTime'\r\nimport AdminTime from './AdminTime'\r\n\r\nconst AdminDelivery = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ borderBottom: \"1px solid black\", borderTop: \"1px solid black\" }}>\r\n            <AdminTime /> \r\n            </div>\r\n            <div style={{ borderBottom: \"1px solid black\", borderTop: \"1px solid black\" }}>\r\n            <AdminDeliveryTime />\r\n            </div>\r\n            <div style={{ borderBottom: \"1px solid black\", borderTop: \"1px solid black\" }}>\r\n            <AdminDeliveryPrice />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminDelivery\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\n\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\nimport Modal from '../../UIElements/Modal';\r\n\r\nconst AdminSpecialReservation = () => {\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [reservation, setReservation] = useState([]);\r\n    const [reservationDay, setReservationDay] = useState(false);\r\n    const [availableHours, setAvailableHours] = useState([]);\r\n    const [available, setAvailable] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const [dayFormState, selectDayHandler] = useForm(\r\n        {\r\n            name: {\r\n              value: '',\r\n              isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            hour: {\r\n              value: '',\r\n              isValid: false\r\n          },\r\n        //   guests: {\r\n        //     value: '',\r\n        //     isValid: false\r\n        // }\r\n        },\r\n        false\r\n    );\r\n\r\n    useEffect(() => {\r\n        const fetchSpecialReservation = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/reservation`\r\n              );\r\n              \r\n              setReservation(responseData.reservations[0].days);\r\n        } catch (err) {}     \r\n    };\r\n    fetchSpecialReservation();\r\n      }, [sendRequest])\r\n\r\n    useEffect(() => {\r\n        const fetchDay = async () => {\r\n            if(dayFormState.inputs.name.value) {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/reservation/${dayFormState.inputs.name.value}`\r\n              );\r\n              setReservationDay(responseData.reservation);\r\n              setAvailable(responseData.reservation.available.value)\r\n              setMessage(responseData.reservation.available.message)\r\n              const hours = responseData.reservation.availableHours\r\n              const sortHours = hours.sort((a, b) => {\r\n               return a.hour - b.hour})\r\n              setAvailableHours(sortHours)\r\n        } catch (err) {}      \r\n        } else return\r\n    }\r\n    fetchDay();\r\n  }, [sendRequest, dayFormState.inputs.name.value])\r\n\r\n  // const inputChange = (e) => {\r\n  //     e.preventDefault()\r\n  //     const hourId = availableHours.find(i => i._id === e.target.id);\r\n  //     const newGuests = parseInt(e.target.value)\r\n  //     hourId.guests = newGuests\r\n  //     const newAvailableHours = {\r\n  //       ...availableHours\r\n  //     }\r\n  //     setAvailableHours(Object.values(newAvailableHours))\r\n  // }\r\n  const deleteInput = (e) => {\r\n    const hourId = availableHours.find(i => i._id === e.target.id);\r\n    const newAvailableHours = availableHours.filter(i => !(i === hourId));\r\n    setAvailableHours(Object.values(newAvailableHours))\r\n  }\r\n  const changeAvailability = () => {\r\n    setMessage('')\r\n    setAvailable(prevAvailable => !prevAvailable)\r\n  }\r\n  const messageHandler = (e) => {\r\n    setMessage(e.target.value)\r\n  }\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault()\r\n    const newAvailable = {\r\n      value: available,\r\n      message\r\n    }\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/api/reservation/${reservationDay._id}`,\r\n        'PATCH',\r\n        JSON.stringify({\r\n          available: newAvailable,\r\n          availableHours\r\n        }),\r\n        {\r\n          // Authorization: 'Bearer ' + auth.token,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      );\r\n          alert(\"Zaktualizowano\")\r\n          window.location.reload()\r\n    } catch (err) {}\r\n  }\r\n\r\n  const submitNewHourHandler = async (e) => {\r\n    e.preventDefault()\r\n    \r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/api/reservation/${reservationDay._id}`,\r\n        'POST',\r\n        JSON.stringify({\r\n          hour: formState.inputs.hour.value,\r\n          guests: 5\r\n          // guests: formState.inputs.guests.value\r\n        }),\r\n        {\r\n          Authorization: 'Bearer ' + auth.token,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      );\r\n          alert(\"Dodano godzinę\")\r\n          window.location.reload()\r\n    } catch (err) {}\r\n  }\r\n\r\n  const closeModalHandler = () => {\r\n    setShowModal(false)\r\n  }\r\n\r\n  const openModalHandler = () => {\r\n    setShowModal(true)\r\n  }\r\n\r\n    const setDaysOptions = reservation.map(i => <option value={i._id}>{i.name}</option>)\r\n    const setInputs = availableHours.map((i, id) => {\r\n        return (\r\n            <div key={id}>\r\n              <p>\r\n                <span style={{color: \"black\", fontWeight: \"bold\"}}>{i.hour}:00 </span>\r\n                {/* <span style={{color: \"black\", fontWeight: \"bold\"}}>Liczba gości:</span> */}\r\n              {/* <input\r\n                style={{margin: \"0 1em\", width: \"10%\", textAlign: \"center\"}}\r\n                type=\"number\"\r\n                id={i._id}\r\n                value={availableHours[id].guests}\r\n                onChange={inputChange}\r\n                ></input> */}\r\n                <span \r\n                id={i._id}\r\n                class=\"fas fa-times\" \r\n                style={{cursor: 'pointer', marginLeft: '1em'}} \r\n                onClick={deleteInput}\r\n                ></span>\r\n              </p>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            <Modal\r\n            show={showModal}\r\n            onCancel={closeModalHandler}\r\n            header={\r\n              <h2>Nowa Godzina</h2>\r\n            }\r\n            contentClass=\"place-item__modal-content\"\r\n            footerClass=\"place-item__modal-actions\"\r\n            footer={<Button onClick={closeModalHandler}>ZAMKNIJ</Button>}\r\n            >\r\n            <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            <form \r\n              className=\"new-hour\"\r\n              onSubmit={submitNewHourHandler}\r\n            >\r\n                <Input\r\n                id=\"hour\"\r\n                element=\"input\"\r\n                type=\"number\"\r\n                label=\"Godzina\"\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                errorText=\"Wprowadź poprawną godzinę.\"\r\n                onInput={inputHandler}\r\n                ></Input>\r\n                {/* <Input\r\n                id=\"guests\"\r\n                element=\"input\"\r\n                type=\"number\"\r\n                label=\"Liczba gości\"\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                errorText=\"Wprowadź poprawną liczbę gości.\"\r\n                onInput={inputHandler}\r\n                ></Input> */}\r\n                <Button \r\n                 type=\"submit\"\r\n                 disabled={!formState.isValid}\r\n                 onClick={submitNewHourHandler}\r\n                >DODAJ\r\n                </Button>\r\n              </form>\r\n            </React.Fragment>\r\n            </Modal>\r\n\r\n            <h2 onClick={() => console.log(availableHours)}>Zaktualizuj dzień i godzinę</h2>\r\n                {reservation.length > 0 && <Input \r\n                    id=\"name\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Wybierz dzień\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wybierz dzień.\"\r\n                    onInput={selectDayHandler}\r\n                    options={setDaysOptions}\r\n                />}\r\n                {reservationDay && <div>\r\n                  <p style={{color: \"black\", fontWeight: \"bold\"}}>Dostępne godziny:</p>\r\n                {setInputs}\r\n                <Button \r\n                onClick={openModalHandler}\r\n                >Dodaj godzinę</Button>\r\n                </div>\r\n                }\r\n                {reservationDay && <form \r\n                onSubmit={submitHandler}\r\n                >\r\n                <div style={{borderTop: '1px solid', borderBottom: '1px solid', color: 'black'}}>\r\n                  <label for='available' style={{fontWeight: 'bold', padding: '0.5em', display: 'block'}}>Dostępność:</label>\r\n                  <input id='available' type='checkbox' onChange={changeAvailability} checked={available} style={{display: 'block', margin: '0.5em auto'}} />\r\n                  {!available && <p><span>Wiadomość:</span><textarea onChange={messageHandler} value={message} style={{display: 'block', margin: '0.5em auto'}}/></p>}\r\n                </div>\r\n                <Button \r\n                type=\"submit\">\r\n                  ZAKTUALIZUJ\r\n                </Button>\r\n                </form>}\r\n                \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminSpecialReservation\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\n  import { AuthContext } from '../../../context/auth-context';\r\n\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\n\r\n\r\nconst AdminUpdateItem = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [items, setItems] = useState([]);\r\n    const [item, setItem] = useState(false);\r\n    const [itemAvailability, setItemAvailability] = useState();\r\n    const [itemBonus, setItemBonus] = useState();\r\n    const [itemSpecial, setItemSpecial] = useState();\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n            description: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            price: {\r\n                value: '',\r\n                isValid: false\r\n        },\r\n            category: {\r\n                value: '',\r\n                isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    const [itemFormState, selectHandler] = useForm(\r\n        {\r\n            name: {\r\n              value: '',\r\n              isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/category`\r\n              );\r\n      \r\n              setCategories(responseData.category);\r\n        } catch (err) {}\r\n          \r\n    };\r\n    const fetchItems = async () => {\r\n        try {\r\n          const responseData = await sendRequest(\r\n            `${process.env.REACT_APP_BACKEND_URL}/api/items`\r\n          );\r\n  \r\n          setItems(responseData.items);\r\n    } catch (err) {}\r\n      \r\n};\r\n    fetchCategories();\r\n    fetchItems();\r\n      }, [sendRequest])\r\n\r\n      useEffect(() => {\r\n        \r\n            const fetchItem = async () => {\r\n                if(itemFormState.inputs.name.value) {\r\n                try {\r\n                  const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/items/${itemFormState.inputs.name.value}`\r\n                  );\r\n          \r\n                  setItem(responseData.item);\r\n                  setItemAvailability(responseData.item.available)\r\n                  setItemBonus(responseData.item.bonus)\r\n                  setItemSpecial(responseData.item.special)\r\n            } catch (err) {}      \r\n            } else return\r\n        }\r\n    fetchItem();\r\n      }, [sendRequest, itemFormState.inputs.name.value])\r\n    \r\n\r\n    const itemSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/items/${item.id}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                name: formState.inputs.name.value,\r\n                description: formState.inputs.description.value,\r\n                price: formState.inputs.price.value,\r\n                category: formState.inputs.category.value,\r\n                available: itemAvailability,\r\n                bonus: itemBonus,\r\n                special: itemSpecial\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano produkt\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n\r\n    const setOptions = categories.map(i => <option value={i.id}>{i.name}</option>)\r\n    const setItemOptions = items.map(i => <option value={i.id}>{i.name}</option>)\r\n\r\n    const changeAvailability = () => {\r\n        setItemAvailability(prevAvailibility => !prevAvailibility)\r\n    }\r\n\r\n    const changeBonus = () => {\r\n      setItemBonus(prevBonus => !prevBonus)\r\n  }\r\n\r\n  const changeSpecial = () => {\r\n    setItemSpecial(prevSpecial => !prevSpecial)\r\n}\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zaktualizuj danie / produkt</h2>\r\n                <Input \r\n                    id=\"name\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Wybierz Produkt\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wybierz poprawny produkt.\"\r\n                    onInput={selectHandler}\r\n                    options={setItemOptions}\r\n                    />\r\n                {item && <form\r\n                onSubmit={itemSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Nazwa produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną nazwę.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={item.name}\r\n                    />\r\n                    <Input \r\n                    id=\"description\"\r\n                    element=\"textarea\"\r\n                    type=\"text\"\r\n                    label=\"Opis produktu\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawny opis.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={item.description}\r\n                    />\r\n                    <Input \r\n                    id=\"price\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Cena\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną cenę.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={item.price}\r\n                    />\r\n                    {categories.length > 0 && <Input \r\n                    id=\"category\"\r\n                    element=\"select\"\r\n                    name=\"select\"\r\n                    label=\"Kategoria\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną kategorię.\"\r\n                    onInput={inputHandler}\r\n                    options={setOptions}\r\n                    initialValue={item.category}\r\n                    />}\r\n                    <label for='availability' style={{fontWeight: 'bold', marginBottom: '0.5rem'}}>Produkt dostępny?</label>\r\n                    <input id='availability' type='checkbox' onChange={changeAvailability} checked={itemAvailability} style={{display: 'block', margin: 'auto'}} />\r\n                    <label for='bonus' style={{fontWeight: 'bold', marginBottom: '0.5rem'}}>Produkt gratis?</label>\r\n                    <input id='bonus' type='checkbox' onChange={changeBonus} checked={itemBonus} style={{display: 'block', margin: 'auto'}} />\r\n                    <label for='special' style={{fontWeight: 'bold', marginBottom: '0.5rem'}}>Menu degustacyjne?</label>\r\n                    <input id='special' type='checkbox' onChange={changeSpecial} checked={itemSpecial} style={{display: 'block', margin: 'auto'}} />\r\n                    <Button \r\n                    type=\"submit\"\r\n                    >\r\n                    ZMIEŃ\r\n                    </Button>\r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminUpdateItem\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE\r\n  } from '../../util/validators';\r\n  import { useHttpClient } from '../../hooks/http-hook';\r\n  import LoadingSpinner from \"../../UIElements/LoadingSpinner\"\r\nimport Button from \"../../FormElements/Button\"\r\nimport Input from '../../FormElements/Input';\r\n\r\nimport { useForm } from \"../../hooks/form-hook\"\r\nimport ErrorModal from \"../../UIElements/ErrorModal\"\r\nimport { AuthContext } from '../../../context/auth-context';\r\n\r\nconst AdminValue = () => {\r\n    const [value, setValue] = useState(false); \r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n          value: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n        },\r\n        false\r\n      );\r\n\r\n    useEffect(() => {\r\n        const fetchValue = async () => {\r\n            try {\r\n              const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`\r\n              );\r\n              setValue(responseData.value);\r\n            \r\n        } catch (err) {}\r\n          \r\n    };\r\n    fetchValue();\r\n      }, [sendRequest])\r\n    \r\n\r\n    const valueSubmitHandler = async event => {\r\n        event.preventDefault();\r\n          try {\r\n            await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`,\r\n              'PATCH',\r\n              JSON.stringify({\r\n                newValue: parseInt(formState.inputs.value.value)\r\n              }),\r\n              {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n                alert(\"Zaktualizowano wartość\")\r\n                window.location.reload()\r\n          } catch (err) {}\r\n      };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Zmień minimalną wartość zamówienia</h2>\r\n                {value && <form\r\n                onSubmit={valueSubmitHandler}\r\n                >\r\n                    <Input \r\n                    id=\"value\"\r\n                    element=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Minimalna wartość zamówienia (zł)\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Wprowadź poprawną wartość.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={value.value}\r\n                    />\r\n                    <Button type=\"submit\"\r\n                    >\r\n                    ZMIEŃ WARTOŚĆ\r\n                    </Button>\r\n                </form>}\r\n                </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminValue\r\n","import React, {useState} from 'react';\r\nimport \"./Admin.css\"\r\nimport AdminNav from './AdminNav';\r\nimport AdminAddItem from './AdminStore/AdminAddItem';\r\nimport AdminBonus from './AdminStore/AdminBonus';\r\nimport AdminCategory from './AdminStore/AdminCategory';\r\nimport AdminDeleteItem from './AdminStore/AdminDeleteItem';\r\nimport AdminDelivery from './AdminStore/AdminDelivery';\r\nimport AdminSpecialReservation from './AdminStore/AdminSpecialReservation';\r\nimport AdminUpdateItem from './AdminStore/AdminUpdate';\r\nimport AdminValue from './AdminStore/AdminValue';\r\n\r\nconst AdminPanel = () => {\r\n\r\n    const [section, setSection] = useState(\"0\");\r\n\r\n    const changeSection = (e) => {\r\n        setSection(e.target.id);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"admin\">\r\n                <div className=\"admin-navigation\">\r\n                    <AdminNav changeSection={changeSection} />\r\n                </div>\r\n                <div className=\"admin-content\">\r\n                {section === \"0\" && <AdminAddItem />}\r\n                {section === \"1\" && <AdminUpdateItem />}\r\n                {section === \"2\" && <AdminDeleteItem />}\r\n                {section === \"3\" && <AdminCategory />}\r\n                {section === \"4\" && <AdminValue />}\r\n                {section === \"5\" && <AdminDelivery />}\r\n                {section === \"6\" && <AdminBonus />}\r\n                {section === \"7\" && <AdminSpecialReservation />}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminPanel\r\n"],"sourceRoot":""}
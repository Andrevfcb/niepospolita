{"version":3,"sources":["Components/Body/Cart.js"],"names":["Cart","useState","valid","message","orderValid","setOrderValid","useHttpClient","isLoading","error","sendRequest","clearError","minOrderValue","setMinOrderValue","deliveryHours","setDeliveryHours","deliveryPrice","setDeliveryPrice","minBonusDeliveryPrice","setMinBonusDeliveryPrice","minBonusItemsPrice","setMinBonusItemsPrice","bonusItemCheckedId","setBonusItemCheckedId","bonusItems","setBonusItems","useContext","CartContext","cartItems","removeProduct","increase","decrease","total","addBonusItem","bonusItem","useDate","today","dayId","currentHour","currentMinute","useEffect","window","scrollTo","getMinOrderValue","a","process","responseData","value","getDeliveryHours","time","getDeliveryPrice","delivery_price","getBonusItems","getBonusItemsPrice","bonus_items_price","getBonusDeliveryPrice","bonus_delivery_price","orderValidation","currentDay","find","_id","endHour","end","hour","endMinute","minute","available","changeBonusItem","e","target","id","showCartItems","map","item","product","name","price","image","description","quantity","className","src","alt","class","onClick","checkProductQuantity","toFixed","showBonusItems","type","onChange","checked","style","display","margin","marginTop","Fragment","asOverlay","onClear","length","color","marginLeft","fontSize","marginRight","to","disabled"],"mappings":"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","file":"static/js/6.9d2f9f96.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport \"./Cart.css\"\r\nimport Button from '../FormElements/Button'\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useDate } from '../hooks/date-hook';\r\nimport ErrorModal from \"../UIElements/ErrorModal\";\r\nimport { CartContext } from '../../context/cart-context';\r\nimport Card from '../UIElements/Card';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Cart = () => {\r\n\r\n    const [orderValid, setOrderValid] = useState({valid: false, message: ''})\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [minOrderValue, setMinOrderValue] = useState(false);\r\n    const [deliveryHours, setDeliveryHours] = useState(false);\r\n    const [deliveryPrice, setDeliveryPrice] = useState(false);\r\n    const [minBonusDeliveryPrice, setMinBonusDeliveryPrice] = useState(false);\r\n    const [minBonusItemsPrice, setMinBonusItemsPrice] = useState(false);\r\n    const [bonusItemCheckedId, setBonusItemCheckedId] = useState(false);\r\n    const [bonusItems, setBonusItems] = useState([]);\r\n    const { cartItems, removeProduct, increase, decrease, total, addBonusItem, bonusItem } = useContext(CartContext);\r\n    const { today, dayId, currentHour, currentMinute } = useDate();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n            const getMinOrderValue = async () => {\r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/value/${process.env.REACT_APP_MIN_VALUE_ID}`\r\n                  );\r\n                \r\n                setMinOrderValue(responseData.value)\r\n                } catch (err) {}\r\n            }\r\n            const getDeliveryHours = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/api/time/`\r\n                  );\r\n                \r\n                  setDeliveryHours(responseData.time)\r\n                } catch (err) {}\r\n            } \r\n            const getDeliveryPrice = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/delivery/${process.env.REACT_APP_DELIVERY_PRICE_ID}`\r\n                      );\r\n                      setDeliveryPrice(responseData.delivery_price.value);\r\n                } catch (err) {}\r\n            }\r\n            const getBonusItems = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/bonus/`\r\n                      );\r\n                      setBonusItems(responseData.bonusItems);\r\n                } catch (err) {}\r\n            }\r\n            const getBonusItemsPrice = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/bonus-items/${process.env.REACT_APP_BONUS_ITEMS_PRICE_ID}`\r\n                      );\r\n                      setMinBonusItemsPrice(responseData.bonus_items_price.value);\r\n                } catch (err) {}\r\n            }\r\n            const getBonusDeliveryPrice = async () => {\r\n                \r\n                try {\r\n                    const responseData = await sendRequest(\r\n                        `${process.env.REACT_APP_BACKEND_URL}/api/bonus-delivery/${process.env.REACT_APP_BONUS_DELIVERY_PRICE_ID}`\r\n                      );\r\n                      setMinBonusDeliveryPrice(responseData.bonus_delivery_price.value);\r\n                } catch (err) {}\r\n            }\r\n            getMinOrderValue()\r\n            getDeliveryHours()\r\n            getDeliveryPrice()\r\n            getBonusItems()\r\n            getBonusItemsPrice()\r\n            getBonusDeliveryPrice()\r\n    }, [sendRequest])\r\n\r\n    useEffect(() => {\r\n        const orderValidation = {valid: false, message: ''}\r\n        if(cartItems && deliveryHours && today && dayId && currentHour && currentMinute) {\r\n            const currentDay = deliveryHours.find(time => time._id === dayId)\r\n            const endHour = currentDay.time.end.hour\r\n            const endMinute = currentDay.time.end.minute\r\n            \r\n                if (!currentDay.available) {\r\n                    orderValidation.valid = false\r\n                    orderValidation.message = 'W dzisiejszym dniu nie dowozimy'\r\n                } else if (total < minOrderValue.value) {\r\n                    orderValidation.valid = false\r\n                    orderValidation.message = `Minimalna kwota zamówienia to ${minOrderValue.value} zł`\r\n                }\r\n                else if (endHour < currentHour || (endHour === currentHour && endMinute <= currentMinute)) {\r\n                    orderValidation.valid = false\r\n                    orderValidation.message = `W dzisiejszym dniu już nie dowozimy. Zapraszamy ponownie.`\r\n                    }\r\n                else {\r\n                    orderValidation.valid = true\r\n                    orderValidation.message = ''\r\n            }\r\n        }\r\n        return (\r\n            setOrderValid(orderValidation)\r\n            )\r\n    }, [cartItems, deliveryHours, today, dayId, currentHour, currentMinute, total, minOrderValue])\r\n\r\n    const checkProductQuantity = (quantity, product) => {\r\n        if(quantity <= 0) removeProduct(product)\r\n    }\r\n\r\n    const changeBonusItem = (e) => {\r\n        setBonusItemCheckedId(e.target.id)\r\n    }\r\n\r\n    const showCartItems = cartItems.map(item => {\r\n        const product = { id: item.id, name: item.name, price: item.price, image: item.image, description: item.description };\r\n        const price = item.price * item.quantity\r\n        return (\r\n        <li className=\"item-card\" key={item.id}>\r\n            <img src={`${process.env.REACT_APP_AWS_URL}/${item.image}`} alt={item.name}></img>\r\n            <span className=\"item-name\">{item.name}</span>\r\n            <span class=\"fas fa-minus item-quantity__handler\" onClick={() => {\r\n                decrease(product)\r\n                checkProductQuantity(item.quantity, product)\r\n                }}></span>\r\n            <span class=\"item-quantity\">{item.quantity}</span>\r\n            <span class=\"fas fa-plus item-quantity__handler\" onClick={() => {increase(product)}}></span>\r\n            <span class=\"item-price\">{price.toFixed(2)} zł</span>\r\n            <span class=\"fas fa-times item-remove\" onClick={() => {removeProduct(product)}}></span>\r\n        </li>\r\n            )\r\n    })\r\n\r\n    const showBonusItems = bonusItems.map(item => {\r\n        return <li className=\"item-card bonus-item\" key={item._id}>\r\n            <img src={`${process.env.REACT_APP_AWS_URL}/${item.image}`} alt={item.image}></img>\r\n            <div>\r\n                <span>{item.name}</span>\r\n                <input id={item._id} type='checkbox' \r\n                onChange={changeBonusItem}\r\n                onClick={() => addBonusItem(item)}\r\n                checked={item._id === (bonusItemCheckedId || (bonusItem && bonusItem.id))} \r\n                style={{display: 'block', margin: 'auto', marginTop: '0.5em'}} />\r\n            </div>\r\n            \r\n        </li>\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        <div className=\"cart\">\r\n                <h1>Twój koszyk</h1>\r\n                {cartItems.length > 0 &&<div className=\"cart-info\">\r\n                    <p>Koszt dowozu: <b>{deliveryPrice && deliveryPrice} zł</b>, w przypadku dowozu poza Lublin koszt obliczany wg odległości.</p>\r\n                    <p>Cena produktów zawiera koszt opakowania jednorazowego</p>\r\n                    {minBonusDeliveryPrice && <p>Zamówienie powyżej {minBonusDeliveryPrice} zł <b style={{color: \"lightgreen\"}}>dostawa gratis!</b></p>}\r\n                    {bonusItems.length > 0 && minBonusItemsPrice && <p >Zamówienie powyżej {minBonusItemsPrice} zł <b style={{color: \"lightgreen\"}}>produkt gratis!</b></p>}\r\n                </div>}\r\n                {cartItems.length > 0 && <Card>\r\n            <div className=\"cart-products\">\r\n            <li className=\"item-card titles\">\r\n                    <span className='item-name'>Produkt</span>\r\n                    <span className='item-quantity-title'>Ilość</span>\r\n                    <span className='item-price-title'>Cena</span>\r\n                    <span className='item-remove-title'></span>\r\n            </li>\r\n                {showCartItems}\r\n            <li className=\"item-card summary \">\r\n                    <span className='item-name'></span>\r\n                    <span className='total'>SUMA:  <b style={{marginLeft: \"5px\", color: \"white\"}}>{total.toFixed(2)} zł</b> \r\n                    {total.toFixed(2) <= minBonusDeliveryPrice ? <b> + ({deliveryPrice} zł dostawa)</b> : <span style={{fontSize: \"0.7em\", color: \"lightgreen\"}}>(powyżej {minBonusDeliveryPrice} zł dostawa gratis)</span>} </span>\r\n            </li>\r\n            <li className=\"item-card__alert\">\r\n                    <span>{!orderValid.valid && minOrderValue && <p style={{marginRight: '1em'}}>{orderValid.message}</p>}</span>\r\n            </li>\r\n            {total.toFixed(2) > minBonusItemsPrice && <div>\r\n                <h3>Wybierz produkt gratis</h3>\r\n                <div className=\"bonus\">\r\n                {showBonusItems}\r\n                </div>\r\n            </div>}\r\n            </div>\r\n            \r\n            </Card>}\r\n            {!cartItems.length > 0 && <h3 style={{color: \"white\"}}>Brak produktów w koszyku</h3>}\r\n            {cartItems.length > 0 && <Link to=\"/zamowienie\"><Button disabled={!orderValid.valid}>Przejdź do zamówienia</Button></Link>}\r\n            {!cartItems.length > 0 && <Link to=\"/\"><Button>Przejdź do sklepu</Button></Link>}\r\n        </div>\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Cart\r\n"],"sourceRoot":""}
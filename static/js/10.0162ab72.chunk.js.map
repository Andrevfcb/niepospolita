{"version":3,"sources":["Components/Body/SuccessReservation.js"],"names":["Success","useHttpClient","isLoading","error","clearError","sendRequest","Fragment","onClear","asOverlay","className","style","marginTop","to"],"mappings":"uGAAA,yEAyBeA,UAlBC,WAEZ,MAAsDC,cAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAoBC,GAAvC,EAA0BC,YAA1B,EAAuCD,YAEvC,OACI,eAAC,IAAME,SAAP,WACA,cAAC,IAAD,CAAYH,MAAOA,EAAOI,QAASH,IAClCF,GAAa,cAAC,IAAD,CAAgBM,WAAS,IACvC,sBAAKC,UAAU,QAAf,UACI,oBAAIC,MAAO,CAACC,UAAW,SAAvB,8CACA,oBAAID,MAAO,CAACC,UAAW,SAAvB,sFACA,uBACA,cAAC,IAAD,CAAMC,GAAG,IAAT,SAAa","file":"static/js/10.0162ab72.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Store.css';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\"\r\nimport ErrorModal from \"../UIElements/ErrorModal\"\r\n\r\nconst Success = () => {\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <div className=\"store\">\r\n            <h1 style={{marginTop: \"1.5em\"}}>REZERWACJA ZOSTAŁA DOKONANA</h1>\r\n            <h4 style={{marginTop: \"1.5em\"}}>Dane dotyczące rezerwacji zostały wysłane na adres email.</h4>\r\n            <br />\r\n            <Link to='/'><p>powrót do sklepu</p></Link>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Success\r\n"],"sourceRoot":""}